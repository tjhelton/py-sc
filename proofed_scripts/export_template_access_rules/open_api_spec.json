{
    "openapi": "3.0.0",
    "info": {
        "title": "SafetyCulture API",
        "version": "v1.278.263",
        "contact": {
            "name": "SafetyCulture Support",
            "url": "https://help.safetyculture.com",
            "email": "support@safetyculture.com"
        }
    },
    "tags": [
        {
            "name": "Directory"
        }
    ],
    "paths": {
        "/accounts/organisation/v1/accounts/user/{user_id}/groups": {
            "get": {
                "summary": "List groups for a user",
                "operationId": "OrganisationService_GetUserGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.accounts.organisation.v1.GetUserGroupsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "Required. The UUID of the user to get group data for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Groups"
                ]
            }
        },
        "/accounts/organisation/v1/accounts:BulkDeleteGroups": {
            "post": {
                "summary": "Bulk delete groups",
                "operationId": "OrganisationService_BulkDeleteGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.accounts.organisation.v1.BulkDeleteGroupsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.accounts.organisation.v1.BulkDeleteGroupsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Groups"
                ]
            }
        },
        "/announcements/v1/announcement:GetHeadsUp": {
            "get": {
                "summary": "Gets Heads Up",
                "operationId": "HeadsUpService_GetHeadsUp",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID to query data for",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Heads Up"
                ]
            }
        },
        "/announcements/v1/announcement:GetHeadsUpCompletionCounts": {
            "post": {
                "summary": "Get Heads Up completion counts",
                "operationId": "HeadsUpService_GetHeadsUpCompletionCounts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.announcements.v1.GetHeadsUpCompletionCountsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.common.RequestByID"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Heads Up"
                ]
            }
        },
        "/announcements/v1/announcement:GetHeadsUpMessages": {
            "post": {
                "summary": "Get a Heads Ups comments",
                "operationId": "HeadsUpService_GetHeadsUpMessages",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.announcements.v1.GetHeadsUpMessagesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.announcements.v1.GetHeadsUpMessagesRequest"
                            }
                        }
                    },
                    "description": "The parameters for `GetHeadsUpMessages`",
                    "required": true
                },
                "tags": [
                    "Heads Up"
                ]
            }
        },
        "/announcements/v1/announcement:ListHeadsUpManage": {
            "post": {
                "summary": "List Heads Ups",
                "operationId": "HeadsUpService_ListHeadsUpManage",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListHeadsUpManage`",
                    "required": true
                },
                "tags": [
                    "Heads Up"
                ]
            }
        },
        "/announcements/v1/announcement:ListHeadsUpUsers": {
            "post": {
                "summary": "List Heads Up users",
                "operationId": "HeadsUpService_ListHeadsUpUsers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListHeadsUpUsers`",
                    "required": true
                },
                "tags": [
                    "Heads Up"
                ]
            }
        },
        "/assets/v1/assets": {
            "post": {
                "summary": "Create an asset",
                "operationId": "AssetsService_CreateAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.CreateAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.CreateAssetRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateAsset`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/bulk": {
            "post": {
                "summary": "Create multiple assets",
                "operationId": "AssetsService_BulkCreateAssets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.BulkCreateAssetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.BulkCreateAssetsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `BulkCreateAssets`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            },
            "put": {
                "summary": "Update multiple assets",
                "operationId": "AssetsService_BulkUpdateAssets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.BulkUpdateAssetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.BulkUpdateAssetsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `BulkUpdateAssets`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/list": {
            "post": {
                "summary": "List assets",
                "operationId": "AssetsService_ListAssets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.ListAssetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.ListAssetsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListAssets`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/{asset_id}/fields": {
            "patch": {
                "summary": "Set field values of an asset",
                "operationId": "AssetsService_SetAssetFieldValues",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.SetAssetFieldValuesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "asset_id",
                        "description": "Unique identifier of the asset.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.AssetsService.SetAssetFieldValuesBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/{id}": {
            "get": {
                "summary": "Get full detail information of an asset",
                "operationId": "AssetsService_GetAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.GetAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of asset to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "delete": {
                "summary": "Delete an asset",
                "operationId": "AssetsService_DeleteAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.DeleteAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of an asset to be deleted.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "patch": {
                "summary": "Update an asset",
                "operationId": "AssetsService_UpdateAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.UpdateAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The unique identifier of an asset. This ID is system-generated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "The user-defined unique identifier of an asset. This ID is user-generated."
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/s12.assets.v1.AssetType"
                                    },
                                    "fields": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/s12.assets.v1.AssetField"
                                        },
                                        "description": "The associated fields of an asset contained in an array. Each asset's\nfields are based on its asset type. Please make sure the asset fields you\nuse associated with the specified asset type. You can retrieve the\nassociated fields using the list type and field association endpoint."
                                    },
                                    "media": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/s12.common.Media"
                                        },
                                        "description": "All the media directly uploaded to an asset."
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date created timestamp of an asset.",
                                        "readOnly": true
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date last modified timetstamp of an asset.",
                                        "readOnly": true
                                    },
                                    "site": {
                                        "$ref": "#/components/schemas/s12.assets.v1.AssetSite"
                                    },
                                    "profile_image": {
                                        "$ref": "#/components/schemas/s12.common.Media"
                                    },
                                    "state": {
                                        "$ref": "#/components/schemas/s12.assets.v1.AssetState"
                                    },
                                    "inspected_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date last modified inspection of an asset.",
                                        "readOnly": true
                                    },
                                    "sourced_from_external_system": {
                                        "type": "boolean",
                                        "description": "@deprecated. Use GetAsset API to get the sourced_from_external_system\nIndicates if an asset is sourced from an external system.",
                                        "readOnly": true
                                    }
                                },
                                "title": "Asset which replaces the one with matching identifier on the server."
                            }
                        }
                    },
                    "description": "Asset which replaces the one with matching identifier on the server.",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/{id}/archive": {
            "delete": {
                "summary": "Restore an archived asset",
                "operationId": "AssetsService_RestoreArchivedAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.RestoreArchivedAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of an archived asset to be restored.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "patch": {
                "summary": "Archive an asset",
                "operationId": "AssetsService_ArchiveAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.ArchiveAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of asset to be archived.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.AssetsService.ArchiveAssetBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets/{id}/location": {
            "patch": {
                "summary": "Update asset location",
                "operationId": "AssetsService_UpdateAssetLocation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.UpdateAssetLocationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier of the asset.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.AssetsService.UpdateAssetLocationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets:GetAssetByCode": {
            "get": {
                "summary": "Get asset by code",
                "operationId": "AssetsService_GetAssetByCode",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.GetAssetByCodeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "description": "The user-defined unique identifier of an asset. This ID is user-generated.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/assets:LookupAssetsByField": {
            "post": {
                "summary": "Lookup assets by a field",
                "operationId": "AssetsService_LookupAssetsByField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.LookupAssetsByFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.LookupAssetsByFieldRequest"
                            }
                        }
                    },
                    "description": "The parameters for `LookupAssetsByField`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/fields": {
            "post": {
                "summary": "Create an asset field",
                "operationId": "FieldsService_CreateField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.CreateFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.CreateFieldRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateField`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/fields/list": {
            "post": {
                "summary": "List asset fields",
                "operationId": "FieldsService_ListFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.ListFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.ListFieldsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListFields`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/fields/{id}": {
            "delete": {
                "summary": "Delete an asset field",
                "operationId": "FieldsService_DeleteField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.DeleteFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the field to be deleted.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "patch": {
                "summary": "Update an asset field",
                "operationId": "FieldsService_UpdateField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.UpdateFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "A global unique identifier for a field.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.FieldsService.UpdateFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/types": {
            "post": {
                "summary": "Create an asset type",
                "operationId": "TypesService_CreateType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.CreateTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.CreateTypeRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateType`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/types/list": {
            "post": {
                "summary": "List asset types",
                "operationId": "TypesService_ListTypes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.ListTypesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.ListTypesRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListTypes`",
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/types/{id}": {
            "get": {
                "summary": "Get an asset type",
                "operationId": "TypesService_GetType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.GetTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of an asset type to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "delete": {
                "summary": "Delete an asset type",
                "operationId": "TypesService_DeleteType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.DeleteTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the type to be deleted.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Assets"
                ]
            },
            "patch": {
                "summary": "Update an asset type",
                "operationId": "TypesService_UpdateType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.UpdateTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The global unique identifier of the type.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.TypesService.UpdateTypeBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/types/{type_id}/fields": {
            "put": {
                "summary": "Update an asset type's asset field associations",
                "operationId": "TypesService_UpdateTypeFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.UpdateTypeFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The unique identifier of the type.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.TypesService.UpdateTypeFieldsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/assets/v1/types/{type_id}/fields/list": {
            "post": {
                "summary": "List an asset type's asset field associations",
                "operationId": "TypesService_ListTypeFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.assets.v1.ListTypeFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "Global unique identifier of the type.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.assets.v1.TypesService.ListTypeFieldsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Assets"
                ]
            }
        },
        "/audits": {
            "post": {
                "summary": "Start an inspection",
                "operationId": "ThePubService_StartInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.Inspection"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.StartInspectionRequest"
                            }
                        }
                    },
                    "description": "The parameters for `StartInspection`",
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/search": {
            "get": {
                "summary": "Search modified inspections",
                "operationId": "ThePubService_SearchInspections",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.SearchInspectionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "field",
                        "description": "The fields to return. Defaults to just `audit_id`.\n\n - audit_id: Include `audit_id` in the response.\n - modified_at: Include `modified_at` in the response.\n - template_id: Include `template_id` in the response.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "audit_id",
                                    "modified_at",
                                    "template_id"
                                ]
                            }
                        }
                    },
                    {
                        "name": "order",
                        "description": "The order to return results in.\n\n - asc: Ascending order.\n - desc: Descending order.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "asc"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "Filter inspections modified after this date time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter inspections modified before this date time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter to inspections conducted from these templates.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter results by archived status. Default is `false`.\n\n - false: Only unarchived inspections.\n - true: Only archived inspections.\n - both: Both unarchived and archived inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "name": "completed",
                        "description": "Filter results by completed status. Default is `both`.\n\n - both: Both complete and incomplete inspections.\n - false: Only incomplete inspections.\n - true: Only complete inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "both",
                                "false",
                                "true"
                            ],
                            "default": "both"
                        }
                    },
                    {
                        "name": "owner",
                        "description": "Filter results by owner. Default is `all`.\n\n - all: Owned by anyone.\n - me: Only owned by the requesting user\n - other: Only owned by other users.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "me",
                                "other"
                            ],
                            "default": "all"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit the number of results returned. Default is `100`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/{audit_id}": {
            "get": {
                "summary": "Get an inspection (legacy)",
                "operationId": "ThePubService_GetInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.Inspection"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The ID of the inspection to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ],
                "deprecated": true
            },
            "put": {
                "summary": "Update an inspection",
                "operationId": "ThePubService_UpdateInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.Inspection"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to update.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.ThePubService.UpdateInspectionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/{audit_id}/deep_link": {
            "post": {
                "summary": "Generate an inspection deep link",
                "description": "Generate a URL to the inspection with the supplied inspection ID. The link will open in the SafetyCulture mobile application if clicked on a mobile device with the SafetyCulture app installed. Otherwise it will open the inspection in the SafetyCulture web application.",
                "operationId": "ThePubService_GetInspectionDeepLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetInspectionDeepLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to retrieve a deep link for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/{audit_id}/media/{media_id}": {
            "get": {
                "summary": "Retrieve the selected media for a given inspection.",
                "operationId": "ThePubService_GetInspectionMedia",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetInspectionMediaResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to retrieve media from.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "media_id",
                        "description": "The id of the media to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/{audit_id}/share": {
            "post": {
                "summary": "Share an inspection",
                "operationId": "ThePubService_ShareInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.Inspection"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to share.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.ThePubService.ShareInspectionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/audits/{audit_id}/web_report_link": {
            "get": {
                "summary": "Get inspection web report link",
                "description": "Retrieve the web report link for the specified inspection. This will return the existing link if one has been generated before, or generate a new one if one does not exist already. </br></br> This link does not expire, it is valid until deleted.",
                "operationId": "ThePubService_GetInspectionWebReportLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetInspectionWebReportLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to retrieve a web report link for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ],
                "externalDocs": {
                    "url": "https://help.safetyculture.com/en-US/000687/"
                }
            },
            "delete": {
                "summary": "Delete inspection web report link",
                "operationId": "ThePubService_DeleteInspectionWebReportLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.DeleteInspectionWebReportLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "audit_id",
                        "description": "The id of the inspection to delete a web report link for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ],
                "externalDocs": {
                    "url": "https://help.safetyculture.com/en-US/000687/"
                }
            }
        },
        "/companies/v1beta/companies": {
            "post": {
                "summary": "Lists companies based on applied filters.",
                "operationId": "ContractorsService_ListContractorCompanies",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.ListContractorCompaniesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.ListContractorCompaniesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/company": {
            "get": {
                "summary": "Gets a contractor company.",
                "operationId": "ContractorsService_GetContractorCompany",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.GetContractorCompanyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company_type_id",
                        "description": "Optional. The ID of the contractor company type.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "description": "Required. The ID of the contractor company.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_compliance_stats",
                        "description": "Deprecated. This does nothing. Compliance statistics are now always included in the response.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Companies"
                ]
            },
            "delete": {
                "summary": "Deletes a contractor company.",
                "operationId": "ContractorsService_DeleteContractorCompany",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.DeleteContractorCompanyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company_type_id",
                        "description": "Required. The ID of the contractor company type.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "description": "Required. The ID of the contractor company.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Companies"
                ]
            },
            "post": {
                "summary": "Creates a new company.",
                "operationId": "ContractorsService_CreateContractorCompany",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.CreateContractorCompanyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.CreateContractorCompanyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            },
            "put": {
                "summary": "Updates an existing contractor company.",
                "operationId": "ContractorsService_UpdateContractorCompany",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.UpdateContractorCompanyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.UpdateContractorCompanyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/documents": {
            "post": {
                "summary": "ListCompanyDocuments returns a paginated list of documents for a company.",
                "operationId": "CompanyDocumentsService_ListCompanyDocuments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyDocumentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyDocumentsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/type-metrics": {
            "post": {
                "summary": "Lists company types with metrics",
                "operationId": "ContractorCompanyTypesService_ListCompanyTypesMetrics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesMetricsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesMetricsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/type/{id}": {
            "get": {
                "summary": "Gets a company type",
                "operationId": "ContractorCompanyTypesService_GetCompanyType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.GetCompanyTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The identifier of the field.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/types": {
            "post": {
                "summary": "Lists company types",
                "operationId": "ContractorCompanyTypesService_ListCompanyTypes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/v1beta/users": {
            "post": {
                "summary": "ListCompanyUserMetadata returns a list of users in a company, along with any additional metadata.",
                "operationId": "ContractorsService_ListCompanyUserMetadata",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyUserMetadataResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyUserMetadataRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/credentials/v1/credential": {
            "delete": {
                "summary": "Deletes a credential including all its versions.",
                "operationId": "UserDocumentsService_DeleteDocumentForUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.DeleteDocumentForUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "document_id",
                        "description": "Required. The ID of the credential to be deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "Required. The user ID this credential is associated with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "document_type_id",
                        "description": "Required. The type ID of the credential to be deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential-type": {
            "post": {
                "summary": "Creates a credential type",
                "operationId": "DocumentTypesService_CreateDocumentType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.CreateDocumentTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.CreateDocumentTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            },
            "put": {
                "summary": "Updates a credential type",
                "operationId": "DocumentTypesService_UpdateDocumentType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateDocumentTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateDocumentTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential-type/{id}": {
            "get": {
                "summary": "Gets a credential type",
                "operationId": "DocumentTypesService_GetDocumentType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The identifier of the field.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Credentials"
                ]
            },
            "delete": {
                "summary": "Deletes a credential type",
                "operationId": "DocumentTypesService_DeleteDocumentType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.DeleteDocumentTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The identifier of the field.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential-types": {
            "post": {
                "summary": "Lists credential types",
                "operationId": "DocumentTypesService_ListDocumentTypes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.ListDocumentTypesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.ListDocumentTypesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential/delete-media": {
            "post": {
                "summary": "Deletes all media for a credential version",
                "operationId": "UserDocumentsService_DeleteAllMediaForDocumentVersion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.DeleteAllMediaForDocumentVersionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.DeleteAllMediaForDocumentVersionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential/version": {
            "get": {
                "summary": "Gets a version of a credential.",
                "operationId": "UserDocumentsService_GetDocumentVersion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentVersionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "document_id",
                        "description": "Required. The ID of the credential to be retrieved.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version_id",
                        "description": "Required. The ID of the version to be retrieved.\nIf this is not provided, the latest version will be retrieved.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Credentials"
                ]
            },
            "post": {
                "summary": "Adds a version to a credential.",
                "operationId": "UserDocumentsService_AddDocumentVersionForUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.AddDocumentVersionForUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.AddDocumentVersionForUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            },
            "put": {
                "summary": "Updates a version of a credential.",
                "operationId": "UserDocumentsService_UpdateDocumentVersionForUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateDocumentVersionForUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateDocumentVersionForUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credential/versions": {
            "post": {
                "summary": "Lists all versions of a credential.",
                "operationId": "UserDocumentsService_GetDocumentHistory",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentHistoryResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentHistoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/credentials": {
            "post": {
                "summary": "Lists the latest version of credentials based on applied filters.",
                "operationId": "UserDocumentsService_GetDocuments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.GetDocumentsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/credentials/v1/settings": {
            "get": {
                "summary": "Gets the Credential settings for your organization.",
                "operationId": "UserDocumentsService_GetSettings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.GetSettingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Credentials"
                ]
            },
            "put": {
                "summary": "Updates the Credential settings for your organization.",
                "operationId": "UserDocumentsService_UpdateSettings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateSettingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.userdocuments.v1.UpdateSettingsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Credentials"
                ]
            }
        },
        "/directory/v1/folder": {
            "post": {
                "summary": "Create a folder",
                "operationId": "Directory_CreateFolder",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.CreateFolderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.CreateFolderRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateFolderRequest`",
                    "required": true
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folder/{id}": {
            "get": {
                "summary": "Retrieve a folder",
                "operationId": "Directory_GetFolder",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetFolderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier to retrieve info for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_ancestors",
                        "description": "When true, an array of the folders ancestors will also be returned.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "with_all_children_count",
                        "description": "When true, the total count of all children underneath the folder will be\nreturned. This is a recursive count and will include children of children",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            },
            "patch": {
                "summary": "Update a folder",
                "operationId": "Directory_UpdateFolderProperties",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.UpdateFolderPropertiesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier of the folder to be updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.Directory.UpdateFolderPropertiesBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folder/{id}/users": {
            "get": {
                "summary": "Retrieve users associated to a folder, includes both directly and\nindirectly (inherited)",
                "operationId": "Directory_GetAllUsersByFolder",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetAllUsersByFolderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier we want to get all the users for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "get_users_of_descendants",
                        "description": "Optional. When true, it will return all of the members of a specified folder\nand its children folders recursively. Default false, will return all of the\nmembers of a specified folder and its parent/ancestor folders.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            },
            "delete": {
                "summary": "Remove association for multiple users to a specific folder",
                "operationId": "Directory_RemoveUsersAssociation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.RemoveUsersAssociationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier we want to remove users from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_ids",
                        "description": "List of UserIDs for users with an association type of \"MEMBER\" to be disassociated with the given folder",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folder/{id}/users/associated": {
            "get": {
                "summary": "Retrieve users directly associated to a folder",
                "operationId": "Directory_GetUsersByFolder",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetUsersByFolderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier we want to get the users for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folder/{id}/users/inherited": {
            "get": {
                "summary": "Retrieve users indirectly associated (inherited) to a folder",
                "operationId": "Directory_GetInheritedUsersByFolder",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetInheritedUsersByFolderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The folder identifier we want to get the users for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folders": {
            "get": {
                "summary": "List folders",
                "operationId": "Directory_GetFolders",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetFoldersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "Required. This determines the max number of folders returned in the\nresponse.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "Optional. base64 encoded. If this field is present, the list of folders\nreturned will start from the row after this token.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by.sort_field",
                        "description": "The field to order by\n\n - SORT_FIELD_UNSPECIFIED: The sort field is unspecified\n - SORT_FIELD_NAME: Sort the folder by name\n - SORT_FIELD_FOLDER_ID: Sort the folders by folder id\n - SORT_FIELD_USER_ID: Sort the folders by user id\n - SORT_FIELD_CREATED_AT: Sort the folders by created at\n - SORT_FIELD_MODIFIED_AT: Sort the folders by modified at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_FIELD_UNSPECIFIED",
                                "SORT_FIELD_NAME",
                                "SORT_FIELD_FOLDER_ID",
                                "SORT_FIELD_USER_ID",
                                "SORT_FIELD_CREATED_AT",
                                "SORT_FIELD_MODIFIED_AT"
                            ],
                            "default": "SORT_FIELD_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "order_by.sort_order",
                        "description": "The direction to order by\n\n - SORT_ORDER_UNSPECIFIED: The sort order is not specified\n - SORT_ORDER_ASCENDING: The sort order is asc\n - SORT_ORDER_DESCENDING: The sort order is desc",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_UNSPECIFIED",
                                "SORT_ORDER_ASCENDING",
                                "SORT_ORDER_DESCENDING"
                            ],
                            "default": "SORT_ORDER_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "only_leaf_nodes",
                        "description": "Optional. When true, GetFolders will only return leaf node folders. leaf\nnodes are folders that do not have children  Defaults to false.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "with_ancestors",
                        "description": "Optional. When true, folders will be returned with a list of their\nancestors as well. Defaults to false",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "description": "When true, deleted folders will also be returned",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignore_folders_disabled",
                        "description": "Optional. When true, folders will still be returned when disabled for the\norganisation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "domain",
                        "description": "domain represents the type/domain/hierarchy for the folder. This is used\nfor getting folders of a certain domain, i.e. getting all `template`\nfolders or `site` folders",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            },
            "delete": {
                "summary": "Delete folders (bulk)",
                "operationId": "Directory_DeleteFolders",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.DeleteFoldersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "folder_ids",
                        "description": "Required. Folder ids of the folders to be deleted",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "cascade_up",
                        "description": "Deleting folders will always cascade down. If a parent is deleted, then all\nof its children are deleted. When cascade_up is true, if a child is\ndeleted, and it's parent no longer has any children, then it will be\ndeleted too. This will cascade all the way up the tree.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "domain",
                        "description": "domain represents the type/domain/hierarchy for the folder. This is used\nfor deleting folders within a specified domain",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folders/get_dynamic_by_field_id_list": {
            "post": {
                "summary": "Get Dynamic Folders by Field IDs, for User Field archive verification",
                "operationId": "Directory_GetDynamicFoldersByFieldIdList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetDynamicFoldersByFieldIdListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.GetDynamicFoldersByFieldIdListRequest"
                            }
                        }
                    },
                    "description": "The parameters for `GetDynamicFoldersByFieldIdList`",
                    "required": true
                },
                "tags": [
                    "Directory"
                ]
            }
        },
        "/directory/v1/folders/move": {
            "post": {
                "summary": "Move folder to another parent folder or as a root folder",
                "operationId": "Directory_MoveFolders",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.MoveFoldersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.MoveFoldersRequest"
                            }
                        }
                    },
                    "description": "The parameters for `MoveFoldersRequest`",
                    "required": true
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/folders/search": {
            "post": {
                "summary": "Search folders",
                "operationId": "Directory_SearchFolders",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.SearchFoldersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.SearchFoldersRequest"
                            }
                        }
                    },
                    "description": "The parameters for `SearchFoldersRequest`",
                    "required": true
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/organization/labels": {
            "get": {
                "summary": "Get custom labels",
                "operationId": "Directory_GetOrgLabels",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetOrgLabelsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/parent/{id}/folders": {
            "get": {
                "summary": "Get folders (by parent)",
                "operationId": "Directory_GetFoldersByParent",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetFoldersByParentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Optional. The identifier of the parent folder.\nWhen no parent folder ID is given all top level root folders\nwill be returned",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_members_count",
                        "description": "Optional. Whether to return the directly associated members\ncount with the folders. Defaults to false.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "The number of results to be returned.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "Optional. base64 encoded. If this field is present, the list of folders\nreturned will start from the row after this token.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_inherited_members_count",
                        "description": "Optional. Whether to include the number of inherited members\nfor each folder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "domain",
                        "description": "domain represents the type/domain/hierarchy for the folder. This is used\nfor getting folders of a certain domain, i.e. getting all `template`\nfolders or `site` folders",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "only_assigned_folders",
                        "description": "When true, GetFoldersByParent will only return folders that are assigned to\nthe user making the request. Defaults to false",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "with_deleted_folders",
                        "description": "Optional. When true, deleted folders will be returned.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/user/folder_ids": {
            "get": {
                "summary": "List folders the requesting user is associated with",
                "operationId": "Directory_GetFolderIDsForUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.GetFolderIDsForUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/user/{user_id}/folders": {
            "delete": {
                "summary": "Remove association for a specific user to multiple folders",
                "operationId": "Directory_RemoveFoldersAssociation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.RemoveFoldersAssociationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "Required. The user identifier we want to remove folders from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_ids",
                        "description": "Required. List of folder IDs to remove association to given user",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/directory/v1/users/folders/membership": {
            "post": {
                "summary": "Associate users to folders",
                "description": "Add a list of one or more users to a list of one or more folders.",
                "operationId": "Directory_AddUsersFoldersAssociations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Directory (Sites)"
                ]
            }
        },
        "/documents/v1": {
            "post": {
                "operationId": "DocumentsPublicService_CreateFile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.documents.v1.CreateFileResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.documents.v1.CreateFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/v1/archive/{item_id}": {
            "post": {
                "operationId": "DocumentsPublicService_ArchiveItem",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.documents.v1.ArchiveItemResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "item_id",
                        "description": "The ID of the item (file or folder) you want to archive.\nTo get the `item_id`, open the item in the SafetyCulture web app and copy the last part of the URL.\nFor example, in this link `https://app.safetyculture.com/documents/document/765aa2e6-69cb-43b5-8ab4-48ab26e2a094`,\nthe item ID is `765aa2e6-69cb-43b5-8ab4-48ab26e2a094`.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.documents.v1.DocumentsPublicService.ArchiveItemBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/v1/move/{item_id}": {
            "post": {
                "operationId": "DocumentsPublicService_MoveItem",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.documents.v1.MoveItemResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "item_id",
                        "description": "The ID of the item (file or folder) you want to move.\nTo get the `item_id`, open the item in the SafetyCulture web app and copy the last part of the URL.\nFor example, in this link `https://app.safetyculture.com/documents/document/765aa2e6-69cb-43b5-8ab4-48ab26e2a094`,\nthe item ID is `765aa2e6-69cb-43b5-8ab4-48ab26e2a094`.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.documents.v1.DocumentsPublicService.MoveItemBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/v1/search": {
            "post": {
                "operationId": "DocumentsPublicService_SearchItems",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.documents.v1.SearchItemsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.documents.v1.SearchItemsRequest"
                            }
                        }
                    },
                    "description": "Request to search the files and folders.",
                    "required": true
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/v1/{file_id}": {
            "patch": {
                "operationId": "DocumentsPublicService_UpdateFile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.documents.v1.UpdateFileResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "file_id",
                        "description": "The ID of the file you want to update.\nTo get the `file_id`, open the file in the SafetyCulture web app and copy the last part of the URL.\nFor example, in this link `https://app.safetyculture.com/documents/document/765aa2e6-69cb-43b5-8ab4-48ab26e2a094`,\nthe file ID is `765aa2e6-69cb-43b5-8ab4-48ab26e2a094`.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.documents.v1.DocumentsPublicService.UpdateFileBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/feed/action_assignees": {
            "get": {
                "summary": "Data feed for action assignees",
                "operationId": "ThePubService_FeedActionAssignees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedActionAssigneesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of entries to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "Actions should be last modified after this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Actions should be last modified before this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/action_timeline_items": {
            "get": {
                "summary": "Data feed for action timeline items",
                "operationId": "ThePubService_FeedActionTimelineItems",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedActionTimelineItemsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "Actions should be last modified after this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Actions should be last modified before this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/actions": {
            "get": {
                "summary": "Data feed for actions",
                "operationId": "ThePubService_FeedActions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedActionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "Actions should be last modified after this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Actions should be last modified before this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/activity_log_events": {
            "get": {
                "summary": "Data feed for activity log events",
                "operationId": "ThePubService_FeedActivityLogEvents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedActivityLogEventsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of entries to return. Capped at 250",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "Offset used for pagination.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "triggered_after",
                        "description": "Time from when organisation activities were triggered.\n\nisoDate ex: 2020-08-31T22:40:47.512Z",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "next_page_token",
                        "description": "optional. The page cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/assets": {
            "get": {
                "summary": "Data feed for assets",
                "operationId": "ThePubService_FeedAssets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedAssetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/group_users": {
            "get": {
                "summary": "Data feed for group users",
                "operationId": "ThePubService_FeedGroupUsers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedGroupUsersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/groups": {
            "get": {
                "summary": "Data feed for groups",
                "operationId": "ThePubService_FeedGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedGroupsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/inspection_items": {
            "get": {
                "summary": "Data feed for inspection items",
                "operationId": "ThePubService_FeedInspectionItems",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedInspectionItemsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "modified_after",
                        "description": "Filter inspections modified after this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter inspections modified before this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter inspections conducted from these templates.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter inspections that are archived.\n\n - false: Only include unarchived inspections.\n - true: Only include archived inspections.\n - both: Include both unarchived and archived inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "name": "completed",
                        "description": "Filter inspections that are complete.\n\n - true: Only include complete inspections.\n - false: Only include incomplete inspections.\n - both: Include both completed and incomplete inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false",
                                "both"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "include_inactive",
                        "description": "Filter to only active items (visible when conducting inspections).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/inspections": {
            "get": {
                "summary": "Data feed for inspections",
                "operationId": "ThePubService_FeedInspections",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedInspectionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "modified_after",
                        "description": "Filter inspections modified after this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter inspections modified before this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter inspections conducted from these template IDs.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter inspections that are archived.\n\n - false: Only include unarchived inspections.\n - true: Only include archived inspections.\n - both: Include both unarchived and archived inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "name": "completed",
                        "description": "Filter inspections that are complete.\n\n - true: Only include complete inspections.\n - false: Only include incomplete inspections.\n - both: Include both completed and incomplete inspections.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false",
                                "both"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "web_report_link",
                        "description": "The format for web report links returned.\n\n - private: Return private web report links that require login.\n - public: Return public web report links.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "private",
                                "public"
                            ],
                            "default": "private"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/issue_assignees": {
            "get": {
                "summary": "Data feed for issue assignees",
                "operationId": "ThePubService_FeedIssueAssignees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueAssigneesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of entries to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "next_page_token",
                        "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/issue_relations": {
            "get": {
                "summary": "Data feed for issue relations items",
                "operationId": "ThePubService_FeedIssueRelationships",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueRelationshipsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Optional. Number of results to return. Maximum is 100.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "created_after",
                        "description": "Return items created after the specified timestamp only.\nFor example: 2020-08-31T22:40:47.512Z.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "created_before",
                        "description": "Return items created before the specified timestamp only.\nFor example: 2020-08-31T22:40:47.512Z.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "next_page_token",
                        "description": "Optional. Used for pagination to retrieve the next set of results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/issue_timeline_items": {
            "get": {
                "summary": "Data feed for issue timeline items",
                "operationId": "ThePubService_FeedIssueTimelineItems",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueTimelineItemsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/issues": {
            "get": {
                "summary": "Data feed for issues",
                "operationId": "ThePubService_FeedIssues",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedIssuesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/schedule_assignees": {
            "get": {
                "summary": "Data feed for schedule assignees",
                "operationId": "ThePubService_FeedScheduleAssignees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedScheduleAssigneesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of schedules to consider (max 500)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "show_active",
                        "description": "Flag indicating should include active schedules, or not\n\n - true: Only include inactive schedules.\n - false: Only include active schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "show_finished",
                        "description": "Flag indicating should include finished schedules, or not\n\n - true: Only include not finished schedules.\n - false: Only include finished schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "show_paused",
                        "description": "Flag indicating should include paused schedules, or not\n\n - true: Only include not paused schedules.\n - false: Only include paused schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter inspections conducted from these templates.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/schedule_occurrences": {
            "get": {
                "summary": "Data feed for schedule occurrences",
                "operationId": "ThePubService_FeedScheduleOccurrences",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedScheduleOccurrencesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of schedules to consider (max 500)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "The number of entries to offset from the beginning of the queried result set.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "start_date",
                        "description": "Filter by schedule occurrences that are due after this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`. Default: NOW - 5 months",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_date",
                        "description": "Schedule occurrences that are due before this time, default: now + 1 month.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter by schedule occurrences that are due before this date and time in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`. Default: NOW + 1 months",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/schedules": {
            "get": {
                "summary": "Data feed for schedules",
                "operationId": "ThePubService_FeedSchedules",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedSchedulesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of schedules to consider (max 500)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "show_active",
                        "description": "Flag indicating should include active schedules, or not\n\n - true: Only include inactive schedules.\n - false: Only include active schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "show_finished",
                        "description": "Flag indicating should include finished schedules, or not\n\n - true: Only include not finished schedules.\n - false: Only include finished schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "show_paused",
                        "description": "Flag indicating should include paused schedules, or not\n\n - true: Only include not paused schedules.\n - false: Only include paused schedules.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    },
                    {
                        "name": "template",
                        "description": "Filter schedules created for these template IDs.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/site_members": {
            "get": {
                "summary": "Data feed for site members",
                "operationId": "ThePubService_FeedSiteMembers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedSiteMembersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/sites": {
            "get": {
                "summary": "Data feed for sites",
                "operationId": "ThePubService_FeedSites",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedSitesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "offset",
                        "description": "Number of entries to offset the results from the beginning of the queried\nresult set.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "description": "Filter sites that are deleted.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "show_only_leaf_nodes",
                        "description": "Filter only the leaf nodes be included, set to false for the full site tree, e.g. site, area, region, etc.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "true"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/template_permissions": {
            "get": {
                "summary": "Data feed for template permissions",
                "operationId": "ThePubService_FeedTemplatePermissions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatePermissionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "modified_after",
                        "description": "Filter templates modified after this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter templates modified before this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter inspections that are archived.\n\n - false: Only include unarchived template permissions.\n - true: Only include archived template permissions.\n - both: Include both unarchived and archived template permissions.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/templates": {
            "get": {
                "summary": "Data feed for templates",
                "operationId": "ThePubService_FeedTemplates",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "modified_after",
                        "description": "Filter templates modified after this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter templates modified before this date in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter inspections that are archived.\n\n - false: Only include unarchived templates.\n - true: Only include archived templates.\n - both: Include both unarchived and archived templates.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/feed/users": {
            "get": {
                "summary": "Data feed for users",
                "operationId": "ThePubService_FeedUsers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.FeedUsersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/groups": {
            "get": {
                "summary": "List groups",
                "operationId": "ThePubService_ListGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.ListGroupsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Groups"
                ]
            },
            "post": {
                "summary": "Create a group",
                "operationId": "ThePubService_CreateGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.CreateGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.CreateGroupRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateGroup`",
                    "required": true
                },
                "tags": [
                    "Groups"
                ]
            }
        },
        "/groups/{group_id}/users": {
            "get": {
                "summary": "List a group's or an organization's users",
                "operationId": "ThePubService_ListUsersInGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.ListUsersInGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "group_id",
                        "description": "The id of the group or organization to list the users in.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "The maximum number of users to return.\n\noptional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "The offset to start listing users from.\n\noptional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status to filter users by.\n\noptional\n\n - active: Active user.\n - inactive: Inactive User",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "inactive"
                                ]
                            }
                        }
                    }
                ],
                "tags": [
                    "Groups"
                ]
            }
        },
        "/groups/{group_id}/users/v2": {
            "post": {
                "summary": "Add user to a group",
                "operationId": "ThePubService_AddNewUserToGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.AddNewUserToGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "group_id",
                        "description": "The id of the group to add the user to.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.ThePubService.AddNewUserToGroupBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Groups"
                ]
            }
        },
        "/groups/{group_id}/users/{user_id}": {
            "delete": {
                "summary": "Remove user from a group",
                "operationId": "ThePubService_RemoveUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.RemoveUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "group_id",
                        "description": "The group or organisation id that the user is to be removed from.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "The id of the user to be removed.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replacement_user",
                        "description": "The user to reassign data to when removing the user from an organisation.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Groups"
                ]
            }
        },
        "/incidents/v1/fields": {
            "get": {
                "summary": "List Fields",
                "operationId": "InvestigationsService_ListFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Investigations"
                ]
            },
            "put": {
                "summary": "Update Fields",
                "operationId": "InvestigationsService_UpdateFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations": {
            "get": {
                "summary": "List Investigations",
                "operationId": "InvestigationsService_ListInvestigations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.investigation_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.status_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.title.term",
                        "description": "The term to search for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.title.match_behaviour",
                        "description": "Optional. The matching behaviour of this term\n\n - MatchBehaviourPartial: Partially match the term\n - MatchBehaviourExact: Exactly match the term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MatchBehaviourPartial",
                                "MatchBehaviourExact"
                            ],
                            "default": "MatchBehaviourUnknown"
                        }
                    },
                    {
                        "name": "filters.description.term",
                        "description": "The term to search for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.description.match_behaviour",
                        "description": "Optional. The matching behaviour of this term\n\n - MatchBehaviourPartial: Partially match the term\n - MatchBehaviourExact: Exactly match the term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MatchBehaviourPartial",
                                "MatchBehaviourExact"
                            ],
                            "default": "MatchBehaviourUnknown"
                        }
                    },
                    {
                        "name": "filters.created_at.from",
                        "description": "Optional. The start point for the filter.\nif not specified, the from component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.created_at.to",
                        "description": "Optional. The end point for the filter.\nif not specified, the to component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.modified_at.from",
                        "description": "Optional. The start point for the filter.\nif not specified, the from component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.modified_at.to",
                        "description": "Optional. The end point for the filter.\nif not specified, the to component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.created_by.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.owned_by.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_issue_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_action_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_inspection_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.category_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort.field",
                        "description": "optional. the field to sort by\n\n - InvestigationsSortFieldCreatedAt: created sort field\n - InvestigationsSortFieldModifiedAt: modified at sort field\n - InvestigationsSortFieldTitle: title sort field\n - InvestigationsSortFieldStatus: status sort field\n - InvestigationsSortFieldUniqueID: unique ID sort field\n - InvestigationsSortFieldCategoryName: category name sort field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "InvestigationsSortFieldCreatedAt",
                                "InvestigationsSortFieldModifiedAt",
                                "InvestigationsSortFieldTitle",
                                "InvestigationsSortFieldStatus",
                                "InvestigationsSortFieldUniqueID",
                                "InvestigationsSortFieldCategoryName"
                            ],
                            "default": "InvestigationsSortFieldUnknown"
                        }
                    },
                    {
                        "name": "sort.order",
                        "description": "optional. the order to sort results\n\n - InvestigationsSortOrderAsc: ascending sort order\n - InvestigationsSortOrderDesc: descending sort order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "InvestigationsSortOrderAsc",
                                "InvestigationsSortOrderDesc"
                            ],
                            "default": "InvestigationsSortOrderUnknown"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. The number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            },
            "post": {
                "summary": "Create Investigation",
                "operationId": "InvestigationsService_CreateInvestigation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.CreateInvestigationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional. the investigation ID to use for the created resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "description": "optional. the title for the investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "optional. the description for the investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "initial_status_id",
                        "description": "optional. the status to create this investigation in initially\nif not set, the default status for the organisation will be used",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            },
            "put": {
                "summary": "Update Investigations (bulk)",
                "operationId": "InvestigationsService_UpdateInvestigations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateInvestigationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/count": {
            "get": {
                "summary": "Get Investigations Count",
                "operationId": "InvestigationsService_GetInvestigationsCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationsCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.investigation_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.status_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.title.term",
                        "description": "The term to search for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.title.match_behaviour",
                        "description": "Optional. The matching behaviour of this term\n\n - MatchBehaviourPartial: Partially match the term\n - MatchBehaviourExact: Exactly match the term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MatchBehaviourPartial",
                                "MatchBehaviourExact"
                            ],
                            "default": "MatchBehaviourUnknown"
                        }
                    },
                    {
                        "name": "filters.description.term",
                        "description": "The term to search for",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters.description.match_behaviour",
                        "description": "Optional. The matching behaviour of this term\n\n - MatchBehaviourPartial: Partially match the term\n - MatchBehaviourExact: Exactly match the term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MatchBehaviourPartial",
                                "MatchBehaviourExact"
                            ],
                            "default": "MatchBehaviourUnknown"
                        }
                    },
                    {
                        "name": "filters.created_at.from",
                        "description": "Optional. The start point for the filter.\nif not specified, the from component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.created_at.to",
                        "description": "Optional. The end point for the filter.\nif not specified, the to component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.modified_at.from",
                        "description": "Optional. The start point for the filter.\nif not specified, the from component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.modified_at.to",
                        "description": "Optional. The end point for the filter.\nif not specified, the to component of the range will not apply",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "filters.created_by.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.owned_by.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_issue_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_action_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.linked_inspection_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters.category_ids.values",
                        "description": "list of values that should match",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}": {
            "get": {
                "summary": "Get Investigation",
                "operationId": "InvestigationsService_GetInvestigation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            },
            "delete": {
                "summary": "Delete Investigation",
                "operationId": "InvestigationsService_DeleteInvestigation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.DeleteInvestigationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "required. the ID of the investigation to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            },
            "put": {
                "summary": "Update Investigation",
                "operationId": "InvestigationsService_UpdateInvestigation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateInvestigationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "required. the ID of the investigation to update",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.set_title.title",
                        "description": "optional. the updated title of the investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.set_description.description",
                        "description": "required. the updated description of the investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.set_status.status_id",
                        "description": "required. The ID of the status to set for the investigation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.link_actions.action_ids",
                        "description": "required. The IDs of the actions to link to the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.unlink_actions.action_ids",
                        "description": "required. The IDs of the actions to unlink from the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.link_issues.issue_ids",
                        "description": "required. The IDs of the issues to link to the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.unlink_issues.issue_ids",
                        "description": "required. The IDs of the issues to unlink from the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.link_inspections.inspection_ids",
                        "description": "required. The IDs of the inspections to link to the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.unlink_inspections.inspection_ids",
                        "description": "required. The IDs of the inspections to unlink from the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.remove_media.media_ids",
                        "description": "required. The IDs of the media to remove from the investigation",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "operation.set_field.content.field_id",
                        "description": "unique identifier for the field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.set_field.content.title",
                        "description": "title of the field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.set_field.content.text.text",
                        "description": "The text content for this field instance",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation.delete_field.field_id",
                        "description": "required. the ID of the field to delete",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "updated_at",
                        "description": "optional. The time that the update has occurred at.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/access": {
            "get": {
                "summary": "Get Investigation Access",
                "operationId": "InvestigationsService_GetInvestigationAccess",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationAccessResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            },
            "put": {
                "summary": "Update Investigation Access",
                "operationId": "InvestigationsService_UpdateInvestigationAccess",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateInvestigationAccessResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "required. the ID of the investigation to update",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "updated_at",
                        "description": "optional. The time that the update has occurred at.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/actions": {
            "get": {
                "summary": "List Investigation Actions",
                "operationId": "InvestigationsService_ListInvestigationActions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationActionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. The number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/actions/count": {
            "get": {
                "summary": "Get Investigation Actions",
                "operationId": "InvestigationsService_GetInvestigationActionCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationActionCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/inspections": {
            "get": {
                "summary": "List Investigation Inspections",
                "operationId": "InvestigationsService_ListInvestigationInspections",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationInspectionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. The number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/inspections/count": {
            "get": {
                "summary": "Get Investigation Inspection Count",
                "operationId": "InvestigationsService_GetInvestigationInspectionCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationInspectionCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/issues": {
            "get": {
                "summary": "List Investigation Issues",
                "operationId": "InvestigationsService_ListInvestigationIssues",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationIssuesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. The number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/issues/count": {
            "get": {
                "summary": "Get Investigation Issue Count",
                "operationId": "InvestigationsService_GetInvestigationIssueCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationIssueCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/log": {
            "get": {
                "summary": "List Investigation Activity",
                "operationId": "InvestigationsService_ListInvestigationLog",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationLogResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. the number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/media": {
            "get": {
                "summary": "List Investigation Media",
                "operationId": "InvestigationsService_ListInvestigationMedia",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListInvestigationMediaResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "required. The number of results to return",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/media/count": {
            "get": {
                "summary": "Get Investigation Media Count",
                "operationId": "InvestigationsService_GetInvestigationMediaCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationMediaCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. a string to match results against",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/investigations/{investigation_id}/pdf": {
            "get": {
                "summary": "Get Investigation PDF Report",
                "operationId": "InvestigationsService_GetInvestigationPDFReport",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetInvestigationPDFReportResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "investigation_id",
                        "description": "optional (if sequence_id is set). Investigation UUID to get",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence_id",
                        "description": "optional (if investigation_id is set). Investigation sequence ID to fetch",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/incidents/v1/osha/cases": {
            "get": {
                "summary": "List Cases",
                "operationId": "OSHAService_ListCases",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListCasesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "required. page_size is the maximum number of cases to return.",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_number",
                        "description": "optional. The page to return from results using this method past 100 pages is not supported use the page_token instead.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. search is a search term to filter cases.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "establishment_id",
                        "description": "optional. establishment_id is to filter cases to a specific establishment.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year_of_filing",
                        "description": "optional. year_of_filing is to filter cases to a specific year.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "post": {
                "summary": "Create Case",
                "operationId": "OSHAService_CreateCase",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.CreateCaseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.CreateCaseRequest"
                            }
                        }
                    },
                    "description": "CreateCaseRequest is the request message for creating an OSHA case.",
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/cases/{case.case_id}": {
            "put": {
                "summary": "Update Case",
                "operationId": "OSHAService_UpdateCase",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateCaseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "case.case_id",
                        "description": "case_id is the unique identifier for the case.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.OSHAService.UpdateCaseBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/cases/{case_id}": {
            "get": {
                "summary": "Get Case",
                "operationId": "OSHAService_GetCase",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetCaseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "case_id",
                        "description": "case_id is the unique identifier for the case.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "delete": {
                "summary": "Delete Case",
                "operationId": "OSHAService_DeleteCase",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.DeleteCaseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "case_id",
                        "description": "case_id is the unique identifier for the case to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/establishments": {
            "get": {
                "summary": "List Establishments",
                "operationId": "OSHAService_ListEstablishments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListEstablishmentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "required. page_size is the maximum number of establishments to return.",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "optional. next page token from a previous response to continue fetching further results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_number",
                        "description": "optional. The page to return from results using this method past 100 pages is not supported use the page_token instead.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "description": "optional. search is a search term to filter establishments by name, company, city, or industry.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "post": {
                "summary": "Create Establishment",
                "operationId": "OSHAService_CreateEstablishment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.CreateEstablishmentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.CreateEstablishmentRequest"
                            }
                        }
                    },
                    "description": "CreateEstablishmentRequest is the request message for creating an OSHA establishment.",
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/establishments/{establishment.establishment_id}": {
            "put": {
                "summary": "Update Establishment",
                "operationId": "OSHAService_UpdateEstablishment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateEstablishmentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment.establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.OSHAService.UpdateEstablishmentBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/establishments/{establishment_id}": {
            "get": {
                "summary": "Get Establishment",
                "operationId": "OSHAService_GetEstablishment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetEstablishmentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "delete": {
                "summary": "Delete Establishment",
                "operationId": "OSHAService_DeleteEstablishment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.DeleteEstablishmentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/establishments/{establishment_id}/employees": {
            "get": {
                "summary": "Get Establishment Employees",
                "operationId": "OSHAService_GetEstablishmentEmployees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetEstablishmentEmployeesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "post": {
                "summary": "Update Establishment Employees",
                "operationId": "OSHAService_UpdateEstablishmentEmployees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateEstablishmentEmployeesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.OSHAService.UpdateEstablishmentEmployeesBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/osha/establishments/{establishment_id}/hours": {
            "get": {
                "summary": "Get Establishment Hours",
                "operationId": "OSHAService_GetEstablishmentHours",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.GetEstablishmentHoursResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "OSHA"
                ]
            },
            "post": {
                "summary": "Update Establishment Hours",
                "operationId": "OSHAService_UpdateEstablishmentHours",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateEstablishmentHoursResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "establishment_id",
                        "description": "establishment_id is the unique identifier for the establishment.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.incidents.v1.OSHAService.UpdateEstablishmentHoursBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "OSHA"
                ]
            }
        },
        "/incidents/v1/statuses": {
            "get": {
                "summary": "List Statuses",
                "operationId": "InvestigationsService_ListStatuses",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.ListStatusesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Investigations"
                ]
            },
            "put": {
                "summary": "Update Statuses",
                "operationId": "InvestigationsService_UpdateStatuses",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.incidents.v1.UpdateStatusesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "status_id_to_assign",
                        "description": "The status ID to assign existing status references to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Investigations"
                ]
            }
        },
        "/inspection/v1/export": {
            "post": {
                "summary": "Export inspection to PDF or Word",
                "operationId": "ReportsService_StartInspectionExport",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/answers/{id}": {
            "get": {
                "summary": "Get answers from an inspection",
                "description": "This endpoint is a streaming API that returns answers/responses from an inspection in real-time.\n\nA stream API pushes data to the client when it becomes available and there is no need for the client to poll the requests to the server for new data.\n\nPlease note that if you're using a classic REST client, you may find that the data returned in the stream API are individual JSON structures that are not separated by `,` (comma) or encapsulated in a collection `[...]`.",
                "operationId": "AnswerService_GetAnswersForInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/s12.inspections.v1.Answer"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/google.rpc.Status"
                                        }
                                    },
                                    "title": "Stream result of s12.inspections.v1.Answer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{id}": {
            "get": {
                "summary": "Get an inspection",
                "operationId": "InspectionService_GetInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The ID for the inspection.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            },
            "delete": {
                "summary": "Delete an inspection",
                "operationId": "InspectionService_DeleteInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.DeleteInspectionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{id}/details": {
            "get": {
                "summary": "Get details of an inspection",
                "operationId": "ExternalInspectionService_GetInspectionDetails",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionDetailsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The ID for the inspection.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_media_url",
                        "description": "Optional field to include media URLs (and metadata) in the response payload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/archive": {
            "delete": {
                "summary": "Restore an archived inspection",
                "operationId": "InspectionService_RestoreArchivedInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.RestoreArchivedInspectionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            },
            "post": {
                "summary": "Archive an inspection",
                "operationId": "InspectionService_ArchiveInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.ArchiveInspectionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.InspectionService.ArchiveInspectionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/clone": {
            "post": {
                "summary": "Clone an inspection",
                "operationId": "InspectionService_CloneInspection",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.CloneInspectionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "Required. Inspection ID to copy from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.InspectionService.CloneInspectionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/location": {
            "put": {
                "summary": "Set an inspections start or finish location",
                "operationId": "InspectionService_SetInspectionLocation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.SetInspectionLocationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "Required. The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.InspectionService.SetInspectionLocationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/owner": {
            "put": {
                "summary": "Set inspection owner",
                "operationId": "InspectionService_SetOwner",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.SetOwnerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.InspectionService.SetOwnerBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/site": {
            "put": {
                "summary": "Set inspection site",
                "operationId": "InspectionService_SetInspectionSite",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.SetInspectionSiteResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The ID of the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/s12.inspections.v1.InspectionService.SetInspectionSiteBody"
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{inspection_id}/user/{removed_user_id}/access": {
            "delete": {
                "summary": "Remove user access to an inspection",
                "operationId": "InspectionService_RemoveInspectionUserAccess",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.RemoveInspectionUserAccessResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "removed_user_id",
                        "description": "The unique identifier of the user to remove access from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_owner_id",
                        "description": "The unique identifier for a new owner of this inspection in the case that the inspection is *owned* by 'removed_user_id'.\nIf the inspection is not *owned* by 'removed_user_id', ownership will not be changed.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{metadata.inspection_id}/questions/{metadata.question_id}/asset": {
            "put": {
                "summary": "Answer an asset field question",
                "operationId": "AnswerService_AnswerAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.AnswerSubmissionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metadata.question_id",
                        "description": "The unique identifier for the question id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.AnswerService.AnswerAssetBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{metadata.inspection_id}/questions/{metadata.question_id}/checkbox": {
            "put": {
                "summary": "Answer a check box question",
                "operationId": "AnswerService_AnswerCheckbox",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.AnswerSubmissionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metadata.question_id",
                        "description": "The unique identifier for the question id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.AnswerService.AnswerCheckboxBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/inspections/v1/inspections/{metadata.inspection_id}/questions/{metadata.question_id}/dynamicfield": {
            "post": {
                "summary": "Generate Dynamic Field (AKA Repeated Section)",
                "description": "This endpoint is used to generate new dynamic field elements, aka repeated sections, under the specified dynamic field. The generated element and its items will be empty.\n\n",
                "operationId": "AnswerService_GenerateDynamicField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.inspections.v1.GenerateDynamicFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.inspection_id",
                        "description": "The unique identifier for the inspection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metadata.question_id",
                        "description": "The unique identifier for the question id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.inspections.v1.AnswerService.GenerateDynamicFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Inspections"
                ]
            }
        },
        "/integrations/v1/apps": {
            "get": {
                "summary": "List applications",
                "operationId": "PartnerIntegrationService_ListApplications",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.ListApplicationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "post": {
                "summary": "Registers a new external application",
                "operationId": "PartnerIntegrationService_RegisterApplication",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.RegisterApplicationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.RegisterApplicationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/installations": {
            "get": {
                "summary": "List all installations",
                "operationId": "PartnerIntegrationService_ListInstallations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.ListInstallationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Maximum number of entries to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "app_id",
                        "description": "Optional. If present, will filter by an application id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "next_page_token",
                        "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/{app_id}": {
            "put": {
                "summary": "Updates an external application",
                "operationId": "PartnerIntegrationService_UpdateApplication",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.UpdateApplicationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.PartnerIntegrationService.UpdateApplicationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/{app_id}/installations": {
            "post": {
                "summary": "Create an installation",
                "operationId": "PartnerIntegrationService_CreateInstallation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.CreateInstallationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.PartnerIntegrationService.CreateInstallationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/{app_id}/installations/{installation_id}": {
            "get": {
                "summary": "Get installation",
                "operationId": "PartnerIntegrationService_GetInstallation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.GetInstallationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "installation_id",
                        "description": "The unique identifier for the app installation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Apps"
                ]
            },
            "delete": {
                "summary": "Delete an installation",
                "operationId": "PartnerIntegrationService_DeleteInstallation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.DeleteInstallationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "installation_id",
                        "description": "The unique identifier for the app installation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/{app_id}/installations/{installation_id}/configurations": {
            "post": {
                "summary": "Create configuration",
                "operationId": "PartnerIntegrationService_CreateConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.CreateConfigurationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "installation_id",
                        "description": "The unique identifier for the app installation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.PartnerIntegrationService.CreateConfigurationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Apps"
                ]
            }
        },
        "/integrations/v1/apps/{app_id}/installations/{installation_id}/configurations/{configuration_id}": {
            "delete": {
                "summary": "Deletes the configuration",
                "operationId": "PartnerIntegrationService_DeleteConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.DeleteConfigurationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "installation_id",
                        "description": "The unique identifier for the app installation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configuration_id",
                        "description": "The unique identifier for the app installation configuration",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Apps"
                ]
            },
            "put": {
                "summary": "Updates the configuration",
                "operationId": "PartnerIntegrationService_UpdateConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.integrations.app.v1.UpdateConfigurationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "app_id",
                        "description": "The unique identifier for the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "installation_id",
                        "description": "The unique identifier for the app installation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configuration_id",
                        "description": "The unique identifier for the app installation configuration",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.PartnerIntegrationService.UpdateConfigurationBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Apps"
                ]
            }
        },
        "/media/v1/download/{id}": {
            "get": {
                "summary": "Get media download URL",
                "description": " ",
                "operationId": "MediaService_GetDownloadSignedURL",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.media.v1.SignedURLResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The unique identifier for the media item.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "description": "The given token, unique for each media item, to grant access.",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "download_as_attachment_name",
                        "description": "Indicates the object should be downloaded as an attachment and\nsaved with the given name.\nAt the least, the file name should contain a name plus a 3-letter file\nextension e.g. test.png, conditions.pdf, a.jpg.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "media_type",
                        "description": "The media type associated with the download request.\n\n - MEDIA_TYPE_IMAGE: An image file (GIF, JPG, PNG, WEBP).\n - MEDIA_TYPE_VIDEO: A video file (MP4, MOV).\n - MEDIA_TYPE_PDF: A PDF document.\n - MEDIA_TYPE_DOCX: A Microsoft Word document (DOCX, DOC).\n - MEDIA_TYPE_XLSX: A Microsoft Excel spreadsheet (XLSX, XLS).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MEDIA_TYPE_IMAGE",
                                "MEDIA_TYPE_VIDEO",
                                "MEDIA_TYPE_PDF",
                                "MEDIA_TYPE_DOCX",
                                "MEDIA_TYPE_XLSX"
                            ],
                            "default": "MEDIA_TYPE_NONE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "Media"
                ]
            }
        },
        "/permissions/v1/permission_set/assign": {
            "post": {
                "summary": "Assign user to a permission set",
                "operationId": "PermissionsService_AssignPermissionSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.permissions.v1.AssignPermissionSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.permissions.v1.AssignPermissionSetRequest"
                            }
                        }
                    },
                    "description": "The request for AssignPermissionSet.",
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/permissions/v1/permission_set/{id}": {
            "get": {
                "summary": "Get a permission set",
                "operationId": "PermissionsService_GetPermissionSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.permissions.v1.GetPermissionSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The ID of the permission set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_users",
                        "description": "Whether to include users in the response.\n\nOnly includes a preview of 10 users, not the entire list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ]
            }
        },
        "/permissions/v1/permission_sets": {
            "post": {
                "summary": "List permission sets",
                "operationId": "PermissionsService_ListPermissionSets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.permissions.v1.ListPermissionSetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.permissions.v1.ListPermissionSetsRequest"
                            }
                        }
                    },
                    "description": "The request for ListPermissionSets.",
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/response_sets": {
            "post": {
                "summary": "Create a global response set",
                "operationId": "ThePubService_CreateGlobalResponseSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.CreateGlobalResponseSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.CreateGlobalResponseSetRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateGlobalResponseSet`",
                    "required": true
                },
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            }
        },
        "/response_sets/v2": {
            "get": {
                "summary": "List global response sets",
                "operationId": "ThePubService_ListAllGlobalResponseSets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.ListAllGlobalResponseSetsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "The maximum number of results to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            }
        },
        "/response_sets/{id}": {
            "get": {
                "summary": "Get a global response set",
                "operationId": "ThePubService_GetGlobalResponseSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetGlobalResponseSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            },
            "delete": {
                "summary": "Delete a global response set",
                "operationId": "ThePubService_DeleteGlobalResponseSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.DeleteGlobalResponseSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            },
            "put": {
                "summary": "Update a global response set",
                "operationId": "ThePubService_UpdateGlobalResponseSet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.UpdateGlobalResponseSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.ThePubService.UpdateGlobalResponseSetBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            }
        },
        "/response_sets/{id}/responses": {
            "post": {
                "summary": "Create a global response set response",
                "operationId": "ThePubService_CreateGRSResponse",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.CreateGRSResponseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.UpdateGRSResponse"
                            }
                        }
                    },
                    "description": "The response to add to the global response set.",
                    "required": true
                },
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            }
        },
        "/response_sets/{id}/responses/{response_id}": {
            "delete": {
                "summary": "Delete a global response set response",
                "operationId": "ThePubService_DeleteGRSResponse",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.DeleteGRSResponseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response_id",
                        "description": "The id of response to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            },
            "put": {
                "summary": "Update a global response set response",
                "operationId": "ThePubService_UpdateGRSResponse",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.UpdateGRSResponseResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the global response set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response_id",
                        "description": "The id of response to update.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.UpdateGRSResponse"
                            }
                        }
                    },
                    "description": "The response to update.",
                    "required": true
                },
                "tags": [
                    "Response Sets"
                ],
                "externalDocs": {
                    "description": "Learn more about global response sets (GRS)",
                    "url": "https://help.safetyculture.com/en-US/000074/"
                }
            }
        },
        "/schedules/v1/schedule_items": {
            "get": {
                "summary": "List schedule items",
                "operationId": "SchedulesService_ListScheduleItems",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.schedules.v1.ListScheduleItemsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "Number of messages to be returned in a single request. Maximum\n100. Non-positive values are ignored.  The presence of `next_page_token` in\nthe response indicates that more results might be available. For example:\n'20'",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "If present, then retrieve the next batch of results from the\npreceding call to this method.  `page_token` must be the value of\n`next_page_token` from the previous response.  The values of other method\nparameters should be identical to those in the previous call.\nFor example: 'MzA='",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "statuses",
                        "description": "Filter ScheduleItems to those with one of the the given status\n\n - STATUS_UNSPECIFIED: Unspecified status value\n - ACTIVE: Default value - schedule item is still active\n - PAUSED: Schedule has been paused e.g. manually paused/org frozen\n - NO_TEMPLATE: The template used for this schedule item has been deleted/archived\n - NO_ASSIGNEE: No valid assignees exist for this schedule item anymore\n - FINISHED: The schedule item has hit its end date or count limit and is now complete\n - SUBSCRIPTION_INACTIVE: User/org subscription is inactive\n - NO_SITE: The site used for this schedule has been removed",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "STATUS_UNSPECIFIED",
                                    "ACTIVE",
                                    "PAUSED",
                                    "NO_TEMPLATE",
                                    "NO_ASSIGNEE",
                                    "FINISHED",
                                    "SUBSCRIPTION_INACTIVE",
                                    "NO_SITE"
                                ]
                            }
                        }
                    }
                ],
                "tags": [
                    "Schedules"
                ]
            },
            "post": {
                "summary": "Create a schedule item",
                "operationId": "SchedulesService_CreateScheduleItem",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.schedules.v1.CreateScheduleItemResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.schedules.v1.UpdateScheduleItem"
                            }
                        }
                    },
                    "description": "The schedule item to be created. The schedule will be created in the timezone of the authenticated user's profile timezone.",
                    "required": true
                },
                "tags": [
                    "Schedules"
                ]
            }
        },
        "/schedules/v1/schedule_items/{id}": {
            "delete": {
                "summary": "Delete a schedule item",
                "operationId": "SchedulesService_DeleteScheduleItem",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.schedules.v1.DeleteScheduleItemResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Schedules"
                ]
            },
            "put": {
                "summary": "Update a schedule item",
                "operationId": "SchedulesService_UpdateScheduleItem",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.schedules.v1.UpdateScheduleItemResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the schedule item to update",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.schedules.v1.UpdateScheduleItem"
                            }
                        }
                    },
                    "description": "The new schedule item",
                    "required": true
                },
                "tags": [
                    "Schedules"
                ]
            }
        },
        "/sensors/v1/sensors/ingest-readings": {
            "post": {
                "summary": "Ingest sensor readings",
                "operationId": "SensorsService_IngestSensorReadings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.IngestSensorReadingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.sensors.v1.IngestSensorReadingsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `IngestSensorReadingsRequest`",
                    "required": true
                },
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/sensors/v1/sensors/list": {
            "post": {
                "summary": "List sensors",
                "operationId": "SensorsService_ListSensors",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.ListSensorsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.sensors.v1.ListSensorsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ListSensorsRequest`",
                    "required": true
                },
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/sensors/v1/sensors/provision": {
            "post": {
                "summary": "Provision a sensor",
                "operationId": "SensorsService_ProvisionSensor",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.ProvisionSensorResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.sensors.v1.ProvisionSensorRequest"
                            }
                        }
                    },
                    "description": "The parameters for `ProvisionSensorRequest`",
                    "required": true
                },
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/sensors/v1/sensors/sensor-id/{device_id}": {
            "get": {
                "summary": "Get a sensor ID",
                "operationId": "SensorsService_GetSensorId",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.GetSensorIdResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "device_id",
                        "description": "The id of the device that was used to provision the sensor.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_name",
                        "description": "An optional name to identify the source of the readings for this sensor.\nThis name could be the provider of the sensor, or a platform through\nwhich the sensor is managed.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/share/connections": {
            "get": {
                "summary": "List calling user's groups and organizations",
                "operationId": "ThePubService_GetUserGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetUserGroupsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Groups"
                ]
            }
        },
        "/tasks/v1/actions": {
            "post": {
                "summary": "Create an action",
                "operationId": "ActionsService_CreateAction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateActionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CreateActionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/delete": {
            "post": {
                "summary": "Delete actions (Bulk)",
                "operationId": "ActionsService_DeleteActions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.DeleteActionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/list": {
            "post": {
                "summary": "List actions",
                "operationId": "ActionsService_GetActions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.ActionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.GetActionsRequest"
                            }
                        }
                    },
                    "description": "The parameters for `GetActionsRequest`",
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/schedule": {
            "post": {
                "summary": "Create an action with recurring schedule",
                "operationId": "ActionsService_CreateActionSchedule",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateActionScheduleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/s12.tasks.v1.CreateActionScheduleRequest"
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{action_id}/label": {
            "put": {
                "summary": "Updates the labels associated with an action",
                "operationId": "ActionsService_UpdateActionLabels",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateActionLabelsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "action_id",
                        "description": "action_id is the ID of the action to be updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateActionLabelsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{id}": {
            "get": {
                "summary": "Get an Action",
                "operationId": "ActionsService_GetAction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.ActionResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID to query data for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/asset": {
            "put": {
                "summary": "Update the asset of an action",
                "operationId": "ActionsService_UpdateAsset",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateAssetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateAssetBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/assignees": {
            "put": {
                "summary": "Update the assignees of an action",
                "operationId": "ActionsService_UpdateAssignees",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateAssigneesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The unique identifier for the task to be updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateAssigneesBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/description": {
            "put": {
                "summary": "Update the description of an action",
                "operationId": "ActionsService_UpdateDescription",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateDescriptionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/due_at": {
            "put": {
                "summary": "Update the due date of an action",
                "operationId": "ActionsService_UpdateDueAt",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateDueAtBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/priority": {
            "put": {
                "summary": "Update the priority of an action",
                "operationId": "ActionsService_UpdatePriority",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdatePriorityBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/shared_link": {
            "get": {
                "summary": "Get an action link",
                "operationId": "ActionsService_GetActionSharedLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetActionSharedLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The unique identifier for the action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            },
            "delete": {
                "summary": "Delete an action link",
                "operationId": "ActionsService_RevokeActionSharedLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.RevokeActionSharedLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The unique identifier for the action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            },
            "post": {
                "summary": "Create an action link",
                "operationId": "ActionsService_CreateActionSharedLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateActionSharedLinkResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The unique identifier for the action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/site": {
            "put": {
                "summary": "Update the site of an action",
                "operationId": "ActionsService_UpdateSite",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateSiteResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateSiteBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/status": {
            "put": {
                "summary": "Update the status of an action",
                "operationId": "ActionsService_UpdateStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The ID of the action or issue you're updating.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateStatusBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions/{task_id}/title": {
            "put": {
                "summary": "Update the title of an action",
                "operationId": "ActionsService_UpdateTitle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.ActionsService.UpdateTitleBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/actions:CreateActionSchedule": {
            "post": {
                "summary": "Create an action with recurring schedule",
                "operationId": "ActionsService_CreateActionSchedule2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateActionScheduleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/s12.tasks.v1.CreateActionScheduleRequest"
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/action_labels": {
            "get": {
                "summary": "Get all action labels",
                "operationId": "CustomerConfigurationService_GetActionLabels",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetActionLabelsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/action_labels/delete": {
            "post": {
                "summary": "Delete action labels",
                "operationId": "CustomerConfigurationService_DeleteActionLabels",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.DeleteActionLabelsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.DeleteActionLabelsRequest"
                            }
                        }
                    },
                    "description": "DeleteActionLabelsRequest is the request for deleting a list of action labels.",
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/action_labels/upsert": {
            "put": {
                "summary": "Create or update an action label",
                "operationId": "CustomerConfigurationService_UpsertActionLabel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpsertActionLabelResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.UpsertActionLabelRequest"
                            }
                        }
                    },
                    "description": "UpsertActionLabelRequest represents the request to create or update an action label in your organization.",
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/custom_field/{id}": {
            "delete": {
                "summary": "Delete a custom field",
                "operationId": "CustomerConfigurationService_DeleteCustomField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.DeleteCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The ID of the custom field you want to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            },
            "put": {
                "summary": "Rename a custom field",
                "operationId": "CustomerConfigurationService_RenameCustomField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.RenameCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The ID of the custom field you want to rename",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CustomerConfigurationService.RenameCustomFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/custom_field/{type_id}": {
            "post": {
                "summary": "Create a custom field and map it to a specific action type",
                "operationId": "CustomerConfigurationService_CreateCustomField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The ID of the task type to map the custom field to",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CustomerConfigurationService.CreateCustomFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/task_type": {
            "post": {
                "summary": "Create an action type",
                "operationId": "CustomerConfigurationService_CreateTaskType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateTaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CreateTaskTypeRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateTaskType`",
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/task_type/{id}": {
            "delete": {
                "summary": "Delete an action type",
                "operationId": "CustomerConfigurationService_DeleteTaskType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.DeleteTaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the action type you want to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            },
            "put": {
                "summary": "Rename an action type",
                "operationId": "CustomerConfigurationService_RenameTaskType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.RenameTaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the action type you want to rename",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CustomerConfigurationService.RenameTaskTypeBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/{type_id}/custom_field/{field_id}": {
            "delete": {
                "summary": "Unmap a field from a action type",
                "operationId": "CustomerConfigurationService_UnmapFieldFromTaskType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UnmapFieldFromTaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The ID of the action type to unmap from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_id",
                        "description": "The ID of the custom field to unmap",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            },
            "put": {
                "summary": "Map a field to a action type",
                "operationId": "CustomerConfigurationService_MapFieldToTaskType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.MapFieldToTaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The ID of the action type to map to.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_id",
                        "description": "The ID for the custom field to be mapped.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CustomerConfigurationService.MapFieldToTaskTypeBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/{type_id}/custom_fields/mapped": {
            "get": {
                "summary": "Get all custom fields mapped to a specific action type",
                "operationId": "CustomerConfigurationService_GetTaskTypeCustomFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetTaskTypeCustomFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The identifier of the type to get mappings for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customer_configuration/{type_id}/custom_fields/unmapped": {
            "get": {
                "summary": "Get the custom fields not mapped to a specific action type",
                "operationId": "CustomerConfigurationService_GetOrgTaskTypeUnmappedFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetOrgTaskTypeUnmappedFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type_id",
                        "description": "The ID of the action type to get unmapped fields for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/customerconfiguration/categories": {
            "get": {
                "summary": "List Categories",
                "operationId": "CustomerConfigurationService_GetCategories",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetCategoriesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "include_deleted",
                        "description": "Optional. If this is set to true, all categories including deleted\ncategories will be returned.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "description": "Search used to search for specific named categories",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_ids",
                        "description": "Define specific categoryIDs to filter for",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page_token",
                        "description": "Page token used to scroll for the next set of categories",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "Number of categories to respond with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "description": "Optional. Direction for sorting.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_DIRECTION_UNSPECIFIED",
                                "SORT_DIRECTION_ASC",
                                "SORT_DIRECTION_DESC"
                            ],
                            "default": "SORT_DIRECTION_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "is_managing",
                        "description": "Optional. Flag to indicate if the categories are being fetched to manage categories\nif true, the `\"admin:incidents\"` permission will be required, and category visibility is ignored.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incident/{id}": {
            "get": {
                "summary": "Get Issue",
                "operationId": "IncidentsService_GetIncidentById",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.IncidentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The unique ID of the incident to retrieve. Can either be a uuid\nor a org level unique incident id. Example: IS-4352",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents": {
            "post": {
                "summary": "Create Issue (legacy)",
                "operationId": "IncidentsService_CreateIncident",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.CreateIncidentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.CreateIncidentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ],
                "deprecated": true
            }
        },
        "/tasks/v1/incidents/delete": {
            "post": {
                "summary": "Delete Issues",
                "operationId": "IncidentsService_DeleteIncidents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.DeleteIncidentsRequest"
                            }
                        }
                    },
                    "description": "DeleteIncidentsRequest represents the list of issue UUIDs to delete.",
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/list": {
            "post": {
                "summary": "List Issues",
                "operationId": "IncidentsService_GetIncidents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.IncidentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/s12.tasks.v1.GetIncidentsRequest"
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/list/count": {
            "post": {
                "summary": "Get count of Issues",
                "operationId": "IncidentsService_GetIncidentsCount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsCountResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/s12.tasks.v1.GetIncidentsRequest"
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/submit": {
            "post": {
                "summary": "Create Issue",
                "operationId": "IncidentsService_SubmitIncident",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.SubmitIncidentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.SubmitIncidentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{id}": {
            "get": {
                "summary": "Get Issue (legacy)",
                "operationId": "IncidentsService_GetIncident",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.IncidentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID to query data for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Issues"
                ],
                "deprecated": true
            }
        },
        "/tasks/v1/incidents/{incident_id}/questions_answers": {
            "get": {
                "summary": "Get Issue questions and answers",
                "operationId": "IncidentsService_GetIncidentQuestionsAndAnswers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentQuestionsAndAnswersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "incident_id",
                        "description": "The ID of the issue.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/category": {
            "put": {
                "summary": "Update Category",
                "operationId": "IncidentsService_UpdateCategory",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the issue being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateCategoryBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/collaborators/add": {
            "post": {
                "summary": "Add Issue assignee",
                "operationId": "IncidentsService_AddCollaborators",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.AddCollaboratorsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/collaborators/remove": {
            "post": {
                "summary": "Remove Issue assignee",
                "operationId": "IncidentsService_RemoveCollaborators",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.RemoveCollaboratorsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/description": {
            "put": {
                "summary": "Update Issue description",
                "operationId": "IncidentsService_UpdateDescription",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateDescriptionBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/due_at": {
            "put": {
                "summary": "Update Issue due date",
                "operationId": "IncidentsService_UpdateDueAt",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateDueAtBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/occurred_at": {
            "put": {
                "summary": "Update Issue occurred at",
                "operationId": "IncidentsService_UpdateOccurredAt",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateOccurredAtResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateOccurredAtBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/pdf_report": {
            "get": {
                "summary": "Export Issue to PDF",
                "operationId": "IncidentsService_GetPDFReport",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetPDFReportResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "The ID of the incident which the report is being created for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/priority": {
            "put": {
                "summary": "Update Issue priority",
                "operationId": "IncidentsService_UpdatePriority",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdatePriorityBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/site": {
            "put": {
                "summary": "Update Issue site",
                "operationId": "IncidentsService_UpdateSite",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateSiteResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateSiteBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/status": {
            "put": {
                "summary": "Updates Issue status",
                "operationId": "IncidentsService_UpdateStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The ID of the action or issue you're updating.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateStatusBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/incidents/{task_id}/title": {
            "put": {
                "summary": "Update Issue title",
                "operationId": "IncidentsService_UpdateTitle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The UUID of the task being updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.IncidentsService.UpdateTitleBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/shared_link/{task_id}/web_report": {
            "post": {
                "summary": "Get Issue web report link",
                "operationId": "SharedLinkService_GenerateForWebReport",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GenerateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "Required. The unique identifier of the issue to create a shareable link for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.SharedLinkService.GenerateForWebReportBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues"
                ]
            }
        },
        "/tasks/v1/tasks/{task_id}/custom_field": {
            "put": {
                "summary": "Update a custom field for an Action",
                "operationId": "TasksService_UpdateTaskCustomField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.UpdateTaskCustomFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "task_id",
                        "description": "The unique identifier of an action in the form of UUID.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.TasksService.UpdateTaskCustomFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Actions"
                ]
            }
        },
        "/tasks/v1/timeline": {
            "post": {
                "summary": "List timeline events",
                "operationId": "TimelineService_GetTimeline",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.tasks.v1.GetTimelineResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.GetTimelineRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues",
                    "Actions"
                ]
            }
        },
        "/tasks/v1/timeline/comments": {
            "post": {
                "summary": "Add comment to timeline",
                "operationId": "TimelineService_AddComment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.tasks.v1.AddCommentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Issues",
                    "Actions"
                ]
            }
        },
        "/templates/search": {
            "get": {
                "summary": "Search modified templates",
                "operationId": "ThePubService_SearchTemplates",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.SearchTemplatesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "limit",
                        "description": "Limit the number of results returned. Default is `1000`.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "field",
                        "description": "The fields to return. Defaults to just `audit_id`.\n\n - template_id: Include `template_id` in the response.\n - name: Include `name` in the response.\n - modified_at: Include `modified_at` in the response.\n - created_at: Include `modified_at` in the response.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "template_id",
                                    "name",
                                    "modified_at",
                                    "created_at"
                                ]
                            }
                        }
                    },
                    {
                        "name": "order",
                        "description": "The order to return results in.\n\n - asc: Order by `modified_at` in ascending order.\n - desc: Order by `modified_at` in descending order.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "asc"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "Filter results modified after this date time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "modified_before",
                        "description": "Filter results modified before this date time.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "archived",
                        "description": "Filter results by archived status.\n\n - false: Only include unarchived templates.\n - true: Only include archived templates.\n - both: Include both archived and unarchived templates.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true",
                                "both"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "name": "owner",
                        "description": "Filter results by owner.\n\n - all: Include all templates.\n - me: Only include templates owned by the requesting user.\n - other: Only include templates owned by other users.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "me",
                                "other"
                            ],
                            "default": "all"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/v1/template:DeleteTemplateByID": {
            "delete": {
                "summary": "Delete a template by template ID",
                "operationId": "TemplatesService_DeleteTemplateByID2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.DeleteTemplateByIDResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "The unique identifier for the template",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/v1/template:RestoreArchivedTemplate": {
            "post": {
                "summary": "Restore an archived template",
                "operationId": "TemplatesService_RestoreArchivedTemplate2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.RestoreArchivedTemplateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.templates.v1.RestoreArchivedTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/v1/templates/inspections/{inspection_id}": {
            "get": {
                "summary": "Get template (by inspection)",
                "operationId": "TemplatesService_GetTemplateByInspectionID",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.GetTemplateByInspectionIDResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "inspection_id",
                        "description": "The ID for the inspection.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locale",
                        "description": "The preferred locale of the template.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/v1/templates/{template_id}": {
            "get": {
                "summary": "Get a template",
                "operationId": "TemplatesService_GetTemplateByID",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.GetTemplateByIDResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "Unique template id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locale",
                        "description": "The preferred locale of the template.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            },
            "delete": {
                "summary": "Delete a template by template ID",
                "operationId": "TemplatesService_DeleteTemplateByID",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.DeleteTemplateByIDResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "The unique identifier for the template",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/v1/templates/{template_id}/archive": {
            "delete": {
                "summary": "Restore an archived template",
                "operationId": "TemplatesService_RestoreArchivedTemplate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.RestoreArchivedTemplateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "The unique identifier for the template",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Templates"
                ]
            },
            "post": {
                "summary": "Archive a template",
                "operationId": "TemplatesService_ArchiveTemplate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.templates.v1.ArchiveTemplateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "The unique identifier for the template",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.templates.v1.TemplatesService.ArchiveTemplateBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Templates"
                ]
            }
        },
        "/training/analytics/v1/courses/statistics": {
            "get": {
                "summary": "Get Course Statistics",
                "description": "Retrieves all course statistics for courses in your organization.",
                "operationId": "TrainingAnalyticsService_GetCourseStatistics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetCourseStatisticsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/lessons/attempts": {
            "get": {
                "summary": "Get Lesson Attempts",
                "description": "Retrieves all lesson attempts for users in your organization.",
                "operationId": "TrainingAnalyticsService_GetLessonAttempts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetLessonAttemptsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "[Optional] User ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_external_id",
                        "description": "[Optional] Course external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_id",
                        "description": "[Optional] Lesson ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_external_id",
                        "description": "[Optional] Lesson external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_datetime",
                        "description": "[Optional] The minimum date of the record to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "completed_datetime",
                        "description": "[Optional] The maximum date of the record to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/lessons/progress/events": {
            "get": {
                "summary": "Get Lesson Progress Events",
                "description": "Retrieves all lesson progress events for users in your organization.",
                "operationId": "TrainingAnalyticsService_GetLessonProgressEvents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetLessonProgressEventsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_event_datetime",
                        "description": "[Optional] The max date of the event. Defaults to current date. Cannot be more than 7 days after MinEventDateTime. Expects UTC date.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "min_event_datetime",
                        "description": "[Optional] The min date of the event. Defaults to 7 days ago. Expects UTC date.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/lessons/statistics": {
            "get": {
                "summary": "Get Lesson Statistics",
                "description": "Retrieves all lesson statistics for lessons in your organization.",
                "operationId": "TrainingAnalyticsService_GetLessonStatistics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetLessonStatisticsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/rapidRefresh/answers": {
            "get": {
                "summary": "Get Rapid Refresh Answers",
                "description": "Retrieves all rapid refresh slide answers from users in your organization.",
                "operationId": "TrainingAnalyticsService_GetRapidRefreshAnswers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetRapidRefreshAnswersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rapid_refresh_id",
                        "description": "[Optional] Rapid refresh ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "[Optional] User ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "question_id",
                        "description": "[Optional] Rapid refresh question ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/slides/statistics": {
            "get": {
                "summary": "Get Slide Statistics",
                "description": "Retrieves all slide statistics for slides in your organization.",
                "operationId": "TrainingAnalyticsService_GetSlideStatistics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetSlideStatisticsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "only_active",
                        "description": "[Optional] Only show current, active, published slide data. Defaults to false",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/surveys/answers": {
            "get": {
                "summary": "Get Survey Answers",
                "description": "Retrieves all survey answers from users in your organization.",
                "operationId": "TrainingAnalyticsService_GetSurveyAnswers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetSurveyAnswersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_external_id",
                        "description": "[Optional] Course external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_id",
                        "description": "[Optional] Lesson ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_external_id",
                        "description": "[Optional] Lesson external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "[Optional] User ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_external_id",
                        "description": "[Optional] User external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_datetime",
                        "description": "[Optional] The minimum date of the record to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_datetime",
                        "description": "[Optional] The maximum date of the record to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/surveys/questionDefinitions": {
            "get": {
                "summary": "Get Survey Question Definitions",
                "description": "Retrieves all survey question definitions in your organization.",
                "operationId": "TrainingAnalyticsService_GetSurveyQuestionDefinitions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetSurveyQuestionDefinitionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_external_id",
                        "description": "[Optional] Course external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_id",
                        "description": "[Optional] Lesson ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lesson_external_id",
                        "description": "[Optional] Lesson external ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/users/{user_id}/lessons/progress": {
            "get": {
                "summary": "Get User Lesson Progress",
                "description": "Retrieves lesson progress for a specific user.",
                "operationId": "TrainingAnalyticsService_GetUserLessonProgress",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetUserLessonProgressResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID to filter by",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_modified_datetime",
                        "description": "[Optional] The minimum modified date of the lesson progress. Expects UTC date eg. 2019-12-31T06:30:00.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "max_modified_datetime",
                        "description": "[Optional] The maximum modified date of the lesson progress. Expects UTC date eg. 2019-12-31T06:30:00.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/users/{user_id}/lessons/progress/events": {
            "get": {
                "summary": "Get User Lesson Progress Events",
                "description": "Retrieves lesson progress events for a specific user.",
                "operationId": "TrainingAnalyticsService_GetUserLessonProgressEvents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetUserLessonProgressEventsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID to filter by",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "course_id",
                        "description": "[Optional] Course ID to filter by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_event_datetime",
                        "description": "[Optional] The min date of the event. Expects UTC date eg. 2019-12-31T06:30:00.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "min_event_datetime",
                        "description": "[Optional] The max date of the event. Expects UTC date eg. 2019-12-31T06:30:00.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/analytics/v1/users/{user_id}/slides/statistics": {
            "get": {
                "summary": "Get Slide User Statistics",
                "description": "Retrieves all slide statistics for users in your organization.",
                "operationId": "TrainingAnalyticsService_GetSlideUserStatistics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.analytics.v1.GetSlideUserStatisticsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID to filter by",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "only_active",
                        "description": "[Optional] Only show current, active, published slide data. Defaults to false",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/collections/v1": {
            "get": {
                "summary": "Get collections",
                "description": "Retrieves all collections in your organization.",
                "operationId": "TrainingCollectionsService_GetCourseCollections",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.collections.v1.GetCourseCollectionsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "modified_since",
                        "description": "[Optional] The minimum modified date of the collection.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/collections/v1/{course_collection_id}/courses": {
            "get": {
                "summary": "Get courses by collection",
                "description": "Retrieves all courses in a collection.",
                "operationId": "TrainingCollectionsService_GetCoursesByCourseCollectionId",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.collections.v1.GetCoursesByCourseCollectionIdResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "course_collection_id",
                        "description": "ID of the collection",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "courseware_version_type",
                        "description": "Version type of the courses (1 = Published, 2 = Latest)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_draft",
                        "description": "Include draft courses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/courses/v1": {
            "get": {
                "summary": "Get courses",
                "description": "Retrieves all courses in your organization.",
                "operationId": "TrainingCoursesService_GetCourses",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.courses.v1.GetCoursesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "modified_since",
                        "description": "[Optional] The The minimum modified date of the course.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "publication_status",
                        "description": "[Optional] The publication status of the course.\n\n - PUBLICATION_STATUS_UNKNOWN: Unknown publication status\n - PUBLICATION_STATUS_PUBLISHED: course is published",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PUBLICATION_STATUS_UNKNOWN",
                                "PUBLICATION_STATUS_PUBLISHED"
                            ],
                            "default": "PUBLICATION_STATUS_UNKNOWN"
                        }
                    },
                    {
                        "name": "course_ids",
                        "description": "[Optional] Filter by specific course IDs. If empty, all courses matching other filters will be returned.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "locale",
                        "description": "[Optional] The preferred locale of the course.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_term",
                        "description": "[Optional] The search term to filter out courses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_ids",
                        "description": "[Optional] Filter by assigned group IDs. If empty, all courses matching other filters will be returned.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "site_ids",
                        "description": "[Optional] Filter by assigned site IDs. If empty, all courses matching other filters will be returned.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "[Optional] Filter by a users enrolled Courses. If empty, all courses matching other filters will be returned.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/courses/v1/{course_id}/assignments": {
            "put": {
                "summary": "Update course assignments",
                "description": "Updates assignments for users, groups, and sites for a specific course.",
                "operationId": "TrainingCoursesService_UpdateCourseAssignments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.courses.v1.UpdateCourseAssignmentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "course_id",
                        "description": "Id of the course that the assignments belongs to",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.training.courses.v1.TrainingCoursesService.UpdateCourseAssignmentsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/courses/v1/{course_id}/lessons": {
            "get": {
                "summary": "Get lessons by course ID",
                "description": "Retrieves all lessons for a given course.",
                "operationId": "TrainingCoursesService_GetLessonsByCourseId",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.courses.v1.GetLessonsByCourseIdResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "course_id",
                        "description": "ID of the course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/individualleaderboards/v1": {
            "get": {
                "summary": "Get individual leaderboards",
                "description": "Retrieves all individual leaderboards in your organization.",
                "operationId": "TrainingIndividualleaderboardsService_GetIndividualLeaderboards",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.individualleaderboards.v1.GetIndividualLeaderboardsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of individual leaderboards to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/individualleaderboards/v1/rankings": {
            "get": {
                "summary": "Get individual leaderboard rankings",
                "description": "Retrieves rankings for a specific individual leaderboard.",
                "operationId": "TrainingIndividualleaderboardsService_GetIndividualLeaderboardRankings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.individualleaderboards.v1.GetIndividualLeaderboardRankingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "leaderboard_id",
                        "description": "ID of the individual leaderboard",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/paths/v1": {
            "get": {
                "summary": "Get paths",
                "description": "Retrieves a list of learning paths in your organization.",
                "operationId": "TrainingPathsService_GetPaths",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.paths.v1.GetPathsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/paths/v1/{path_id}": {
            "get": {
                "summary": "Get path by ID",
                "description": "Retrieves details for a specific learning path.",
                "operationId": "TrainingPathsService_GetPathById",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.paths.v1.GetPathByIdResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "path_id",
                        "description": "ID of the path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/rapid-refresh/v1": {
            "get": {
                "summary": "Get rapid refresh",
                "description": "Retrieves all rapid refreshes in your organization.",
                "operationId": "TrainingRapidRefreshService_GetRapidRefresh",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.GetRapidRefreshResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page_size",
                        "description": "[Optional] The number of items to return. Defaults to 25. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "description": "[Optional] The current page number. Default to 1. You can specify a value between 1 to 1000.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "title",
                        "description": "[Optional] Filter where matching Title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "description": "[Optional] Filter where matching start date. To search by range add both start date and end date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_date",
                        "description": "[Optional] Filter where matching end date. To search by range add both start date and end date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "status",
                        "description": "[Optional] Filter where matching status. Available values : all, draft, scheduled, in-progress, ended",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "schedule",
                        "description": "[Optional] Filter where matching schedule. Available values : NotSpecified, Once, Daily, Weekly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/rapid-refresh/v1/{id}": {
            "get": {
                "summary": "Get rapid refresh by ID",
                "description": "Retrieves details for a specific rapid refresh.",
                "operationId": "TrainingRapidRefreshService_GetRapidRefreshById",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.GetRapidRefreshByIdResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the rapid refresh",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Training"
                ]
            }
        },
        "/training/v1/feed/training-course-progress": {
            "get": {
                "summary": "Data feed for Course Progress",
                "operationId": "FeedService_FeedTrainingCourseProgress",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.training.feed.v1.FeedTrainingCourseProgressResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "course_id",
                        "description": "(optional) Specifies a filter by a specific course id.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "course_external_id",
                        "description": "(optional) Specifies a filter by a specific external course id.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "description": "(optional) Specifies a filter by a specific user id.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_external_id",
                        "description": "(optional) Specifies a filter by a specific external user id.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_after",
                        "description": "(optional) Specifies a filter by a specific timestamp in the Internet Date-Time format. For example, `2014-01-28T23:14:23.000Z`. When provided, returns only entries that were modified after the timestamp.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "(optional) Maximum number of entries to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "description": "(optional) Offset used for pagination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "completion_status",
                        "description": "(optional) Specifies a filter by a specific completion status. For example, return only completed entries.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMPLETION_STATUS_UNSPECIFIED",
                                "COMPLETION_STATUS_ALL",
                                "COMPLETION_STATUS_COMPLETED",
                                "COMPLETION_STATUS_NON_COMPLETED"
                            ],
                            "default": "COMPLETION_STATUS_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "Data Feeds"
                ]
            }
        },
        "/users": {
            "post": {
                "summary": "Create a user",
                "operationId": "ThePubService_AddUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.AddUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.AddUserRequest"
                            }
                        }
                    },
                    "description": "The parameters for `AddUser`",
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/search": {
            "post": {
                "summary": "List users (by email)",
                "operationId": "ThePubService_SearchUsers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.SearchUsersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.SearchUsersRequest"
                            }
                        }
                    },
                    "description": "The parameters for `SearchUsers`",
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields": {
            "post": {
                "summary": "Create a user field",
                "operationId": "UserFieldService_CreateField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.CreateFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.CreateFieldRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields/list": {
            "post": {
                "summary": "List user fields",
                "operationId": "UserFieldService_ListFields",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.ListFieldsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.ListFieldsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields/{id}": {
            "delete": {
                "summary": "Delete a user field",
                "operationId": "UserFieldService_DeleteField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.DeleteFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The field UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "summary": "Update a user field",
                "operationId": "UserFieldService_UpdateField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.UpdateFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The field UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.UserFieldService.UpdateFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields/{id}/disable": {
            "post": {
                "summary": "Archive a field",
                "operationId": "UserFieldService_DisableField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.DisableFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The field UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.UserFieldService.DisableFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields/{id}/restore": {
            "post": {
                "summary": "Restore an archived field",
                "operationId": "UserFieldService_RestoreField",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.RestoreFieldResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The field UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.UserFieldService.RestoreFieldBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/fields/{id}/settings": {
            "post": {
                "summary": "Update field settings",
                "operationId": "UserFieldService_SetFieldSettings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userfield.v1.SetFieldSettingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Required. The field UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userfield.v1.UserFieldService.SetFieldSettingsBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/v1/users/upsert": {
            "post": {
                "summary": "Create or update users synchronously",
                "description": "Performs bulk user creation or updates synchronously and returns the results in real time. \n\n",
                "operationId": "UsersService_CreateOrUpdateUsers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Bulk user operations"
                ]
            }
        },
        "/users/v1/users/upsert/jobs": {
            "post": {
                "summary": "Initialize a create-or-update users job",
                "description": "Creates a new job to create or update users and returns a job ID for later execution. \n\n",
                "operationId": "UsersService_InitCreateOrUpdateUsersJob",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.InitCreateOrUpdateUsersJobResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.v1.InitCreateOrUpdateUsersJobRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Bulk user operations"
                ]
            }
        },
        "/users/v1/users/upsert/jobs/list": {
            "post": {
                "summary": "List create-or-update users jobs",
                "description": "Retrieves a list of all the create-or-update users jobs. \n\n",
                "operationId": "UsersService_ListCreateOrUpdateUsersJobs",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.ListCreateOrUpdateUsersJobsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.v1.ListCreateOrUpdateUsersJobsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Bulk user operations"
                ]
            }
        },
        "/users/v1/users/upsert/jobs/{job_id}": {
            "get": {
                "summary": "Get a create-or-update users job",
                "description": "Retrieves details of a create-or-update users job, including the submitted users and any validation results if the job has started. \n\n",
                "operationId": "UsersService_GetCreateOrUpdateUsersJob",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.GetCreateOrUpdateUsersJobResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the job to get status for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit of users to return in the response.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "next_page_token",
                        "description": "Optional. The next page token to continue the lookup",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Bulk user operations"
                ]
            },
            "delete": {
                "summary": "Cancel a create-or-update users job",
                "description": "Cancels a previously created job to create or update users. \n\n",
                "operationId": "UsersService_CancelCreateOrUpdateUsersJob",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.CancelCreateOrUpdateUsersJobResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "The id of the job to start",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Bulk user operations"
                ]
            },
            "post": {
                "summary": "Start a create-or-update users job",
                "description": "Starts an initialized job to create or update users. \n\n",
                "operationId": "UsersService_StartCreateOrUpdateUsersJob",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.v1.StartCreateOrUpdateUsersJobResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "The id of the job to start",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.v1.UsersService.StartCreateOrUpdateUsersJobBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Bulk user operations"
                ]
            }
        },
        "/users/v1/users/{user_id}/attributes": {
            "get": {
                "summary": "Get user attributes",
                "operationId": "UserAttributeService_GetUserAttributes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userattribute.v1.GetUserAttributesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "Required. The user UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter.visibility_setting",
                        "description": "Filter by visibility settings of the fields\n\n - VISIBILITY_SETTING_USER_PROFILE: VISIBILITY_SETTING_USER_PROFILE corresponds to any attributes where the field setting show_on_profile is true\n - VISIBILITY_SETTING_REGISTRATION: VISIBILITY_SETTING_REGISTRATION corresponds to any attributes where the field setting show_on_registration is true",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "VISIBILITY_SETTING_UNSPECIFIED",
                                "VISIBILITY_SETTING_USER_PROFILE",
                                "VISIBILITY_SETTING_REGISTRATION"
                            ],
                            "default": "VISIBILITY_SETTING_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "filter.field_ids",
                        "description": "Filter by field IDs",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "summary": "Set user attributes",
                "operationId": "UserAttributeService_SetUserAttributes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.users.userattribute.v1.SetUserAttributesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "Required. The user UUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.users.userattribute.v1.UserAttributeService.SetUserAttributesBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{user_id}": {
            "get": {
                "summary": "Get a user",
                "operationId": "ThePubService_GetUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.GetUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "The id of the user to be retrieved.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "summary": "Update a user",
                "operationId": "ThePubService_UpdateUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.thepub.v1.UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "The id of the user to be updated.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.thepub.v1.ThePubService.UpdateUserBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/webhooks/v1/token": {
            "get": {
                "summary": "Get signature secret",
                "operationId": "WebhooksService_GetToken",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.GetTokenResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "post": {
                "summary": "Regenerate signature secret",
                "operationId": "WebhooksService_GenerateToken",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.GenerateTokenResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.webhooks.v1.GenerateTokenRequest"
                            }
                        }
                    },
                    "description": "The parameters for `GenerateToken`",
                    "required": true
                },
                "tags": [
                    "Webhooks"
                ]
            }
        },
        "/webhooks/v1/webhooks": {
            "get": {
                "summary": "List webhooks",
                "operationId": "WebhooksService_ListWebhooks",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.ListWebhooksResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "post": {
                "summary": "Create a webhook",
                "operationId": "WebhooksService_CreateWebhook",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.CreateWebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.webhooks.v1.CreateWebhookRequest"
                            }
                        }
                    },
                    "description": "The parameters for `CreateWebhook`",
                    "required": true
                },
                "tags": [
                    "Webhooks"
                ]
            }
        },
        "/webhooks/v1/webhooks/{webhook_id}": {
            "get": {
                "summary": "Get a webhook",
                "operationId": "WebhooksService_GetWebhook",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.GetWebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "description": "The unique identifier for the webhook.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Webhooks"
                ]
            },
            "delete": {
                "summary": "Delete a webhook",
                "operationId": "WebhooksService_DeleteWebhook",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.DeleteWebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "description": "The webhook unique identifier.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Webhooks"
                ]
            },
            "put": {
                "summary": "Update a webhook",
                "operationId": "WebhooksService_UpdateWebhook",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.webhooks.v1.UpdateWebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "description": "The webhook unique identifier.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/s12.webhooks.v1.WebhooksService.UpdateWebhookBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Webhooks"
                ]
            }
        },
        "/sensors/v1/sensors/{source_name}/{source_id}/latest-readings": {
            "get": {
                "summary": "Get sensor's latest readings",
                "operationId": "SensorsService_GetSensorLatestReadings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.GetSensorLatestReadingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "source_name",
                        "description": "The provider/origin of the sensor data.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_id",
                        "description": "An ID for the sensor, specified by the provider/origin.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/sensors/v1/sensors/{source_name}/{source_id}/details": {
            "get": {
                "summary": "Get sensor",
                "operationId": "SensorsService_GetSensor",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.GetSensorResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "source_name",
                        "description": "The provider/origin of the sensor data.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_id",
                        "description": "An ID for the sensor, specified by the provider/origin.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Sensors"
                ]
            }
        },
        "/sensors/v1/sensors/deprovision/{source_name}/{source_id}": {
            "delete": {
                "summary": "De-provision a sensor",
                "operationId": "SensorsService_DeprovisionSensor",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/s12.sensors.v1.DeprovisionSensorResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/google.rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "source_name",
                        "description": "The provider/origin of the sensor data.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_id",
                        "description": "An ID for the sensor, specified by the provider/origin.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Sensors"
                ]
            }
        }
    },
    "externalDocs": {
        "description": "How to generate an API Token",
        "url": "https://help.safetyculture.com/en-US/000007/"
    },
    "servers": [
        {
            "url": "https://api.safetyculture.io"
        }
    ],
    "components": {
        "requestBodies": {
            "s12.tasks.v1.GetIncidentsRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest"
                        }
                    }
                },
                "description": "GetIncidentsRequest represents the parameters to `GetIncidents`.",
                "required": true
            },
            "s12.inspections.v1.InspectionService.SetInspectionSiteBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/s12.inspections.v1.InspectionService.SetInspectionSiteBody"
                        }
                    }
                },
                "required": true
            },
            "s12.tasks.v1.CreateActionScheduleRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/s12.tasks.v1.CreateActionScheduleRequest"
                        }
                    }
                },
                "required": true
            }
        },
        "schemas": {
            "google.protobuf.Any": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "google.rpc.Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/google.protobuf.Any"
                        }
                    }
                }
            },
            "google.type.Date": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
                    },
                    "month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
                    },
                    "day": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
                    }
                },
                "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
                "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
            },
            "s12.accounts.organisation.v1.BulkDeleteGroupsRequest": {
                "type": "object",
                "properties": {
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of group UUIDs to delete"
                    }
                },
                "title": "BulkDeleteGroupsRequest contains the parameters to bulk delete groups"
            },
            "s12.accounts.organisation.v1.BulkDeleteGroupsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.accounts.organisation.v1.BulkDeleteGroupsResponse.BulkDeleteGroupsResult"
                        },
                        "title": "Results - successful and unsuccessful - of calling this endpoint"
                    }
                },
                "title": "BulkDeleteGroupsResponse contains the result of calling BulkDeleteGroups"
            },
            "s12.accounts.organisation.v1.BulkDeleteGroupsResponse.BulkDeleteGroupsResult": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "type": "string",
                        "title": "Group UUID"
                    },
                    "code": {
                        "$ref": "#/components/schemas/s12.accounts.organisation.v1.BulkDeleteGroupsResponse.BulkDeleteGroupsResultCode"
                    }
                }
            },
            "s12.accounts.organisation.v1.BulkDeleteGroupsResponse.BulkDeleteGroupsResultCode": {
                "type": "string",
                "enum": [
                    "BULK_DELETE_GROUPS_RESULT_CODE_UNSPECIFIED",
                    "BULK_DELETE_GROUPS_RESULT_CODE_SUCCESS",
                    "BULK_DELETE_GROUPS_RESULT_CODE_INTERNAL",
                    "BULK_DELETE_GROUPS_RESULT_CODE_MALFORMED_ID",
                    "BULK_DELETE_GROUPS_RESULT_CODE_NOT_FOUND"
                ],
                "default": "BULK_DELETE_GROUPS_RESULT_CODE_UNSPECIFIED",
                "description": "Type of result for each group in the BulkDeleteGroups operation.\nAllows for defining specific reasons for errors to display to customers.\n\n - BULK_DELETE_GROUPS_RESULT_CODE_UNSPECIFIED: Default\n - BULK_DELETE_GROUPS_RESULT_CODE_SUCCESS: Operation was a success\n - BULK_DELETE_GROUPS_RESULT_CODE_INTERNAL: Internal or unknown failure\n - BULK_DELETE_GROUPS_RESULT_CODE_MALFORMED_ID: Malformed group ID\n - BULK_DELETE_GROUPS_RESULT_CODE_NOT_FOUND: Group was not found"
            },
            "s12.accounts.organisation.v1.GetUserGroupsResponse": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Group"
                        }
                    }
                },
                "title": "GetUserGroupsResponse contains the result of calling GetUserGroups"
            },
            "s12.announcements.v1.DocumentMeta": {
                "type": "object",
                "properties": {
                    "document_type": {
                        "$ref": "#/components/schemas/s12.announcements.v1.DocumentType"
                    }
                }
            },
            "s12.announcements.v1.DocumentType": {
                "type": "string",
                "enum": [
                    "DOCUMENT_TYPE_UNKNOWN_UNSPECIFIED",
                    "DOCUMENT_TYPE_PDF"
                ],
                "default": "DOCUMENT_TYPE_UNKNOWN_UNSPECIFIED",
                "title": "- DOCUMENT_TYPE_UNKNOWN_UNSPECIFIED: Defaults to PDF"
            },
            "s12.announcements.v1.GetHeadsUpCompletionCountsResponse": {
                "type": "object",
                "properties": {
                    "viewed_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "ViewedCount represents the total number of assigned users who have viewed a\nHeadsUp"
                    },
                    "acknowledged_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "AcknowledgedCount represents the total number of users who have\nacknowledged a HeadsUp."
                    },
                    "message_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "MessageCount represents the total number of comments on this HeadsUp."
                    },
                    "reaction_summary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpReactionSummary"
                        },
                        "title": "Reactions associated for the assigned heads up"
                    }
                },
                "description": "Result returned from `GetHeadsUpCompletionCounts`",
                "title": "GetHeadsUpCompletionCountsResponse"
            },
            "s12.announcements.v1.GetHeadsUpMessagesRequest": {
                "type": "object",
                "properties": {
                    "message_request": {
                        "$ref": "#/components/schemas/s12.common.GetMessagesRequest"
                    }
                },
                "description": "The parameters for `GetHeadsUpMessages`",
                "title": "GetHeadsUpMessagesRequest"
            },
            "s12.announcements.v1.GetHeadsUpMessagesResponse": {
                "type": "object",
                "properties": {
                    "message_response": {
                        "$ref": "#/components/schemas/s12.common.GetMessagesResponse"
                    }
                },
                "description": "Result returned from `GetHeadsUpMessages`",
                "title": "GetHeadsUpMessagesResponse"
            },
            "s12.announcements.v1.HeadsUp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An ID uniquely identifying this message."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp representing the instance this Announcement was originally\ncreated."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp representing the instance this Announcement was most recently\nmodified."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "The ID of the organisation that this Announcement belongs to."
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Whether or not the Announcement has been soft deleted."
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the Announcement."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "ID of the author who originally created the Announcement."
                    },
                    "author_name": {
                        "type": "string",
                        "description": "Name of the author who originally created the Announcement."
                    },
                    "is_published": {
                        "type": "boolean",
                        "description": "Whether or not the Announcement has been published, indicating that it can\nno longer undergo modifications."
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp representing the instance this Announcement was published."
                    },
                    "has_acknowledgement": {
                        "type": "boolean",
                        "description": "Defines if it is required that a user taking the Announcement is required\nto explicitly acknowledge that they understand the content of the\nAnnouncement."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the heads up as provided by the user."
                    },
                    "video": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "title": "Images are now held in HeadsUpMedia media"
                    },
                    "author_profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "is_assigned": {
                        "type": "boolean",
                        "title": "Whether or not the requesting user is assigned this Heads Up"
                    },
                    "is_video_transcoded": {
                        "type": "boolean",
                        "title": "Video transcoded state will be held in VideoMeta of an individual\nHeadsUpMedia media"
                    },
                    "is_comments_disabled": {
                        "type": "boolean",
                        "title": "Whether or not comments are disabled for this Heads Up"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpMedia"
                        },
                        "title": "Media is a list of HeadsUpMedia objects associated with this HeadsUp"
                    },
                    "is_reactions_disabled": {
                        "type": "boolean",
                        "title": "Whether or not reactions are disabled for this Heads Up"
                    }
                },
                "title": "HeadsUp represents a communication to one or more users containing\none or more announcement cards"
            },
            "s12.announcements.v1.HeadsUpCompletionDetails": {
                "type": "object",
                "properties": {
                    "viewed": {
                        "type": "boolean",
                        "title": "Viewed determines whether or not the user has viewed the headsup before"
                    },
                    "viewed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "ViewedAt defines when a headsup was first viewed"
                    },
                    "acknowledged": {
                        "type": "boolean",
                        "title": "Acknowledged defines if a headsup has been acknowledged"
                    },
                    "acknowledged_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "AcknowledgedAt defines when a headsup was acknowledged by the user"
                    }
                },
                "title": "HeadsUpCompletionDetails is a composition for the headsup completion details"
            },
            "s12.announcements.v1.HeadsUpManageListItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An ID uniquely identifying this Heads Up."
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the Heads Up"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp representing the instance this Heads Up was published."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "ID of the author who originally created the Announcement."
                    },
                    "author_name": {
                        "type": "string",
                        "description": "Name of the author who originally created the Announcement."
                    },
                    "viewed_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of unique user views"
                    },
                    "acknowledgement_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of unique acknowledgement count"
                    },
                    "has_acknowledgement": {
                        "type": "boolean",
                        "title": "Defines whether or not a Heads Up requires an acknowledgement"
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    },
                    "assigned_users_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users who are assigned this HeadsUp"
                    },
                    "complete": {
                        "type": "boolean",
                        "title": "Whether or not the HeadsUp has been completed by all assignee's"
                    },
                    "message_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "MessageCount represents the total number of comments on this Heads Up."
                    },
                    "is_comments_disabled": {
                        "type": "boolean",
                        "title": "Whether or not comments are disabled on this HeadsUp"
                    },
                    "author_profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "is_reactions_disabled": {
                        "type": "boolean",
                        "title": "Whether or not reactions are disabled for this Heads Up"
                    },
                    "reaction_count": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Number of reactions on the HeadsUp"
                    }
                },
                "title": "HeadsUpManageListItem response item of listing ManageHeadsUps"
            },
            "s12.announcements.v1.HeadsUpMedia": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "video": {
                        "$ref": "#/components/schemas/s12.announcements.v1.VideoMeta"
                    },
                    "document": {
                        "$ref": "#/components/schemas/s12.announcements.v1.DocumentMeta"
                    }
                },
                "title": "HeadsUpMedia represents media associated with a HeadsUp"
            },
            "s12.announcements.v1.HeadsUpReactionSummary": {
                "type": "object",
                "properties": {
                    "emoji_short_code": {
                        "type": "string",
                        "title": "A string which represents the short code of the emoji"
                    },
                    "total_reaction_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the number of reactions for the given emoji_short_code"
                    },
                    "did_user_react": {
                        "type": "boolean",
                        "title": "returns true if the requesting user reacted with the given emoji_short_code, otherwise false"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpReactionUser"
                        },
                        "title": "The list of users who reacted with the given emoji_short_code"
                    },
                    "reaction_user_limit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The maximum number of HeadsUpReactionUsers that will be returned.\nShould be use with total count to calculate \"and X others.\""
                    }
                },
                "title": "HeadsUpReactionSummary a summary of all the reactions for a given heads up"
            },
            "s12.announcements.v1.HeadsUpReactionUser": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user who reacted"
                    },
                    "user_full_name": {
                        "type": "string",
                        "title": "Name of the user who reacted"
                    },
                    "user_profile_picture": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the user reacted"
                    }
                },
                "title": "HeadsUpReactionUser represents a user who has reacted to a HeadsUp"
            },
            "s12.announcements.v1.HeadsUpResponse": {
                "type": "object",
                "properties": {
                    "heads_up": {
                        "$ref": "#/components/schemas/s12.announcements.v1.HeadsUp"
                    }
                },
                "description": "Result returned from `GetHeadsUp`",
                "title": "HeadsUpResponse"
            },
            "s12.announcements.v1.HeadsUpUserListItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the user"
                    },
                    "email": {
                        "type": "string",
                        "title": "Users email"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "Users first name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Users last name"
                    },
                    "profile_picture": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "completion_details": {
                        "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpCompletionDetails"
                    },
                    "status": {
                        "type": "boolean",
                        "title": "Status represents whether or not the user has completed all necessary\nrequirements"
                    }
                },
                "title": "HeadsUpUserListItem represents a list response item containing information on\na user"
            },
            "s12.announcements.v1.ListHeadsUpManageRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Optional. Number of HeadsUps to be returned in a single request. Maximum\n100. Non-positive values are ignored. The presence of `next_page_token` in\nthe response indicates that more results might be available. For example:\n'20'"
                    },
                    "page_token": {
                        "type": "string",
                        "title": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.  The values of other method\nparameters should be identical to those in the previous call.\nFor example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageRequest.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "search_value": {
                        "type": "string",
                        "description": "Optional. Search value that will Search on Title & any other relevant\nfield."
                    },
                    "filters": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageRequest.Filter"
                    }
                },
                "description": "The parameters for `ListHeadsUpManage`",
                "title": "ListHeadsUpManageRequest"
            },
            "s12.announcements.v1.ListHeadsUpManageRequest.Filter": {
                "type": "object",
                "properties": {
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "completed": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageRequest.Filter.CompletedFilter"
                    },
                    "author_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpManageRequest.Filter.StatusFilter"
                        }
                    }
                }
            },
            "s12.announcements.v1.ListHeadsUpManageRequest.Filter.CompletedFilter": {
                "type": "string",
                "enum": [
                    "COMPLETED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                    "COMPLETED_FILTER_HAS_COMPLETED",
                    "COMPLETED_FILTER_HAS_NOT_COMPLETED"
                ],
                "default": "COMPLETED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                "title": "- COMPLETED_FILTER_UNKNOWN_NONE_UNSPECIFIED: Defaults to no filter"
            },
            "s12.announcements.v1.ListHeadsUpManageRequest.Filter.StatusFilter": {
                "type": "string",
                "enum": [
                    "STATUS_FILTER_UNSPECIFIED",
                    "STATUS_FILTER_INCOMPLETE",
                    "STATUS_FILTER_COMPLETED",
                    "STATUS_FILTER_DRAFT",
                    "STATUS_FILTER_SCHEDULED"
                ],
                "default": "STATUS_FILTER_UNSPECIFIED"
            },
            "s12.announcements.v1.ListHeadsUpManageRequest.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNKNOWN_UNSPECIFIED",
                    "SORT_FIELD_PUBLISHED_AT",
                    "SORT_FIELD_TITLE"
                ],
                "default": "SORT_FIELD_UNKNOWN_UNSPECIFIED",
                "description": "- SORT_FIELD_UNKNOWN_UNSPECIFIED: Defaults to published_at",
                "title": "The SortField for request items to be sorted in"
            },
            "s12.announcements.v1.ListHeadsUpManageResponse": {
                "type": "object",
                "properties": {
                    "heads_ups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpManageListItem"
                        },
                        "title": "List of HeadsUps"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "If there are more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call the same\nmethod again using the value of `next_page_token` as `page_token`.\nFor Example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of HeadsUps found"
                    }
                },
                "description": "Result returned from `ListHeadsUpManage`",
                "title": "ListHeadsUpManageResponse"
            },
            "s12.announcements.v1.ListHeadsUpUsersRequest": {
                "type": "object",
                "properties": {
                    "heads_up_id": {
                        "type": "string",
                        "description": "UUID used to look up HeadsUp."
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Optional. Number of HeadsUps to be returned in a single request. Maximum\n100. Non-positive values are ignored."
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of users to offset, used with page_size indicates what page is\ndisplayed"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersRequest.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "search_value": {
                        "type": "string",
                        "description": "Optional. Search value that will Search on Title & any other relevant\nfield."
                    },
                    "filters": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersRequest.Filter"
                    }
                },
                "description": "The parameters for `ListHeadsUpUsers`",
                "title": "ListHeadsUpUsersRequest",
                "required": [
                    "heads_up_id"
                ]
            },
            "s12.announcements.v1.ListHeadsUpUsersRequest.Filter": {
                "type": "object",
                "properties": {
                    "viewed": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersRequest.Filter.ViewedFilter"
                    },
                    "acknowledged": {
                        "$ref": "#/components/schemas/s12.announcements.v1.ListHeadsUpUsersRequest.Filter.AcknowledgedFilter"
                    },
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "s12.announcements.v1.ListHeadsUpUsersRequest.Filter.AcknowledgedFilter": {
                "type": "string",
                "enum": [
                    "ACKNOWLEDGED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                    "ACKNOWLEDGED_FILTER_HAS_ACKNOWLEDGED",
                    "ACKNOWLEDGED_FILTER_HAS_NOT_ACKNOWLEDGED"
                ],
                "default": "ACKNOWLEDGED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                "title": "- ACKNOWLEDGED_FILTER_UNKNOWN_NONE_UNSPECIFIED: Defaults to no filter"
            },
            "s12.announcements.v1.ListHeadsUpUsersRequest.Filter.ViewedFilter": {
                "type": "string",
                "enum": [
                    "VIEWED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                    "VIEWED_FILTER_HAS_VIEWED",
                    "VIEWED_FILTER_HAS_NOT_VIEWED"
                ],
                "default": "VIEWED_FILTER_UNKNOWN_NONE_UNSPECIFIED",
                "title": "- VIEWED_FILTER_UNKNOWN_NONE_UNSPECIFIED: Defaults to no filter"
            },
            "s12.announcements.v1.ListHeadsUpUsersRequest.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNKNOWN_UNSPECIFIED",
                    "SORT_FIELD_NAME",
                    "SORT_FIELD_EMAIL",
                    "SORT_FIELD_VIEWED_AT",
                    "SORT_FIELD_ACKNOWLEDGED_AT"
                ],
                "default": "SORT_FIELD_UNKNOWN_UNSPECIFIED",
                "description": "- SORT_FIELD_UNKNOWN_UNSPECIFIED: Defaults to NAME",
                "title": "The SortField for request items to be sorted in"
            },
            "s12.announcements.v1.ListHeadsUpUsersResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.announcements.v1.HeadsUpUserListItem"
                        },
                        "title": "List of users"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of users found"
                    }
                },
                "description": "Result returned from `ListHeadsUpUsers`",
                "title": "ListHeadsUpUsersResponse"
            },
            "s12.announcements.v1.VideoMeta": {
                "type": "object",
                "properties": {
                    "video_duration": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Number of milliseconds in the video"
                    },
                    "is_video_transcoded": {
                        "type": "boolean",
                        "title": "Whether or not the video has been transcoded"
                    }
                }
            },
            "s12.assets.v1.ArchiveAssetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the archived asset."
                    }
                },
                "description": "Result returned from `ArchiveAsset`",
                "title": "ArchiveAssetResponse"
            },
            "s12.assets.v1.Asset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of an asset. This ID is system-generated.",
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "description": "The user-defined unique identifier of an asset. This ID is user-generated."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetType"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetField"
                        },
                        "description": "The associated fields of an asset contained in an array. Each asset's\nfields are based on its asset type. Please make sure the asset fields you\nuse associated with the specified asset type. You can retrieve the\nassociated fields using the list type and field association endpoint."
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "All the media directly uploaded to an asset."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date created timestamp of an asset.",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date last modified timetstamp of an asset.",
                        "readOnly": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetSite"
                    },
                    "profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "state": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetState"
                    },
                    "inspected_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date last modified inspection of an asset.",
                        "readOnly": true
                    },
                    "sourced_from_external_system": {
                        "type": "boolean",
                        "description": "@deprecated. Use GetAsset API to get the sourced_from_external_system\nIndicates if an asset is sourced from an external system.",
                        "readOnly": true
                    }
                },
                "description": "Asset entity.",
                "required": [
                    "id"
                ]
            },
            "s12.assets.v1.AssetField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of an asset field.",
                        "readOnly": true
                    },
                    "string_value": {
                        "type": "string",
                        "description": "The string value of an asset field. This attribute is only used for asset fields using the FIELD_VALUE_TYPE_STRING type."
                    },
                    "money_value": {
                        "$ref": "#/components/schemas/s12.common.Money"
                    },
                    "timestamp_value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp value of an asset field. This attribute is only used for asset fields using the FIELD_VALUE_TYPE_TIMESTAMP type."
                    },
                    "field_id": {
                        "type": "string",
                        "description": "The unique identifier of an asset field. This ID is system-generated."
                    }
                },
                "description": "Describes the values of an asset field."
            },
            "s12.assets.v1.AssetFilter": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The unique identifier of the assigned site to filter by."
                    },
                    "state": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetState"
                    },
                    "type_id": {
                        "type": "string",
                        "description": "The unique identifier of the asset type to filter by."
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "The unique identifier of the asset to filter by."
                    },
                    "asset_code": {
                        "type": "string",
                        "description": "The user-defined unique identifier id of the asset to filter by."
                    },
                    "motion_status": {
                        "$ref": "#/components/schemas/s12.assets.v1.MotionStatus"
                    },
                    "location_source": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetLocationSource"
                    }
                },
                "description": "Describes the filter options for the list assets endpoint..",
                "required": [
                    "asset_code"
                ]
            },
            "s12.assets.v1.AssetLocation": {
                "type": "object",
                "properties": {
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier of the asset."
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.assets.v1.Location"
                    },
                    "source": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetLocationSource"
                    }
                }
            },
            "s12.assets.v1.AssetLocationSource": {
                "type": "string",
                "enum": [
                    "ASSET_LOCATION_SOURCE_UNSPECIFIED",
                    "ASSET_LOCATION_SOURCE_INSPECTION",
                    "ASSET_LOCATION_SOURCE_GEO",
                    "ASSET_LOCATION_SOURCE_MOBILE_DEVICE"
                ],
                "default": "ASSET_LOCATION_SOURCE_UNSPECIFIED",
                "description": "Describes the source of asset location.\n\n - ASSET_LOCATION_SOURCE_UNSPECIFIED: Indicates that the source of asset location is unspecified.\n - ASSET_LOCATION_SOURCE_INSPECTION: Indicates that the source of asset location is inspection.\n - ASSET_LOCATION_SOURCE_GEO: Indicates that the source is GEO location.\n - ASSET_LOCATION_SOURCE_MOBILE_DEVICE: Indicates that the source is mobile device location."
            },
            "s12.assets.v1.AssetMedia": {
                "type": "object",
                "properties": {
                    "media_id": {
                        "type": "string",
                        "description": "ID of media."
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Full file name including extension."
                    }
                },
                "description": "This object is used to define media object associated with an asset,\nincluding profile image, photos and documents."
            },
            "s12.assets.v1.AssetSite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of a site. This ID is system-generated."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a site."
                    }
                },
                "description": "Describes the values of a site that's assigned to an asset."
            },
            "s12.assets.v1.AssetState": {
                "type": "string",
                "enum": [
                    "ASSET_STATE_UNSPECIFIED",
                    "ASSET_STATE_ACTIVE",
                    "ASSET_STATE_ARCHIVED"
                ],
                "default": "ASSET_STATE_UNSPECIFIED",
                "description": "Describes the state of an asset. Either active or archived.\n\n - ASSET_STATE_UNSPECIFIED: Indicates that an asset state is unspecified.\n - ASSET_STATE_ACTIVE: Indicates that an asset is active.\n - ASSET_STATE_ARCHIVED: Indicates that an asset is archived."
            },
            "s12.assets.v1.AssetType": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the type.",
                        "readOnly": true
                    },
                    "type_id": {
                        "type": "string",
                        "description": "The global unique identifier of the type."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.assets.v1.TypeCategory"
                    }
                },
                "description": "Asset type entity."
            },
            "s12.assets.v1.AssetsOrderBy": {
                "type": "object",
                "properties": {
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetsOrderBy.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "field_id": {
                        "type": "string",
                        "description": "Field_id is required while sorting by an asset-field\ni.e., When SortField = SORT_FIELD_ASSET_FIELD."
                    }
                },
                "description": "Describes the sorting options for the list assets endpoint. By default,\nassets are sorted by creation date from the most recent to the least recent."
            },
            "s12.assets.v1.AssetsOrderBy.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNSPECIFIED",
                    "SORT_FIELD_CREATED_AT",
                    "SORT_FIELD_MODIFIED_AT",
                    "SORT_FIELD_CODE",
                    "SORT_FIELD_ASSET_FIELD",
                    "SORT_FIELD_INSPECTED_AT"
                ],
                "default": "SORT_FIELD_UNSPECIFIED",
                "description": "Defaults to SORT_FIELD_CODE.\n\n - SORT_FIELD_UNSPECIFIED: The sort field is unspecified.\n - SORT_FIELD_CREATED_AT: Sort assets by `created_at`.\n - SORT_FIELD_MODIFIED_AT: Sort assets by `modified_at`.\n - SORT_FIELD_CODE: Sort assets by `code`.\n - SORT_FIELD_ASSET_FIELD: Sort assets by an asset-field.\n - SORT_FIELD_INSPECTED_AT: Sort assets by `inspected_at`."
            },
            "s12.assets.v1.AssetsService.ArchiveAssetBody": {
                "type": "object",
                "description": "The parameters for `ArchiveAsset`",
                "title": "ArchiveAssetRequest"
            },
            "s12.assets.v1.AssetsService.SetAssetFieldValuesBody": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetField"
                        },
                        "description": "List of fields being updated on the asset."
                    }
                },
                "description": "The parameters for `SetAssetFieldValues`",
                "title": "SetAssetFieldValuesRequest"
            },
            "s12.assets.v1.AssetsService.UpdateAssetLocationBody": {
                "type": "object",
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/s12.assets.v1.Location"
                    }
                },
                "description": "The request parameters from `UpdateAssetLocation`",
                "title": "UpdateAssetLocationRequest",
                "required": [
                    "location"
                ]
            },
            "s12.assets.v1.BulkCreateAssetsRequest": {
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.BulkCreateAssetsRequest.Asset"
                        },
                        "description": "Assets to be created."
                    }
                },
                "description": "The parameters for `BulkCreateAssets`",
                "title": "BulkCreateAssetsRequest",
                "required": [
                    "assets"
                ]
            },
            "s12.assets.v1.BulkCreateAssetsRequest.Asset": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Customer specified identifier for the asset. Unique per org."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetField"
                        },
                        "description": "List of fields based on the type of asset."
                    },
                    "type_id": {
                        "type": "string",
                        "description": "Global unique identifier of the asset type."
                    }
                },
                "description": "Individual Asset definition.",
                "required": [
                    "code"
                ]
            },
            "s12.assets.v1.BulkCreateAssetsResponse": {
                "type": "object",
                "properties": {
                    "created_assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.BulkCreateAssetsResponse.CreatedAsset"
                        },
                        "description": "List of assets created."
                    },
                    "failed_assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.BulkCreateAssetsResponse.FailedAsset"
                        },
                        "description": "List of assets failed to create."
                    }
                },
                "description": "Result returned from `BulkCreateAssets`",
                "title": "BulkCreateAssetsResponse"
            },
            "s12.assets.v1.BulkCreateAssetsResponse.CreatedAsset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the created asset."
                    },
                    "code": {
                        "type": "string",
                        "description": "Code of the asset."
                    }
                },
                "description": "The asset that has been created.",
                "required": [
                    "code"
                ]
            },
            "s12.assets.v1.BulkCreateAssetsResponse.FailedAsset": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Code of the asset."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.common.Status"
                    }
                },
                "description": "The asset that has failed to create.",
                "required": [
                    "code"
                ]
            },
            "s12.assets.v1.BulkUpdateAssetsRequest": {
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.Asset"
                        },
                        "description": "Assets to be updated."
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "REQUIRED. The attributes (such as unique ID, site, asset fields, etc.) you\nwant to update for the asset, specified in the parameters. For example, the\nupdate_mask=code parameter indicates that only the unique ID will be\nupdated in a request, any other attributes provided in your request body\nwill be ignored."
                    }
                },
                "description": "The parameters for `BulkUpdateAssets`",
                "title": "BulkUpdateAssetsRequest",
                "required": [
                    "assets",
                    "update_mask"
                ]
            },
            "s12.assets.v1.BulkUpdateAssetsResponse": {
                "type": "object",
                "properties": {
                    "updated_assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.BulkUpdateAssetsResponse.UpdatedAsset"
                        },
                        "description": "List of assets successfully updated."
                    },
                    "failed_assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.BulkUpdateAssetsResponse.FailedAsset"
                        },
                        "description": "List of assets failed to update."
                    }
                },
                "description": "Result returned from `BulkUpdateAssets`",
                "title": "BulkUpdateAssetsResponse"
            },
            "s12.assets.v1.BulkUpdateAssetsResponse.FailedAsset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the updated asset."
                    },
                    "code": {
                        "type": "string",
                        "description": "The user-defined unique identifier of an asset. This ID is user-generated."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.common.Status"
                    }
                },
                "description": "The asset that has failed to update."
            },
            "s12.assets.v1.BulkUpdateAssetsResponse.UpdatedAsset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the updated asset."
                    },
                    "code": {
                        "type": "string",
                        "description": "The user-defined unique identifier of an asset. This ID is user-generated."
                    }
                },
                "description": "The asset that has been successfully updated."
            },
            "s12.assets.v1.CreateAssetRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Customer specified identifier for the asset. Unique per org."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetField"
                        },
                        "description": "List of fields based on the type of asset."
                    },
                    "site": {
                        "type": "string",
                        "description": "Unique ID of site to be associated with asset."
                    },
                    "profile_image": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetMedia"
                    },
                    "type_id": {
                        "type": "string",
                        "description": "Global unique identifier of the asset type."
                    }
                },
                "description": "The parameters for `CreateAsset`",
                "title": "CreateAssetRequest",
                "required": [
                    "code",
                    "type_id"
                ]
            },
            "s12.assets.v1.CreateAssetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the created asset."
                    }
                },
                "description": "Result returned from `CreateAsset`",
                "title": "CreateAssetResponse"
            },
            "s12.assets.v1.CreateFieldRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the field."
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.assets.v1.FieldValueType"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "Optional. The options of a field select.\n100 limit enforced in typefield, but to lower the feedback loop, we enforce it here too."
                    }
                },
                "description": "The parameters for `CreateField`",
                "title": "CreateField"
            },
            "s12.assets.v1.CreateFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the created field."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "The select options of the field, if any were created."
                    }
                },
                "description": "Result returned from `CreateField`",
                "title": "CreateFieldResponse"
            },
            "s12.assets.v1.CreateTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "REQUIRED. The name you want to set for the asset type."
                    }
                },
                "description": "The parameters for `CreateType`",
                "title": "CreateTypeRequest"
            },
            "s12.assets.v1.CreateTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the created asset type."
                    }
                },
                "description": "Result returned from `CreateType`",
                "title": "CreateTypeResponse"
            },
            "s12.assets.v1.DeleteAssetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the deleted asset."
                    }
                },
                "description": "Result returned from `DeleteAssetRequest`",
                "title": "DeleteAssetResponse"
            },
            "s12.assets.v1.DeleteFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the deleted field."
                    }
                },
                "description": "Result returned from `DeleteField`",
                "title": "DeleteFieldResponse"
            },
            "s12.assets.v1.DeleteTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the deleted type."
                    }
                },
                "description": "Result returned from `DeleteType`",
                "title": "DeleteTypeResponse"
            },
            "s12.assets.v1.Field": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A global unique identifier for a field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field."
                    },
                    "field_type": {
                        "$ref": "#/components/schemas/s12.assets.v1.FieldType"
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.assets.v1.FieldValueType"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "The options of a field select.\n100 limit enforced in typefield, but to lower the feedback loop, we enforce it here too."
                    }
                },
                "description": "Field entity.",
                "required": [
                    "id"
                ]
            },
            "s12.assets.v1.FieldType": {
                "type": "string",
                "enum": [
                    "FIELD_TYPE_UNSPECIFIED",
                    "FIELD_TYPE_PREDEFINED",
                    "FIELD_TYPE_CUSTOM"
                ],
                "default": "FIELD_TYPE_UNSPECIFIED",
                "description": "Type of Field.\n\n - FIELD_TYPE_UNSPECIFIED: Field type Unspecified.\n - FIELD_TYPE_PREDEFINED: Field type pre-defined.\n - FIELD_TYPE_CUSTOM: Field type custom."
            },
            "s12.assets.v1.FieldValueType": {
                "type": "string",
                "enum": [
                    "FIELD_VALUE_TYPE_UNSPECIFIED",
                    "FIELD_VALUE_TYPE_STRING",
                    "FIELD_VALUE_TYPE_MONEY",
                    "FIELD_VALUE_TYPE_TIMESTAMP",
                    "FIELD_VALUE_TYPE_SELECT"
                ],
                "default": "FIELD_VALUE_TYPE_UNSPECIFIED",
                "description": "Describes each type of asset field.\n\n - FIELD_VALUE_TYPE_UNSPECIFIED: Field value type unspecified.\n - FIELD_VALUE_TYPE_STRING: This type accepts plain text values.\n - FIELD_VALUE_TYPE_MONEY: This type accepts numerical values with currency codes. For example, \"99.99\" numerical value with \"AUD\" as the currency code.\n - FIELD_VALUE_TYPE_TIMESTAMP: This type accepts timestamp values in the Internet Date-Time format.\n - FIELD_VALUE_TYPE_SELECT: This type accepts select values."
            },
            "s12.assets.v1.FieldsService.UpdateFieldBody": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the field."
                            },
                            "field_type": {
                                "$ref": "#/components/schemas/s12.assets.v1.FieldType"
                            },
                            "value_type": {
                                "$ref": "#/components/schemas/s12.assets.v1.FieldValueType"
                            },
                            "select_options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                                },
                                "description": "The options of a field select.\n100 limit enforced in typefield, but to lower the feedback loop, we enforce it here too."
                            }
                        },
                        "description": "Field which replaces the one with matching identifier on the server.",
                        "title": "Field which replaces the one with matching identifier on the server."
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "REQUIRED. The attributes (such as name etc.) you want to update for the field,\nspecified in the parameters. For example, the update_mask=name parameter\nindicates that only the name will be updated in a request, any other\nattributes provided in your request body will be ignored."
                    }
                },
                "description": "The parameters for `UpdateField`",
                "title": "UpdateField",
                "required": [
                    "update_mask"
                ]
            },
            "s12.assets.v1.GetAssetByCodeResponse": {
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/s12.assets.v1.Asset"
                    }
                },
                "description": "Result returned from `GetAssetByCode`",
                "title": "GetAssetByCodeResponse"
            },
            "s12.assets.v1.GetAssetResponse": {
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/s12.assets.v1.Asset"
                    },
                    "sourced_from_external_system": {
                        "type": "boolean",
                        "description": "Indicates if an asset is sourced from an external system."
                    }
                },
                "description": "Result returned from `GetAsset`",
                "title": "GetAssetResponse"
            },
            "s12.assets.v1.GetTypeResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.assets.v1.Type"
                    }
                },
                "description": "Result returned from `GetType`",
                "title": "GetTypeResponse"
            },
            "s12.assets.v1.ListAssetsRequest": {
                "type": "object",
                "properties": {
                    "page_token": {
                        "type": "string",
                        "description": "OPTIONAL. The value of next_page_token from a previous response. If\nspecified, the API will return the next batch of results following the\nprevious list assets request."
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "OPTIONAL. The number of assets to return. By default, each request\nreturns 50 assets. You can specify a page_size value between 1 to 100."
                    },
                    "search": {
                        "type": "string",
                        "description": "OPTIONAL. The key words to search for in your request."
                    },
                    "asset_filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetFilter"
                        },
                        "description": "OPTIONAL. The array of asset filters to apply in your request. You can\napply multiple filters in a single request."
                    },
                    "order_by": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetsOrderBy"
                    }
                },
                "description": "The parameters for `ListAssets`",
                "title": "ListAssetsRequest"
            },
            "s12.assets.v1.ListAssetsResponse": {
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.Asset"
                        },
                        "description": "The assets found from your request contained in an array as objects."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The value you can use to retrieve additional assets. If a value exists, it\nmeans there are more results than listed. Use the value in your request\nbody as a page_token field to view more results."
                    }
                },
                "description": "Result returned from `ListAssets`",
                "title": "ListAssetsResponse"
            },
            "s12.assets.v1.ListFieldsRequest": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "description": "Optional. Filter asset fields by this search term."
                    }
                },
                "description": "The parameters for `ListFields`",
                "title": "ListFieldsRequest"
            },
            "s12.assets.v1.ListFieldsResponse": {
                "type": "object",
                "properties": {
                    "next_page_token": {
                        "type": "string",
                        "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this method again using the value of\n`next_page_token` as `page_token`."
                    },
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.Field"
                        },
                        "description": "List of all fields under current organisation."
                    }
                },
                "description": "Result returned from `ListFields`",
                "title": "ListFieldsResponse"
            },
            "s12.assets.v1.ListTypeFieldsResponse": {
                "type": "object",
                "properties": {
                    "type_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.TypeField"
                        },
                        "description": "The asset fields found from your request contained in an array as objects."
                    }
                },
                "description": "Result returned from `ListTypeFields`",
                "title": "ListTypeFieldsResponse"
            },
            "s12.assets.v1.ListTypesRequest": {
                "type": "object",
                "properties": {
                    "page_token": {
                        "type": "string",
                        "description": "OPTIONAL. The value of next_page_token from a previous response. If specified, the API will return the next batch of results following the previous list asset types request."
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "OPTIONAL. The number of asset types to return. By default, each request returns 50 asset types. You can specify a page_size value between 1 to 100."
                    },
                    "search": {
                        "type": "string",
                        "description": "OPTIONAL. The key words to search for in your request."
                    },
                    "type_filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.TypeFilter"
                        },
                        "description": "OPTIONAL. The array of asset type filters to apply in your request. You can apply multiple filters in a single request."
                    }
                },
                "description": "The parameters for `ListTypes`",
                "title": "ListTypesRequest"
            },
            "s12.assets.v1.ListTypesResponse": {
                "type": "object",
                "properties": {
                    "next_page_token": {
                        "type": "string",
                        "description": "The value you can use to retrieve additional assets. If a value exists, it means there are more results than listed. Use the value in your request body as a page_token field to view more results."
                    },
                    "type_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.Type"
                        },
                        "description": "The asset types found from your request contained in an array as objects."
                    }
                },
                "description": "Result returned from `ListTypes`",
                "title": "ListTypesResponse"
            },
            "s12.assets.v1.Location": {
                "type": "object",
                "properties": {
                    "geo_position": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    },
                    "address": {
                        "type": "string",
                        "description": "The address geocoded from the latitude/longitude.\nDefaults to empty value if not provided."
                    },
                    "last_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the location was last updated."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.assets.v1.LocationStatus"
                    },
                    "motion_status_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp of when the motion status was updated"
                    }
                },
                "description": "The location of an object.",
                "required": [
                    "geo_position",
                    "last_updated_at"
                ]
            },
            "s12.assets.v1.LocationStatus": {
                "type": "string",
                "enum": [
                    "LOCATION_STATUS_UNSPECIFIED",
                    "LOCATION_STATUS_ONLINE",
                    "LOCATION_STATUS_OFFLINE"
                ],
                "default": "LOCATION_STATUS_UNSPECIFIED",
                "description": "Status of the location.\n\n - LOCATION_STATUS_UNSPECIFIED: Indicates the status of the location is unspecified.\n - LOCATION_STATUS_ONLINE: Indicates the status of the location is online.\n - LOCATION_STATUS_OFFLINE: Indicates the status of the location is offline."
            },
            "s12.assets.v1.LookupAssetsByFieldRequest": {
                "type": "object",
                "properties": {
                    "page_token": {
                        "type": "string",
                        "description": "OPTIONAL. The value of next_page_token from a previous response. If\nspecified, the API will return the next batch of results following the\nprevious list assets request."
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "OPTIONAL. The number of assets to return. By default, each request\nreturns 50 assets. You can specify a page_size value between 1 to 100."
                    },
                    "asset_filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.AssetFilter"
                        },
                        "description": "OPTIONAL. The array of asset filters to apply in your request. You can\napply multiple filters in a single request."
                    },
                    "order_by": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetsOrderBy"
                    },
                    "field_name": {
                        "type": "string",
                        "description": "Name of the field to look up by."
                    },
                    "string_value": {
                        "type": "string",
                        "description": "The string value of a field."
                    }
                },
                "description": "The parameters for `LookupAssetsByField`",
                "title": "LookupAssetsByFieldRequest"
            },
            "s12.assets.v1.LookupAssetsByFieldResponse": {
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.Asset"
                        },
                        "description": "The assets found from your request contained in an array as objects."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The value you can use to retrieve additional assets. If a value exists, it\nmeans there are more results than listed. Use the value in your request\nbody as a page_token field to view more results."
                    }
                },
                "description": "Result returned from `LookupAssetsByField`",
                "title": "LookupAssetsByFieldResponse"
            },
            "s12.assets.v1.MotionStatus": {
                "type": "string",
                "enum": [
                    "LOCATION_MOTION_STATUS_UNSPECIFIED",
                    "LOCATION_MOTION_STATUS_PARKED",
                    "LOCATION_MOTION_STATUS_IDLING",
                    "LOCATION_MOTION_STATUS_MOVING",
                    "LOCATION_MOTION_STATUS_OFFLINE"
                ],
                "default": "LOCATION_MOTION_STATUS_UNSPECIFIED",
                "description": "Status of the motion.\n\n - LOCATION_MOTION_STATUS_UNSPECIFIED: Indicates the status of the motion is unspecified.\n - LOCATION_MOTION_STATUS_PARKED: Indicates the status of the motion is parked.\n - LOCATION_MOTION_STATUS_IDLING: Indicates the status of the motion is idling.\n - LOCATION_MOTION_STATUS_MOVING: Indicates the status of the motion is moving.\n - LOCATION_MOTION_STATUS_OFFLINE: Indicates the offline status of the telematic device"
            },
            "s12.assets.v1.RestoreArchivedAssetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the restored asset."
                    }
                },
                "description": "Result returned from `RestoreArchivedAssetRequest`",
                "title": "RestoreArchivedAssetRequest"
            },
            "s12.assets.v1.SetAssetFieldValuesResponse": {
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/s12.assets.v1.Asset"
                    }
                },
                "description": "Result returned from `SetAssetFieldValues`",
                "title": "SetAssetFieldValuesResponse"
            },
            "s12.assets.v1.Type": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The global unique identifier of the type."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the type."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.assets.v1.TypeCategory"
                    }
                }
            },
            "s12.assets.v1.TypeCategory": {
                "type": "string",
                "enum": [
                    "TYPE_CATEGORY_UNSPECIFIED",
                    "TYPE_CATEGORY_PREDEFINED",
                    "TYPE_CATEGORY_CUSTOM"
                ],
                "default": "TYPE_CATEGORY_UNSPECIFIED",
                "description": "Category of Type.\n\n - TYPE_CATEGORY_UNSPECIFIED: Type Category Unspecified.\n - TYPE_CATEGORY_PREDEFINED: Predefined Type defined by system.\n - TYPE_CATEGORY_CUSTOM: Custom type defined by organisation."
            },
            "s12.assets.v1.TypeField": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "description": "The unique identifier of an asset field. This ID is system-generated."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of an asset field.",
                        "readOnly": true
                    },
                    "visible": {
                        "type": "boolean",
                        "title": "The indicator for whether an asset field is visible for an asset type. A true value indicates that an asset field is associated with the retrieved asset type. A false value indicates otherwise.\n@deprecated. APIs using this will return only visible fields in the future"
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.assets.v1.FieldValueType"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "The options of a field select.",
                        "readOnly": true
                    }
                },
                "description": "Describes the association between an asset type and an asset field.",
                "required": [
                    "field_id"
                ]
            },
            "s12.assets.v1.TypeFilter": {
                "type": "object",
                "properties": {
                    "not": {
                        "type": "boolean",
                        "title": "Whether to include or exclude the value. i.e `not=true` will exclude the\nfilter value from the result set.\n@deprecated"
                    },
                    "type_id": {
                        "type": "string",
                        "description": "Filter by type-id."
                    }
                },
                "description": "TypeFilter is used for filtering types list."
            },
            "s12.assets.v1.TypesService.ListTypeFieldsBody": {
                "type": "object",
                "properties": {
                    "only_visible": {
                        "type": "boolean",
                        "description": "Return only visible fields.\n@deprecated. This API will be return only visible fields in the future."
                    }
                },
                "description": "The parameters for `ListTypeFields`",
                "title": "ListTypeFieldsRequest"
            },
            "s12.assets.v1.TypesService.UpdateTypeBody": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the type."
                            },
                            "type": {
                                "$ref": "#/components/schemas/s12.assets.v1.TypeCategory"
                            }
                        },
                        "description": "Type which replaces the one with matching identifier on the server.",
                        "title": "Type which replaces the one with matching identifier on the server."
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "REQUIRED. The attributes (such as name etc.) you want to update for the type,\nspecified in the parameters. For example, the update_mask=name parameter\nindicates that only the name will be updated in a request, any other\nattributes provided in your request body will be ignored."
                    }
                },
                "description": "The parameters for `UpdateType`",
                "title": "UpdateType",
                "required": [
                    "update_mask"
                ]
            },
            "s12.assets.v1.TypesService.UpdateTypeFieldsBody": {
                "type": "object",
                "properties": {
                    "replace_all": {
                        "type": "boolean",
                        "description": "ReplaceAll will hide all the existing fields for the corresponding\nAssetType and adds the fields provided in the request."
                    },
                    "field_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the fields, identified by id to be associated with the given type."
                    }
                },
                "description": "The parameters for `UpdateTypeFields`",
                "title": "UpdateTypeFieldsRequest"
            },
            "s12.assets.v1.UpdateAssetLocationResponse": {
                "type": "object",
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/s12.assets.v1.AssetLocation"
                    }
                },
                "description": "The result returned from `ListAssetsLocations`",
                "title": "UpdateAssetLocation"
            },
            "s12.assets.v1.UpdateAssetResponse": {
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/s12.assets.v1.Asset"
                    }
                },
                "description": "Result returned from `UpdateAsset`",
                "title": "UpdateAssetResponse"
            },
            "s12.assets.v1.UpdateFieldResponse": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/s12.assets.v1.Field"
                    }
                },
                "description": "Result returned from `UpdateField`",
                "title": "UpdateFieldResponse"
            },
            "s12.assets.v1.UpdateTypeFieldsResponse": {
                "type": "object",
                "properties": {
                    "type_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.assets.v1.TypeField"
                        },
                        "description": "List of the fields associated with the given type."
                    }
                },
                "description": "Result returned from `UpdateTypeFields`",
                "title": "UpdateTypeFieldsResponse"
            },
            "s12.assets.v1.UpdateTypeResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.assets.v1.Type"
                    }
                },
                "description": "Result returned from `UpdateType`",
                "title": "UpdateTypeResponse"
            },
            "s12.common.Color": {
                "type": "object",
                "properties": {
                    "red": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of red in the color as a value in the interval [0, 255]."
                    },
                    "green": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of green in the color as a value in the interval [0, 255]."
                    },
                    "blue": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of blue in the color as a value in the interval [0, 255]."
                    }
                },
                "title": "Color represents a color representation of given option and is decimal\nrepresentation of RGB"
            },
            "s12.common.GeoPosition": {
                "type": "object",
                "properties": {
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "title": "The geographical longitude"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "title": "The geographical latitude"
                    },
                    "accuracy": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The accuracy in meters"
                    }
                },
                "description": "A position is the fundamental geographical geometry construct."
            },
            "s12.common.GetMessagesRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Optional. Number of messages to be returned in a single request. Maximum\n100. Non-positive values are ignored. The presence of `next_page_token` in\nthe response indicates that more results might be available. For example:\n'20'"
                    },
                    "page_token": {
                        "type": "string",
                        "title": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.  The values of other method\nparameters should be identical to those in the previous call.\nFor example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "reference_id": {
                        "type": "string",
                        "title": "The ID of the resource your are looking for messages for"
                    },
                    "reference_type": {
                        "$ref": "#/components/schemas/s12.common.MessageReferenceTypes"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Optional. Parent_id represents the ID of the parent message if any."
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    }
                },
                "description": "The parameters for `GetMessages`",
                "title": "GetMessagesRequest",
                "required": [
                    "reference_id",
                    "reference_type"
                ]
            },
            "s12.common.GetMessagesResponse": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Message"
                        },
                        "title": "All messages for a given resource"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "If there are more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call the same\nmethod again using the value of `next_page_token` as `page_token`.\nFor Example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of Messages found"
                    }
                },
                "description": "The result of `GetMessages`",
                "title": "GetMessagesResponse"
            },
            "s12.common.Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "UUID of the group"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the group"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type of the group (ex: org, group, etc)"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "User UUIDs that are members of this group"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the group"
                    },
                    "dynamic": {
                        "type": "boolean",
                        "description": "Is the group a dynamically assigned group or a statically assigned group."
                    }
                },
                "title": "Groups contains all information about a group"
            },
            "s12.common.IdValueEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Key of the entry"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value of the entry"
                    }
                },
                "title": "Key/Value represents simple data structure\nUse it for repeated map-like data structures\nFor example: `users := []*IdValueEntry{&IdValueEntry{id: \"some-id\", value:\n\"FirstName LastName\")}}`"
            },
            "s12.common.Language": {
                "type": "string",
                "enum": [
                    "LANGUAGE_UNSPECIFIED",
                    "LANGUAGE_EN_US",
                    "LANGUAGE_EN_GB",
                    "LANGUAGE_DE_DE",
                    "LANGUAGE_ES_ES",
                    "LANGUAGE_FR_FR",
                    "LANGUAGE_PT_BR",
                    "LANGUAGE_NL_NL"
                ],
                "default": "LANGUAGE_UNSPECIFIED",
                "description": "- LANGUAGE_UNSPECIFIED: Language unspecified\n - LANGUAGE_EN_US: Language en-US\n - LANGUAGE_EN_GB: Language en-GB\n - LANGUAGE_DE_DE: Language de-DE\n - LANGUAGE_ES_ES: Language es-ES\n - LANGUAGE_FR_FR: Language fr-FR\n - LANGUAGE_PT_BR: Language pt-BR\n - LANGUAGE_NL_NL: Language nl-NL",
                "title": "Language represents the languages offered in SafetyCulture"
            },
            "s12.common.MeasurementUnitSymbol": {
                "type": "string",
                "enum": [
                    "MEASUREMENT_UNIT_SYMBOL_KILOMETERS",
                    "MEASUREMENT_UNIT_SYMBOL_MILES",
                    "MEASUREMENT_UNIT_SYMBOL_HOURS",
                    "MEASUREMENT_UNIT_SYMBOL_MINUTES",
                    "MEASUREMENT_UNIT_SYMBOL_INCHES",
                    "MEASUREMENT_UNIT_SYMBOL_FOOT",
                    "MEASUREMENT_UNIT_SYMBOL_MILLIMETERS",
                    "MEASUREMENT_UNIT_SYMBOL_CENTIMETERS",
                    "MEASUREMENT_UNIT_SYMBOL_METERS",
                    "MEASUREMENT_UNIT_SYMBOL_MILLILITRES",
                    "MEASUREMENT_UNIT_SYMBOL_LITRES",
                    "MEASUREMENT_UNIT_SYMBOL_GALLONS",
                    "MEASUREMENT_UNIT_SYMBOL_CUBIC_METERS",
                    "MEASUREMENT_UNIT_SYMBOL_SECONDS",
                    "MEASUREMENT_UNIT_SYMBOL_FAHRENHEIT",
                    "MEASUREMENT_UNIT_SYMBOL_CELSIUS",
                    "MEASUREMENT_UNIT_SYMBOL_KELVIN",
                    "MEASUREMENT_UNIT_SYMBOL_OUNCE",
                    "MEASUREMENT_UNIT_SYMBOL_POUNDS",
                    "MEASUREMENT_UNIT_SYMBOL_TONNES",
                    "MEASUREMENT_UNIT_SYMBOL_GRAMS",
                    "MEASUREMENT_UNIT_SYMBOL_KILOGRAMS",
                    "MEASUREMENT_UNIT_SYMBOL_AMPERES",
                    "MEASUREMENT_UNIT_SYMBOL_HERTZ",
                    "MEASUREMENT_UNIT_SYMBOL_OHM",
                    "MEASUREMENT_UNIT_SYMBOL_VOLTS",
                    "MEASUREMENT_UNIT_SYMBOL_WATTS",
                    "MEASUREMENT_UNIT_SYMBOL_CANDELA",
                    "MEASUREMENT_UNIT_SYMBOL_CYCLES",
                    "MEASUREMENT_UNIT_SYMBOL_PERCENT",
                    "MEASUREMENT_UNIT_SYMBOL_POUNDS_PER_SQUARE_INCH",
                    "MEASUREMENT_UNIT_SYMBOL_MOLE",
                    "MEASUREMENT_UNIT_SYMBOL_DAYS",
                    "MEASUREMENT_UNIT_SYMBOL_WEEKS",
                    "MEASUREMENT_UNIT_SYMBOL_MONTHS"
                ],
                "description": "Collection of symbols (km, mi, hr, etc) used in units of measurement.\n\n - MEASUREMENT_UNIT_SYMBOL_KILOMETERS: Measurement unit symbol for kilometers.\n - MEASUREMENT_UNIT_SYMBOL_MILES: Measurement unit symbol for miles.\n - MEASUREMENT_UNIT_SYMBOL_HOURS: Measurement unit symbol for hours.\n - MEASUREMENT_UNIT_SYMBOL_MINUTES: Measurement unit symbol for minutes.\n - MEASUREMENT_UNIT_SYMBOL_INCHES: Measurement unit symbol for inches.\n - MEASUREMENT_UNIT_SYMBOL_FOOT: Measurement unit symbol for foot.\n - MEASUREMENT_UNIT_SYMBOL_MILLIMETERS: Measurement unit symbol for Millimeters.\n - MEASUREMENT_UNIT_SYMBOL_CENTIMETERS: Measurement unit symbol for Centimeters.\n - MEASUREMENT_UNIT_SYMBOL_METERS: Measurement unit symbol for meters.\n - MEASUREMENT_UNIT_SYMBOL_MILLILITRES: Measurement unit symbol for millilitres.\n - MEASUREMENT_UNIT_SYMBOL_LITRES: Measurement unit symbol for litres.\n - MEASUREMENT_UNIT_SYMBOL_GALLONS: Measurement unit symbol for gallons.\n - MEASUREMENT_UNIT_SYMBOL_CUBIC_METERS: Measurement unit symbol for cubic meters.\n - MEASUREMENT_UNIT_SYMBOL_SECONDS: Measurement unit symbol for seconds.\n - MEASUREMENT_UNIT_SYMBOL_FAHRENHEIT: Measurement unit symbol for fahrenheit.\n - MEASUREMENT_UNIT_SYMBOL_CELSIUS: Measurement unit symbol for celsius.\n - MEASUREMENT_UNIT_SYMBOL_KELVIN: Measurement unit symbol for kelvin.\n - MEASUREMENT_UNIT_SYMBOL_OUNCE: Measurement unit symbol for ounce.\n - MEASUREMENT_UNIT_SYMBOL_POUNDS: Measurement unit symbol for pounds.\n - MEASUREMENT_UNIT_SYMBOL_TONNES: Measurement unit symbol for tonnes.\n - MEASUREMENT_UNIT_SYMBOL_GRAMS: Measurement unit symbol for grams.\n - MEASUREMENT_UNIT_SYMBOL_KILOGRAMS: Measurement unit symbol for kilograms.\n - MEASUREMENT_UNIT_SYMBOL_AMPERES: Measurement unit symbol for amperes.\n - MEASUREMENT_UNIT_SYMBOL_HERTZ: Measurement unit symbol for hertz.\n - MEASUREMENT_UNIT_SYMBOL_OHM: Measurement unit symbol for ohm.\n - MEASUREMENT_UNIT_SYMBOL_VOLTS: Measurement unit symbol for volts.\n - MEASUREMENT_UNIT_SYMBOL_WATTS: Measurement unit symbol for watts.\n - MEASUREMENT_UNIT_SYMBOL_CANDELA: Measurement unit symbol for candela.\n - MEASUREMENT_UNIT_SYMBOL_CYCLES: Measurement unit symbol for cycles.\n - MEASUREMENT_UNIT_SYMBOL_PERCENT: Measurement unit symbol for percent.\n - MEASUREMENT_UNIT_SYMBOL_POUNDS_PER_SQUARE_INCH: Measurement unit symbol for pounds per square inch.\n - MEASUREMENT_UNIT_SYMBOL_MOLE: Measurement unit symbol for mole.\n - MEASUREMENT_UNIT_SYMBOL_DAYS: Measurement unit symbol for days.\n - MEASUREMENT_UNIT_SYMBOL_WEEKS: Measurement unit symbol for weeks.\n - MEASUREMENT_UNIT_SYMBOL_MONTHS: Measurement unit symbol for months."
            },
            "s12.common.Media": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string",
                        "title": "full file name, including file extension"
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    }
                },
                "title": "Represents an image or video"
            },
            "s12.common.MediaType": {
                "type": "string",
                "enum": [
                    "MEDIA_TYPE_IMAGE",
                    "MEDIA_TYPE_VIDEO",
                    "MEDIA_TYPE_PDF",
                    "MEDIA_TYPE_DOCX",
                    "MEDIA_TYPE_XLSX"
                ],
                "description": " - MEDIA_TYPE_IMAGE: An image file (GIF, JPG, PNG, WEBP).\n - MEDIA_TYPE_VIDEO: A video file (MP4, MOV).\n - MEDIA_TYPE_PDF: A PDF document.\n - MEDIA_TYPE_DOCX: A Microsoft Word document (DOCX, DOC).\n - MEDIA_TYPE_XLSX: A Microsoft Excel spreadsheet (XLSX, XLS)."
            },
            "s12.common.MentionMessage": {
                "type": "object",
                "properties": {
                    "mention_id": {
                        "type": "string"
                    },
                    "mention_type": {
                        "$ref": "#/components/schemas/s12.common.MentionType"
                    },
                    "text": {
                        "type": "string",
                        "description": "Used as a response value but cannot be sent or edited."
                    }
                },
                "title": "Mentionmessage is the message type used for sending @mentions"
            },
            "s12.common.MentionType": {
                "type": "string",
                "enum": [
                    "MENTION_TYPE_UNKNOWN",
                    "MENTION_TYPE_USER",
                    "MENTION_TYPE_ROLE"
                ],
                "default": "MENTION_TYPE_UNKNOWN",
                "description": "MentionType the type of mention that is being used. This could be users/roles\netc."
            },
            "s12.common.Message": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An ID uniquely identifying this message."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Optional. parent_id represents the parent message this belongs too."
                    },
                    "reference_id": {
                        "type": "string",
                        "title": "The ID of the resource you wish to comment on"
                    },
                    "reference_type": {
                        "$ref": "#/components/schemas/s12.common.MessageReferenceTypes"
                    },
                    "message": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.MessageContent"
                        },
                        "title": "The message being sent"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user who sent the message"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the user who sent the message"
                    },
                    "author_profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time the message was sent."
                    },
                    "reply_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of replies to this given message."
                    }
                },
                "title": "Message represents a given singular message"
            },
            "s12.common.MessageContent": {
                "type": "object",
                "properties": {
                    "text": {
                        "$ref": "#/components/schemas/s12.common.TextMessage"
                    },
                    "mention": {
                        "$ref": "#/components/schemas/s12.common.MentionMessage"
                    }
                },
                "description": "MessageContent list of possible message types."
            },
            "s12.common.MessageReferenceTypes": {
                "type": "string",
                "enum": [
                    "MESSAGE_REFERENCE_TYPES_UNKNOWN_UNSPECIFIED",
                    "MESSAGE_REFERENCE_TYPES_HEADS_UP"
                ],
                "default": "MESSAGE_REFERENCE_TYPES_UNKNOWN_UNSPECIFIED",
                "description": "MessageReferenceTypes is a list of supported message reference types."
            },
            "s12.common.Money": {
                "type": "object",
                "properties": {
                    "currency_code": {
                        "type": "string",
                        "description": "The 3-letter currency code defined in ISO 4217."
                    },
                    "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                    },
                    "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example £-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                    }
                },
                "description": "Represents an amount of money with its currency type."
            },
            "s12.common.RequestByID": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID to query data for"
                    }
                },
                "title": "Generic request by ID structure",
                "required": [
                    "id"
                ]
            },
            "s12.common.SortDirection": {
                "type": "string",
                "enum": [
                    "SORT_DIRECTION_UNSPECIFIED",
                    "SORT_DIRECTION_ASC",
                    "SORT_DIRECTION_DESC"
                ],
                "default": "SORT_DIRECTION_UNSPECIFIED",
                "title": "Common set of sorting directions as used by lists"
            },
            "s12.common.Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The status code, which should be an enum value of the predefined codes in\nhttps://github.com/grpc/grpc/blob/master/doc/statuscodes.md"
                    },
                    "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English."
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/google.protobuf.Any"
                        },
                        "description": "A list of messages that carry the error details."
                    }
                },
                "description": "The `Status` type defines a logical error model and is based on the richer\nerror model as described in the guide - https://grpc.io/docs/guides/error/ A\n`Status` message contains three pieces of data: error code, error message and\nerror details. The `Status.details` can be a collection of `Any` proto\nmessage. Each proto message can describe an error type."
            },
            "s12.common.SubscriptionSeatTypes": {
                "type": "string",
                "enum": [
                    "SUBSCRIPTION_SEAT_TYPE_UNSPECIFIED",
                    "SUBSCRIPTION_SEAT_TYPE_PREMIUM",
                    "SUBSCRIPTION_SEAT_TYPE_COLLABORATOR",
                    "SUBSCRIPTION_SEAT_TYPE_LITE",
                    "SUBSCRIPTION_SEAT_TYPE_SERVICE_USER",
                    "SUBSCRIPTION_SEAT_TYPE_SUPPORT"
                ],
                "default": "SUBSCRIPTION_SEAT_TYPE_UNSPECIFIED",
                "title": "SubscriptionSeatTypes is a list of potential subscription seat types"
            },
            "s12.common.TemperatureUnit": {
                "type": "string",
                "enum": [
                    "KELVIN",
                    "CELSIUS",
                    "FAHRENHEIT"
                ],
                "default": "UNKNOWN_TEMPERATURE_UNIT",
                "description": "- KELVIN: Represents Kelvin temperature unit\n - CELSIUS: Represents Celsius temperature unit\n - FAHRENHEIT: Represents Fahrenheit temperature unit",
                "title": "Represents different units to measure temperature"
            },
            "s12.common.TextMessage": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    }
                },
                "title": "TextMessage the message type containing a message in text"
            },
            "s12.common.UUIDValue": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "description": "Wrapper message for a string representation of a `UUID`."
            },
            "s12.common.UserActiveStatus": {
                "type": "string",
                "enum": [
                    "USER_ACTIVE_STATUS_UNSPECIFIED",
                    "USER_ACTIVE_STATUS_ACTIVE",
                    "USER_ACTIVE_STATUS_DEACTIVATED"
                ],
                "default": "USER_ACTIVE_STATUS_UNSPECIFIED",
                "description": "- USER_ACTIVE_STATUS_UNSPECIFIED: Status is unknown or not specified\n - USER_ACTIVE_STATUS_ACTIVE: User is active\n - USER_ACTIVE_STATUS_DEACTIVATED: User has been deactivated",
                "title": "UserActiveStatus enumerates possible states of 'status' a user may be in"
            },
            "s12.common.UserDocument": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "UUID of the user"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email of the user"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First name of the user"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last name of the user"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "What timezone the user is in"
                    },
                    "profile_picture": {
                        "type": "string",
                        "title": "URL of the profile picture of the user"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.common.UserActiveStatus"
                    },
                    "external_mappings": {
                        "$ref": "#/components/schemas/s12.common.UserDocument.UserExternalMappings"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    },
                    "profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "last_seen": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the user last interacted with the system. May be empty."
                    },
                    "email_confirmed": {
                        "type": "boolean",
                        "description": "Whether or not the user has confirmed their email."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the user was created."
                    },
                    "language": {
                        "$ref": "#/components/schemas/s12.common.Language"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Phone number of the user"
                    }
                },
                "title": "UserDocument contains all information about a user"
            },
            "s12.common.UserDocument.UserExternalMappings": {
                "type": "object",
                "properties": {
                    "edapp_id": {
                        "type": "string"
                    }
                },
                "title": "UserExternalMappings defines third-party details associated with a user's account"
            },
            "s12.common.v1.FeedMetadataSimple": {
                "type": "object",
                "properties": {
                    "next_page": {
                        "type": "string",
                        "description": "Full path to retrieve the next page of results, including the next_page_token."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The value you can use to retrieve additional results.\nIf a value exists, it means there are more results than listed.\nUse the value in your request body as a page_token to view more results."
                    }
                },
                "description": "FeedMetadataSimple. Feed metadata including organization ID, request time, and query time range."
            },
            "s12.common.v1.PaginationMetadata": {
                "type": "object",
                "properties": {
                    "next_page": {
                        "type": "string",
                        "description": "The path to fetch the next page on."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The value you can use to retrieve additional results. If a value exists, it\nmeans there are more results than listed. Use the value in your request\nbody as a page_token field to view more results."
                    }
                },
                "description": "Pagination structure."
            },
            "s12.contractors.v1.Address": {
                "type": "object",
                "properties": {
                    "sub_premise": {
                        "type": "string",
                        "title": "A first-order entity below a named location\neg. Building, floor level, or suite"
                    },
                    "street_number": {
                        "type": "string",
                        "title": "Street number"
                    },
                    "street": {
                        "type": "string",
                        "title": "Street name"
                    },
                    "city": {
                        "type": "string",
                        "title": "City or locality"
                    },
                    "administrative_area_level_2": {
                        "type": "string",
                        "title": "A second-order civil entity below the country level. These do not exist in all countries.\neg. within the United States: county or district"
                    },
                    "administrative_area_level_1": {
                        "type": "string",
                        "title": "A first-order civil entity below the country level. These do not exist in all countries.\neg. within the United States: state or province"
                    },
                    "postal_code": {
                        "type": "string",
                        "title": "Postal code"
                    },
                    "country_code": {
                        "type": "string",
                        "title": "Country code (ISO 3166-1 alpha-2)"
                    }
                }
            },
            "s12.contractors.v1.CompanyComplianceStatistics": {
                "type": "object",
                "properties": {
                    "expired_document_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company documents that have expired."
                    },
                    "expiring_soon_document_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company documents that are expiring soon.\nThe service hard-codes \"expiring soon\" as documents that are expiring within the next 30 days."
                    },
                    "pending_approval_document_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company documents that are pending approval."
                    }
                },
                "description": "CompanyComplianceStatistics is a message that contains statistics about a contractor company's compliance."
            },
            "s12.contractors.v1.CompanyContactDetails": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the company."
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "The phone number of the company."
                    },
                    "address": {
                        "$ref": "#/components/schemas/s12.contractors.v1.Address"
                    }
                },
                "description": "Contact details associated with a contractor company."
            },
            "s12.contractors.v1.CompanyDocument": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resource_version_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    },
                    "version_number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "source_id": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "@deprecated. Use created_by_user instead."
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "archived_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "archived_by": {
                        "type": "string"
                    },
                    "original": {
                        "$ref": "#/components/schemas/s12.resources.v1.ResourceMedia"
                    },
                    "company_document_type": {
                        "$ref": "#/components/schemas/s12.contractors.v1.CompanyDocumentType"
                    },
                    "issue_date": {
                        "$ref": "#/components/schemas/google.type.Date"
                    },
                    "expiration_date": {
                        "$ref": "#/components/schemas/google.type.Date"
                    },
                    "expiry_status": {
                        "$ref": "#/components/schemas/s12.resources.v1.ExpiryStatus"
                    },
                    "parent_id": {
                        "type": "string"
                    },
                    "approval_status": {
                        "$ref": "#/components/schemas/s12.documents.v1.ApprovalStatus"
                    },
                    "created_by_user": {
                        "$ref": "#/components/schemas/s12.common.UserDocument"
                    }
                }
            },
            "s12.contractors.v1.CompanyDocumentSortField": {
                "type": "string",
                "enum": [
                    "DOCUMENT_SORT_FIELD_UNSPECIFIED",
                    "DOCUMENT_SORT_FIELD_CREATED_AT",
                    "DOCUMENT_SORT_FIELD_MODIFIED_AT",
                    "DOCUMENT_SORT_FIELD_TITLE",
                    "DOCUMENT_SORT_FIELD_FILE_NAME",
                    "DOCUMENT_SORT_FIELD_TYPE",
                    "DOCUMENT_SORT_FIELD_ISSUE_DATE",
                    "DOCUMENT_SORT_FIELD_EXPIRATION_DATE",
                    "DOCUMENT_SORT_FIELD_EXPIRY_STATUS"
                ],
                "default": "DOCUMENT_SORT_FIELD_UNSPECIFIED",
                "title": "- DOCUMENT_SORT_FIELD_CREATED_AT: The time the document was created at\n - DOCUMENT_SORT_FIELD_MODIFIED_AT: The time the document was modified at\n - DOCUMENT_SORT_FIELD_TITLE: The title of the document\n - DOCUMENT_SORT_FIELD_FILE_NAME: The file name of the document\n - DOCUMENT_SORT_FIELD_TYPE: The type of the document\n - DOCUMENT_SORT_FIELD_ISSUE_DATE: The issue date of the document\n - DOCUMENT_SORT_FIELD_EXPIRATION_DATE: The expiration date of the document\n - DOCUMENT_SORT_FIELD_EXPIRY_STATUS: The expiry status of the document"
            },
            "s12.contractors.v1.CompanyDocumentType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "s12.contractors.v1.CompanyDocumentsFilter": {
                "type": "object",
                "properties": {
                    "is_archived": {
                        "type": "boolean",
                        "description": "Filter by archived status. Default is unarchived only."
                    },
                    "type_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter by document type. If not provided, all types are returned."
                    },
                    "expiry_statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.resources.v1.ExpiryStatus"
                        },
                        "description": "Filter by the expiry status of the document. If not provided, all statuses are returned."
                    },
                    "approval_statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.ApprovalStatus"
                        },
                        "description": "Filter by the approval status of the document. If not provided, all statuses are returned."
                    }
                }
            },
            "s12.contractors.v1.CompanyUserMetadata": {
                "type": "object",
                "properties": {
                    "user_doc": {
                        "$ref": "#/components/schemas/s12.common.UserDocument"
                    },
                    "role": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyRole"
                    }
                },
                "description": "CompanyUserMetadata is used to represent a user in a company, along with any additional metadata."
            },
            "s12.contractors.v1.ContractorCompany": {
                "type": "object",
                "properties": {
                    "company_id": {
                        "type": "string",
                        "description": "The ID of the company."
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyAttributes"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyMetadata"
                    },
                    "company_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    }
                },
                "description": "A contractor company."
            },
            "s12.contractors.v1.ContractorCompanyAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the company."
                    },
                    "contact_details": {
                        "$ref": "#/components/schemas/s12.contractors.v1.CompanyContactDetails"
                    },
                    "image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "external_reference_id": {
                        "type": "string",
                        "description": "An optional external reference ID for the company that is used in external systems. Enforces uniqueness."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyStatus"
                    },
                    "compliance_statistics": {
                        "$ref": "#/components/schemas/s12.contractors.v1.CompanyComplianceStatistics"
                    }
                },
                "description": "Intrinsic attributes associated with a contractor company."
            },
            "s12.contractors.v1.ContractorCompanyFilter": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "description": "Optional. The search string to filter by. If not provided, all unfiltered results will be returned."
                    },
                    "company_type_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional. The company type IDs to filter by. If not provided, all company types will be returned."
                    },
                    "contractor_company_statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyStatus"
                        },
                        "description": "Optional. The contractor company statuses to filter by. If not provided, all statuses will be returned."
                    },
                    "needs_attention": {
                        "type": "boolean",
                        "description": "Optional. Whether to include only companies that need attention. If not provided, all companies will be returned."
                    }
                },
                "description": "ContractorCompanyFilter is used to filter contractor companies."
            },
            "s12.contractors.v1.ContractorCompanyMetadata": {
                "type": "object",
                "properties": {
                    "created_by_user": {
                        "$ref": "#/components/schemas/s12.contractors.v1.User"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The creation date of the company"
                    },
                    "last_modified_by_user": {
                        "$ref": "#/components/schemas/s12.contractors.v1.User"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The last modified date of the company"
                    },
                    "created_by_user_doc": {
                        "$ref": "#/components/schemas/s12.common.UserDocument"
                    },
                    "last_modified_by_user_doc": {
                        "$ref": "#/components/schemas/s12.common.UserDocument"
                    }
                },
                "description": "Metadata associated with a contractor company."
            },
            "s12.contractors.v1.ContractorCompanyRole": {
                "type": "string",
                "enum": [
                    "CONTRACTOR_COMPANY_ROLE_UNSPECIFIED",
                    "CONTRACTOR_COMPANY_ROLE_MEMBER",
                    "CONTRACTOR_COMPANY_ROLE_DELEGATED_MANAGER"
                ],
                "default": "CONTRACTOR_COMPANY_ROLE_UNSPECIFIED",
                "description": "The role of a user within a contractor company.\n\n - CONTRACTOR_COMPANY_ROLE_MEMBER: The default role - member.\n - CONTRACTOR_COMPANY_ROLE_DELEGATED_MANAGER: The user is a key contact (previously known as delegated company manager)."
            },
            "s12.contractors.v1.ContractorCompanySortField": {
                "type": "string",
                "enum": [
                    "COMPANY_SORT_FIELD_UNSPECIFIED",
                    "COMPANY_SORT_FIELD_COMPANY_TYPE_NAME",
                    "COMPANY_SORT_FIELD_COMPANY_NAME",
                    "COMPANY_SORT_FIELD_COMPANY_STATUS"
                ],
                "default": "COMPANY_SORT_FIELD_UNSPECIFIED",
                "description": "ContractorCompanySortField is used to define the sorting criteria of contractor companies.\n\n - COMPANY_SORT_FIELD_UNSPECIFIED: Unspecified sort field.\n - COMPANY_SORT_FIELD_COMPANY_TYPE_NAME: Sort by company type name.\n - COMPANY_SORT_FIELD_COMPANY_NAME: Sort by company name.\n - COMPANY_SORT_FIELD_COMPANY_STATUS: Sort by company status."
            },
            "s12.contractors.v1.ContractorCompanyStatus": {
                "type": "string",
                "enum": [
                    "CONTRACTOR_COMPANY_STATUS_ACTIVE",
                    "CONTRACTOR_COMPANY_STATUS_PENDING",
                    "CONTRACTOR_COMPANY_STATUS_DEACTIVATED"
                ],
                "description": "The status of a contractor company.\n\n - CONTRACTOR_COMPANY_STATUS_ACTIVE: The company is active.\n - CONTRACTOR_COMPANY_STATUS_PENDING: The company is pending approval.\n - CONTRACTOR_COMPANY_STATUS_DEACTIVATED: The company is deactivated."
            },
            "s12.contractors.v1.ContractorCompanyUserFilter": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "description": "Optional. The search string to filter by. If not provided, all unfiltered results will be returned."
                    },
                    "user_status": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyUserFilter.UserStatus"
                    }
                },
                "description": "ContractorCompanyUserFilter is used to filter contractor company users."
            },
            "s12.contractors.v1.ContractorCompanyUserFilter.UserStatus": {
                "type": "string",
                "enum": [
                    "USER_STATUS_UNSPECIFIED",
                    "USER_STATUS_ACTIVE",
                    "USER_STATUS_DEACTIVATED"
                ],
                "default": "USER_STATUS_UNSPECIFIED",
                "description": " - USER_STATUS_UNSPECIFIED: Unspecified user status. Will return all users\n - USER_STATUS_ACTIVE: Include only active users.\n - USER_STATUS_DEACTIVATED: Include only deactivated users."
            },
            "s12.contractors.v1.ContractorCompanyUserSortField": {
                "type": "string",
                "enum": [
                    "USER_SORT_FIELD_UNSPECIFIED",
                    "USER_SORT_FIELD_USER_NAME"
                ],
                "default": "USER_SORT_FIELD_UNSPECIFIED",
                "description": "ContractorCompanyUserSortField is used to define the sorting criteria of contractor company users.\n\n - USER_SORT_FIELD_UNSPECIFIED: Unspecified sort field.\n - USER_SORT_FIELD_USER_NAME: Sort by user name."
            },
            "s12.contractors.v1.CreateContractorCompanyRequest": {
                "type": "object",
                "properties": {
                    "company_type_id": {
                        "type": "string",
                        "description": "Required. The ID of the contractor company type."
                    },
                    "company_id": {
                        "type": "string",
                        "description": "Optional. The ID of the new contractor company. This field must be provided if creating a company with an image. This is required to link the media to the company entity."
                    },
                    "contractor_company_attributes": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyAttributes"
                    }
                }
            },
            "s12.contractors.v1.CreateContractorCompanyResponse": {
                "type": "object"
            },
            "s12.contractors.v1.DeleteContractorCompanyResponse": {
                "type": "object"
            },
            "s12.contractors.v1.GetCompanyTypeResponse": {
                "type": "object",
                "properties": {
                    "company_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    }
                }
            },
            "s12.contractors.v1.GetContractorCompanyResponse": {
                "type": "object",
                "properties": {
                    "contractor_company": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompany"
                    }
                }
            },
            "s12.contractors.v1.ListCompanyDocumentsRequest": {
                "type": "object",
                "properties": {
                    "company_id": {
                        "type": "string",
                        "description": "Required. The ID of the contractor company."
                    },
                    "filter": {
                        "$ref": "#/components/schemas/s12.contractors.v1.CompanyDocumentsFilter"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.contractors.v1.CompanyDocumentSortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results to return in a single request."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "If present, will fetch the next page of results. This must be the value of `next_page_token` from the response."
                    },
                    "search": {
                        "$ref": "#/components/schemas/s12.contractors.v1.Search"
                    }
                }
            },
            "s12.contractors.v1.ListCompanyDocumentsResponse": {
                "type": "object",
                "properties": {
                    "company_document_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.contractors.v1.CompanyDocument"
                        },
                        "description": "The list of documents in the company."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The next page token."
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesMetricsRequest": {
                "type": "object",
                "properties": {
                    "type_criteria": {
                        "$ref": "#/components/schemas/s12.typefield.v1.ListTypesCriteria"
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesMetricsResponse": {
                "type": "object",
                "properties": {
                    "types_metrics_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesMetricsResponse.CompanyTypeWithMetrics"
                        },
                        "description": "List of types that satisfy filters under current organization."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this method again using the value of\n`next_page_token` as `page_token`."
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesMetricsResponse.CompanyTypeMetrics": {
                "type": "object",
                "properties": {
                    "deactivated_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company types that are deactivated."
                    },
                    "pending_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company types that are pending."
                    },
                    "active_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of company types that are active."
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of company types."
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesMetricsResponse.CompanyTypeWithMetrics": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    },
                    "metrics": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ListCompanyTypesMetricsResponse.CompanyTypeMetrics"
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesRequest": {
                "type": "object",
                "properties": {
                    "type_criteria": {
                        "$ref": "#/components/schemas/s12.typefield.v1.ListTypesCriteria"
                    }
                }
            },
            "s12.contractors.v1.ListCompanyTypesResponse": {
                "type": "object",
                "properties": {
                    "types_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.Type"
                        },
                        "description": "List of types that satisfy filters under current organization."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this method again using the value of\n`next_page_token` as `page_token`."
                    }
                }
            },
            "s12.contractors.v1.ListCompanyUserMetadataRequest": {
                "type": "object",
                "properties": {
                    "company_id": {
                        "type": "string",
                        "description": "Required. The ID of the contractor company."
                    },
                    "filter": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyUserFilter"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyUserSortField"
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users to return in a single request."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "If present, will fetch the next page of results. This must be the value of `next_page_token` from the response."
                    }
                }
            },
            "s12.contractors.v1.ListCompanyUserMetadataResponse": {
                "type": "object",
                "properties": {
                    "company_user_metadata_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.contractors.v1.CompanyUserMetadata"
                        },
                        "description": "The list of users in the company."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The next page token."
                    }
                }
            },
            "s12.contractors.v1.ListContractorCompaniesRequest": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyFilter"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanySortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of companies to return in a single request."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "If present, will fetch the next page of results. This must be the value of `next_page_token` from the response."
                    },
                    "include_compliance_stats": {
                        "type": "boolean",
                        "description": "Deprecated. This does nothing. Compliance statistics are now always included in the response."
                    }
                }
            },
            "s12.contractors.v1.ListContractorCompaniesResponse": {
                "type": "object",
                "properties": {
                    "contractor_company_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompany"
                        },
                        "description": "The contractor companies that were retrieved."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The next page token."
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of contractor companies that match the filter."
                    },
                    "total_count_needs_attention": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of contractor companies that match the filter + need attention."
                    }
                }
            },
            "s12.contractors.v1.Search": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "title": "Search on a Company Document's name"
            },
            "s12.contractors.v1.UpdateContractorCompanyRequest": {
                "type": "object",
                "properties": {
                    "company_type_id": {
                        "type": "string",
                        "description": "Required. The ID of the contractor company type."
                    },
                    "company_id": {
                        "type": "string",
                        "description": "Required. The ID of the contractor company."
                    },
                    "contractor_company_attributes": {
                        "$ref": "#/components/schemas/s12.contractors.v1.ContractorCompanyAttributes"
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "Required. The attributes (such as name etc.) you want to update for the contractor company. The contents should reference fields of the ContractorCompanyAttributes message.\nFor example, 'update_mask=name,contact_details.address' indicates that only the name and contact_details.address fields of the ContractorCompanyAttributes message should be updated. Any other attributes provided in the ContractorCompanyAttributes body will be ignored."
                    }
                }
            },
            "s12.contractors.v1.UpdateContractorCompanyResponse": {
                "type": "object"
            },
            "s12.contractors.v1.User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the user."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "last_name": {
                        "type": "string",
                        "description": "The last name of the user."
                    }
                },
                "description": "Information about a SafetyCulture user."
            },
            "s12.directory.v1.AddUsersFoldersAssociationsRequest": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsRequest.FolderAssignments"
                        },
                        "title": "Map of folder ID to users assignments"
                    }
                },
                "title": "AddUsersFoldersAssociationsRequest is the request for the `AddUsersFoldersAssociations` endpoint"
            },
            "s12.directory.v1.AddUsersFoldersAssociationsRequest.FolderAssignments": {
                "type": "object",
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of UserIDs for users to be granted a \"MEMBER\" association with the given folder"
                    }
                },
                "title": "FolderAssignments represents the folders to be assigned to a given user"
            },
            "s12.directory.v1.AddUsersFoldersAssociationsResponse": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsResponse.FolderAssignmentsStatuses"
                        },
                        "title": "Map of folder ID to statuses per user"
                    }
                },
                "title": "AddUsersFoldersAssociationsResponse is the response for the `AddUsersFoldersAssociations` endpoint"
            },
            "s12.directory.v1.AddUsersFoldersAssociationsResponse.FolderAssignmentsStatuses": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsResponse.Status"
                        },
                        "title": "Map of UserIDs for users with an association type of \"MEMBER\" with their\nresulting status after adding access to the folder. This map corresponds to the\nlist of UserIDs passed through `user_ids` in `AddUsersFoldersAssociationsRequest`"
                    },
                    "manager_status": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.AddUsersFoldersAssociationsResponse.Status"
                        },
                        "title": "Map of UserIDs for users with an association type of \"MANAGER\" with their\nresulting status after adding access to the folder. This map corresponds to the\nlist of UserIDs passed through `manager_user_ids` in `AddUsersFoldersAssociationsRequest`"
                    }
                },
                "title": "FolderAssignmentsStatuses maps the user IDs to their status for the given folder"
            },
            "s12.directory.v1.AddUsersFoldersAssociationsResponse.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_ADDED",
                    "STATUS_ALREADY_DIRECT_MEMBER",
                    "STATUS_ALREADY_INHERITED_MEMBER",
                    "STATUS_REMOVED"
                ],
                "default": "STATUS_UNSPECIFIED",
                "description": "- STATUS_UNSPECIFIED: Status unknown\n - STATUS_ADDED: Folder was successfully associated to the user\n - STATUS_ALREADY_DIRECT_MEMBER: User was already a direct member of the folder\n - STATUS_ALREADY_INHERITED_MEMBER: User was already an inherited member of the folder\n - STATUS_REMOVED: User was removed from the folder (side-effect of being added to an ancestor)",
                "title": "Resulting status values after associating a folder and user"
            },
            "s12.directory.v1.CreateFolderRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Required. Non-empty folder name. Limited to maximum 250 characters."
                    },
                    "parent_id": {
                        "type": "string",
                        "title": "Optional. Parent folder UUID. If unspecified, will be created as a root\nfolder"
                    },
                    "id": {
                        "type": "string",
                        "description": "Optional. Folder UUID. If unspecified, backend will generate the ID."
                    },
                    "meta_label": {
                        "type": "string",
                        "description": "Required. Must be one of: \"location\", \"area\", \"region\", \"state\", or \"country\".\nNote that these meta labels may not match custom site hierarchy labels used by the organization."
                    },
                    "domain": {
                        "type": "string",
                        "title": "domain represents the type/domain/hierarchy for the folder. This is used\nfor getting folders of a certain domain, i.e. getting all `template`\nfolders or `site` folders"
                    }
                },
                "description": "The parameters for `CreateFolderRequest`",
                "title": "CreateFolderRequest",
                "required": [
                    "name",
                    "meta_label"
                ]
            },
            "s12.directory.v1.CreateFolderResponse": {
                "type": "object",
                "properties": {
                    "folder": {
                        "$ref": "#/components/schemas/s12.directory.v1.Folder"
                    }
                },
                "description": "Result returned from `CreateFolderRequest`",
                "title": "CreateFolderResponse"
            },
            "s12.directory.v1.DeleteFoldersResponse": {
                "type": "object",
                "properties": {
                    "folder_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of deleted folderIDs"
                    }
                },
                "description": "Result returned from `DeleteFoldersResponse`",
                "title": "DeleteFoldersResponse"
            },
            "s12.directory.v1.Directory.UpdateFolderPropertiesBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/s12.directory.v1.UpdateFolderPropertiesRequest.FolderName"
                    },
                    "domain": {
                        "type": "string",
                        "title": "domain represents the type/domain/hierarchy for the folder. This is\nused for changing the properties of a specific domain folder"
                    }
                },
                "description": "The parameters for `UpdateFolderPropertiesRequest`",
                "title": "UpdateFolderPropertiesRequest"
            },
            "s12.directory.v1.Folder": {
                "type": "object",
                "example": {
                    "id": "4fb56fa8-fa23-4a9c-907e-8367abc75a2f",
                    "name": "Sydney",
                    "org_id": "d31e24be-e7a4-4a28-a230-044f850041fc",
                    "creator_id": "a3452937-9fa7-4ba2-9ffa-c3bbee3fc947",
                    "created_at": "2020-04-28T04:14:31:00Z",
                    "modified_at": "2020-04-28T04:14:31:00Z",
                    "meta_label": "location"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "An unique identifier for the folder. Must be a valid UUID.\nFor example: '00001d65-d336-485a-8331-7b53f37e8f51'"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name associated with folder"
                    },
                    "org_id": {
                        "type": "string",
                        "title": "The organisation that the folder belongs to"
                    },
                    "creator_id": {
                        "type": "string",
                        "title": "The user id responsible for creating the folder\nFor example: 'user_5441fffcde344415bb7ccaceda27e196'"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The creation timestamp of the folder (Date, Time, Timezone)\nFor example: '2020-04-28T04:14:31:00Z'"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The timestamp of the last modification for the folder (Date, Time,\nTimezone) For example: '2020-04-28T04:14:00Z'"
                    },
                    "meta_label": {
                        "type": "string",
                        "title": "Additional meta information that can be associated with the folder\ne.g. 'location'"
                    },
                    "members_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users with a direct association of type 'MEMBER' for the folder"
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Whether a folder has been marked as deleted or not."
                    }
                },
                "description": "Folder represents the main directory object",
                "title": "Folder"
            },
            "s12.directory.v1.FolderList": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.Folder"
                        },
                        "title": "The list of folders in the message"
                    }
                },
                "description": "FolderList represents an array of folders",
                "title": "FolderList"
            },
            "s12.directory.v1.FolderWithAncestors": {
                "type": "object",
                "properties": {
                    "folder": {
                        "$ref": "#/components/schemas/s12.directory.v1.Folder"
                    },
                    "ancestors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.Folder"
                        },
                        "title": "The folders ancestors. For example, when returning a `location` leaf node,\nthe ancestors will be the [`area`,`region`] folders, when applicable"
                    },
                    "members_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Members count are the count of active users associated with the folder."
                    },
                    "has_children": {
                        "type": "boolean",
                        "title": "Whether the folder has children or not"
                    }
                },
                "description": "FolderWithAncestors represents a a folder with an array of ancestor folders",
                "title": "FolderWithAncestors"
            },
            "s12.directory.v1.FolderWithMembersCount": {
                "type": "object",
                "properties": {
                    "folder": {
                        "$ref": "#/components/schemas/s12.directory.v1.Folder"
                    },
                    "members_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users with a direct association of type 'MEMBER' for the folder"
                    },
                    "has_children": {
                        "type": "boolean",
                        "description": "Whether or not a folder has children."
                    },
                    "inherited_members_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users with an inherited association of type 'MEMBER' for the folder"
                    },
                    "depth": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The depth of the folder. 0 being a top level folder with no parents"
                    },
                    "children_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The count of children folders"
                    }
                },
                "description": "FolderWithMembersCount represents a a folder with additional properties",
                "title": "FolderWithMembersCount"
            },
            "s12.directory.v1.FoldersFilter": {
                "type": "object",
                "properties": {
                    "not": {
                        "type": "boolean",
                        "title": "If true, exclude results that match the condition"
                    },
                    "meta_label": {
                        "type": "string",
                        "title": "Filter on the status"
                    },
                    "folder_id": {
                        "type": "string",
                        "title": "Filter on a specific folder id"
                    },
                    "is_dynamic": {
                        "type": "boolean",
                        "title": "Filter on whether a folder is dynamic or not"
                    }
                },
                "description": "FoldersFilter represents a filter when getting folders",
                "title": "FoldersFilter"
            },
            "s12.directory.v1.FoldersOrderBy": {
                "type": "object",
                "example": {
                    "sort_field": 1,
                    "sort_order": 1
                },
                "properties": {
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.directory.v1.FoldersOrderBy.SortField"
                    },
                    "sort_order": {
                        "$ref": "#/components/schemas/s12.directory.v1.FoldersOrderBy.SortOrder"
                    }
                },
                "description": "FoldersOrderBy represents the sort order folders will be returned in",
                "title": "FoldersOrderBy"
            },
            "s12.directory.v1.FoldersOrderBy.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNSPECIFIED",
                    "SORT_FIELD_NAME",
                    "SORT_FIELD_FOLDER_ID",
                    "SORT_FIELD_USER_ID",
                    "SORT_FIELD_CREATED_AT",
                    "SORT_FIELD_MODIFIED_AT"
                ],
                "default": "SORT_FIELD_UNSPECIFIED",
                "title": "- SORT_FIELD_UNSPECIFIED: The sort field is unspecified\n - SORT_FIELD_NAME: Sort the folder by name\n - SORT_FIELD_FOLDER_ID: Sort the folders by folder id\n - SORT_FIELD_USER_ID: Sort the folders by user id\n - SORT_FIELD_CREATED_AT: Sort the folders by created at\n - SORT_FIELD_MODIFIED_AT: Sort the folders by modified at"
            },
            "s12.directory.v1.FoldersOrderBy.SortOrder": {
                "type": "string",
                "enum": [
                    "SORT_ORDER_UNSPECIFIED",
                    "SORT_ORDER_ASCENDING",
                    "SORT_ORDER_DESCENDING"
                ],
                "default": "SORT_ORDER_UNSPECIFIED",
                "title": "- SORT_ORDER_UNSPECIFIED: The sort order is not specified\n - SORT_ORDER_ASCENDING: The sort order is asc\n - SORT_ORDER_DESCENDING: The sort order is desc"
            },
            "s12.directory.v1.GetAllUsersByFolderResponse": {
                "type": "object",
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The list of user_ids that have explicit and inherited access to the\nrequested folder"
                    }
                },
                "description": "Result returned from `GetAllUsersByFolderResponse`",
                "title": "GetAllUsersByFolderResponse"
            },
            "s12.directory.v1.GetDynamicFoldersByFieldIdListRequest": {
                "type": "object",
                "properties": {
                    "user_field_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "The parameters for `GetDynamicFoldersByFieldIdList`",
                "title": "GetDynamicFoldersByFieldIdListRequest"
            },
            "s12.directory.v1.GetDynamicFoldersByFieldIdListResponse": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.Folder"
                        }
                    }
                },
                "description": "Result returned from `GetDynamicFoldersByFieldIdList`",
                "title": "GetDynamicFoldersByFieldIdListResponse"
            },
            "s12.directory.v1.GetFolderIDsForUserResponse": {
                "type": "object",
                "properties": {
                    "folder_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of folder IDs the user has access to.\nFor example: '5441fffcde344415bb7ccaceda27e196'"
                    },
                    "folder_paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of folder paths the user has access to.\nFor example: '07c7acbf5b1f450d817e5ebb11fda832.5441fffcde344415bb7ccaceda27e196'"
                    }
                },
                "description": "Result returned from `GetFolderIDsForUserResponse`",
                "title": "GetFolderIDsForUserResponse"
            },
            "s12.directory.v1.GetFolderResponse": {
                "type": "object",
                "properties": {
                    "folder": {
                        "$ref": "#/components/schemas/s12.directory.v1.Folder"
                    },
                    "ancestors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.Folder"
                        },
                        "title": "When with_ancestors is true, an array of the folders ancestors will be\nreturned. The array will be ordered, closest ancestor to furthest"
                    },
                    "all_children_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total count of children underneath the folder. I\nIncluding children of children recursively"
                    },
                    "member_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users with a direct association of type 'MEMBER' for the folder"
                    },
                    "deleted": {
                        "type": "boolean",
                        "title": "Whether the folder is deleted or not"
                    }
                },
                "description": "Result returned from `GetFolderResponse`",
                "title": "GetFolderResponse"
            },
            "s12.directory.v1.GetFoldersByParentResponse": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.FolderWithMembersCount"
                        },
                        "title": "List of children folders with a count of\ntheir explicitly associated members\nWhen `include_members_count` is set to false\n`members_count` in `FolderWithMembersCount` is\nalways set to the default zero value"
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "Optional. base64 encoded. If this field is present, the value should be\nused in subsequent calls to GetFoldersByParent to get the next page of\nresults. Otherwise, no further calls should be made."
                    }
                },
                "description": "Result returned from `GetFoldersByParentResponse`",
                "title": "GetFoldersByParentResponse"
            },
            "s12.directory.v1.GetFoldersResponse": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.Folder"
                        },
                        "description": "The list of folders belonging to the organisation specified in the request."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "Optional. base64 encoded. If this field is present, the value should be\nused in subsequent calls to GetFolders to get the next page of results.\nOtherwise, no further calls should be made."
                    },
                    "folders_with_ancestors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.FolderWithAncestors"
                        },
                        "title": "When with_ancestors is true, folders with ancestors will be returned\ninstead of an array of folders"
                    },
                    "folders_enabled": {
                        "type": "boolean",
                        "description": "Whether or not the org settings setting is enabled."
                    }
                },
                "description": "Result returned from `GetFoldersResponse`",
                "title": "GetFoldersResponse"
            },
            "s12.directory.v1.GetInheritedUsersByFolderResponse": {
                "type": "object",
                "properties": {
                    "user_folders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.FolderList"
                        },
                        "description": "Map of UserIDs for users with an inherited association type of \"MEMBER\" for\nthe specified folder. The list of folders per user is ordered from highest to\nhighest to lowest ancestor."
                    }
                },
                "description": "Result returned from `GetInheritedUsersByFolderResponse`",
                "title": "GetInheritedUsersByFolderResponse"
            },
            "s12.directory.v1.GetOrgLabelsResponse": {
                "type": "object",
                "properties": {
                    "custom_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Custom labels is a map of 'meta_label' to the display label to return\ninstead"
                    }
                },
                "description": "Result returned from `GetOrgLabelsResponse`",
                "title": "GetOrgLabelsResponse"
            },
            "s12.directory.v1.GetUsersByFolderResponse": {
                "type": "object",
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of UserIDs for users that have been granted a \"MEMBER\" association with the given folder"
                    }
                },
                "description": "Result returned from `GetUsersByFolderResponse`",
                "title": "GetUsersByFolderResponse"
            },
            "s12.directory.v1.MoveFoldersRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required. An array of folder IDs to move under the new parent."
                    },
                    "parent_id": {
                        "type": "string",
                        "title": "Optional. New parent folder ID. If unspecified, the folder will be moved as\na root folder"
                    },
                    "domain": {
                        "type": "string",
                        "title": "domain represents the type/domain/hierarchy for the folder. This is used\nfor deleting folders within a specified domain, default to site"
                    }
                },
                "description": "The parameters for `MoveFoldersRequest`",
                "title": "MoveFoldersRequest",
                "required": [
                    "ids"
                ]
            },
            "s12.directory.v1.MoveFoldersResponse": {
                "type": "object",
                "properties": {
                    "new_parent_id": {
                        "type": "string",
                        "description": "New parent folder ID. Empty means the folder has been moved\nas root."
                    }
                },
                "description": "Result returned from `MoveFoldersResponse`",
                "title": "MoveFoldersResponse"
            },
            "s12.directory.v1.RemoveFoldersAssociationResponse": {
                "type": "object",
                "properties": {
                    "folder_status": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.RemoveFoldersAssociationResponse.Status"
                        },
                        "title": "Map of folders ids with their resulting status after removing the user\naccess to that folder. This map is populated with the list of folders\npassed in through the `RemoveFoldersAssociation`\nFor example: <Key,Value> -> <5441fffcde344415bb7ccaceda27e196,\nStatus>"
                    }
                },
                "description": "Result returned from `RemoveFoldersAssociationResponse`",
                "title": "RemoveFoldersAssociationResponse"
            },
            "s12.directory.v1.RemoveFoldersAssociationResponse.Status": {
                "type": "string",
                "enum": [
                    "UNKNOWN",
                    "REMOVED",
                    "NOT_FOUND"
                ],
                "default": "UNKNOWN",
                "description": "- UNKNOWN: Status unknown\n - REMOVED: Folder was successfully removed from the user\n - NOT_FOUND: Folder user association was not found",
                "title": "Resulting status values after removing a folder from a user"
            },
            "s12.directory.v1.RemoveUsersAssociationResponse": {
                "type": "object",
                "properties": {
                    "user_status": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.RemoveUsersAssociationResponse.Status"
                        },
                        "title": "Map of UserIDs for users with an association type of \"MEMBER\" with their\nresulting status after removing access to the folder. This map corresponds to the\nlist of UserIDs passed through `user_ids` in `RemoveUsersAssociationRequest`\nFor example: <Key,Value> -> <5441fffcde344415bb7ccaceda27e196, Status>"
                    },
                    "manager_status": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.directory.v1.RemoveUsersAssociationResponse.Status"
                        },
                        "title": "Map of UserIDs for users with an association type of \"MANAGER\" with their\nresulting status after removing access to the folder. This map corresponds to the\nlist of UserIDs passed through `manager_user_ids` in `RemoveUsersAssociationRequest`\nFor example: <Key,Value> -> <5441fffcde344415bb7ccaceda27e196, Status>"
                    }
                },
                "description": "Result returned from `RemoveUsersAssociationResponse`",
                "title": "RemoveUsersAssociationResponse"
            },
            "s12.directory.v1.RemoveUsersAssociationResponse.Status": {
                "type": "string",
                "enum": [
                    "UNKNOWN",
                    "REMOVED",
                    "NOT_FOUND"
                ],
                "default": "UNKNOWN",
                "description": "- UNKNOWN: Status unknown for user\n - REMOVED: User was successfully removed from the folder\n - NOT_FOUND: User folder association was not found",
                "title": "Resulting status values after removing a user from a folder"
            },
            "s12.directory.v1.SearchFoldersRequest": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Optional. The search value to query folders with when provided. When not\nprovided, either all of the organisations folders or users folders will be\nreturned in a paginated way"
                    },
                    "order_by": {
                        "$ref": "#/components/schemas/s12.directory.v1.FoldersOrderBy"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.FoldersFilter"
                        },
                        "description": "Optional. Filters to apply when getting folders. Used for only returning\nfolders that match the filter setting. i.e. only returning meta_label\n'location'. Maximum of 1000 filters allowed."
                    },
                    "only_assigned_folders": {
                        "type": "boolean",
                        "title": "When true, SearchFolders will only return folders that are assigned to\nthe user making the request. Defaults to false"
                    },
                    "only_leaf_nodes": {
                        "type": "boolean",
                        "description": "When true, SearchFolders will only search leaf node folders. leaf nodes are\nfolders that do not have children  Defaults to false."
                    },
                    "include_members_count": {
                        "type": "boolean",
                        "description": "Whether to return the directly associated members\ncount with the folders. Defaults to false."
                    },
                    "include_folders_count": {
                        "type": "boolean",
                        "title": "Whether to return the total number of folders discovered\nin the query. Defaults to false"
                    },
                    "include_deleted_folders": {
                        "type": "boolean",
                        "title": "Whether to return deleted folders. Defaults to false"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of results to be returned. maximum 1500, default 500"
                    },
                    "page_token": {
                        "type": "string",
                        "title": "The offset used for pagination. The starting number for the next query"
                    },
                    "ignore_folders_disabled": {
                        "type": "boolean",
                        "title": "Optional. When true, folders will still be returned when disabled for the\norganisation"
                    },
                    "domain": {
                        "type": "string",
                        "title": "domain represents the type/domain/hierarchy for the folder. This is used\nfor getting folders of a certain domain, i.e. getting all `template`\nfolders or `site` folders"
                    }
                },
                "description": "The parameters for `SearchFoldersRequest`",
                "title": "SearchFoldersRequest"
            },
            "s12.directory.v1.SearchFoldersResponse": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.directory.v1.FolderWithAncestors"
                        },
                        "title": "An array of folders with their ancestors that match the search results"
                    },
                    "folder_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of folders found for the search query"
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "Optional. base64 encoded. If this field is present, the value should be\nused in subsequent calls to SearchFolders to get the next page of results.\nOtherwise, no further calls should be made."
                    },
                    "folders_enabled": {
                        "type": "boolean",
                        "description": "Whether or not the org settings setting is enabled."
                    }
                },
                "description": "Result returned from `SearchFoldersResponse`",
                "title": "SearchFoldersResponse"
            },
            "s12.directory.v1.UpdateFolderPropertiesRequest.FolderName": {
                "type": "object",
                "properties": {
                    "val": {
                        "type": "string"
                    }
                }
            },
            "s12.directory.v1.UpdateFolderPropertiesResponse": {
                "type": "object",
                "properties": {
                    "folder": {
                        "$ref": "#/components/schemas/s12.directory.v1.Folder"
                    }
                },
                "description": "Result returned from `UpdateFolderPropertiesResponse`",
                "title": "UpdateFolderPropertiesResponse"
            },
            "s12.documents.v1.ApprovalStatus": {
                "type": "string",
                "enum": [
                    "APPROVAL_STATUS_UNSPECIFIED",
                    "APPROVAL_STATUS_PENDING",
                    "APPROVAL_STATUS_APPROVED",
                    "APPROVAL_STATUS_REJECTED"
                ],
                "default": "APPROVAL_STATUS_UNSPECIFIED"
            },
            "s12.documents.v1.ArchiveItemResponse": {
                "type": "object",
                "title": "Response for the ArchiveItem request"
            },
            "s12.documents.v1.CreateFileRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of folder names that defines the path where the file will be stored.\nThe `path` is relative to the `parent_id` if it is provided. If not, it starts from the root folder.\nThe API will automatically create any folders in the path that don’t exist.\nEach folder name must be 1-255 characters and exclude invalid characters."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the file.\nMust be between 1-255 characters and exclude invalid characters."
                    },
                    "file_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    },
                    "file_size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes. Must not exceed 50MB.\nThis field is required if `file_type` is provided."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "The ID of the folder where the file should be stored.\nAny folders defined in the `path` will be created inside the parent folder.\nIf you don’t provide a parent_id, the file will be stored in the root folder.\nTo get the `parent_id`, open the folder in the SafetyCulture web app and copy the last part of the URL.\nFor example, in this link `https://app.safetyculture.com/documents/9dd76834-65ef-41d3-815c-964df32450e4`,\nthe parent ID is `9dd76834-65ef-41d3-815c-964df32450e4`."
                    }
                },
                "title": "Request to create a file in the specified folder"
            },
            "s12.documents.v1.CreateFileResponse": {
                "type": "object",
                "properties": {
                    "file_id": {
                        "type": "string",
                        "description": "The ID of the file that was created."
                    },
                    "upload_url": {
                        "type": "string",
                        "description": "The URL where you must upload the file’s binary content.\nIt is valid for 20 minutes."
                    },
                    "path": {
                        "type": "string",
                        "description": "If provided, the full folder path where the file was stored."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the created file."
                    }
                },
                "title": "Response for the CreateFile request"
            },
            "s12.documents.v1.DocumentsPublicService.ArchiveItemBody": {
                "type": "object",
                "description": "Request to archive an item (file or folder)."
            },
            "s12.documents.v1.DocumentsPublicService.MoveItemBody": {
                "type": "object",
                "properties": {
                    "target_folder_id": {
                        "type": "string",
                        "description": "The ID of the folder where the item (file or folder) should be moved.\nIf you don’t provide a target_folder_id, the item will be moved to the root folder.\nTo get the `target_folder_id`, open the target folder in the SafetyCulture web app and copy the last part of the URL.\nFor example, in this link `https://app.safetyculture.com/documents/9dd76834-65ef-41d3-815c-964df32450e4`,\nthe target folder ID is `9dd76834-65ef-41d3-815c-964df32450e4`."
                    }
                },
                "description": "Request to move an item (file or folder) to a different folder."
            },
            "s12.documents.v1.DocumentsPublicService.UpdateFileBody": {
                "type": "object",
                "properties": {
                    "file_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    },
                    "file_size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes. Must not exceed 50MB. This field is required if `file_type` is provided.."
                    },
                    "name": {
                        "type": "string",
                        "description": "The new name of the file. Maximum of 255 characters and must exclude invalid characters."
                    },
                    "description": {
                        "$ref": "#/components/schemas/s12.documents.v1.UpdateFileRequest.Description"
                    },
                    "owners": {
                        "$ref": "#/components/schemas/s12.documents.v1.UpdateFileRequest.Owners"
                    }
                },
                "title": "Request to update the file with the specified ID"
            },
            "s12.documents.v1.File": {
                "type": "object",
                "properties": {
                    "file_id": {
                        "type": "string",
                        "title": "The ID of the file"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the file"
                    },
                    "description": {
                        "type": "string",
                        "title": "The description of the file"
                    },
                    "file_extension": {
                        "type": "string",
                        "title": "The type extension of the file"
                    },
                    "file_size": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The file size in bytes"
                    },
                    "version_number": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The current version of the file"
                    },
                    "download_url": {
                        "type": "string",
                        "description": "The URL to download the file if specified in the request."
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.Label"
                        },
                        "title": "The labels associated with the file"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the file was created"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the file was last modified"
                    },
                    "archived_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "If archived, the time the file was archived"
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "If the file is archived or not"
                    },
                    "bookmarked": {
                        "type": "boolean",
                        "title": "If the file is bookmarked by the requested user"
                    },
                    "ancestors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.ParentFolder"
                        },
                        "title": "Ordered from Highest ancestor to the current node\neg. [Grandparent, Parent, Current]"
                    }
                },
                "title": "The file structure of the file system"
            },
            "s12.documents.v1.Folder": {
                "type": "object",
                "properties": {
                    "folder_id": {
                        "type": "string",
                        "title": "The ID of the folder"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the folder"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the folder was created"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the folder was last modified"
                    },
                    "archived_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "If archived, the time the folder was archived"
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "If the folder is archived or not"
                    },
                    "bookmarked": {
                        "type": "boolean",
                        "title": "If the folder is bookmarked by the requested user"
                    },
                    "ancestors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.ParentFolder"
                        },
                        "title": "Ordered from Highest ancestor to the current node\neg. [Grandparent, Parent, Current]"
                    },
                    "child_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of children in the folder"
                    }
                },
                "title": "The folder structure of the file system"
            },
            "s12.documents.v1.Label": {
                "type": "object",
                "properties": {
                    "label_id": {
                        "type": "string",
                        "title": "The ID of the label"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the label"
                    }
                },
                "title": "The labels associated with the file"
            },
            "s12.documents.v1.MoveItemResponse": {
                "type": "object",
                "title": "Response for the MoveItem request"
            },
            "s12.documents.v1.ParentFolder": {
                "type": "object",
                "properties": {
                    "folder_id": {
                        "type": "string",
                        "title": "The ID of the parent folder"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the parent folder"
                    }
                },
                "title": "Object representing the parent folder of a file or folder"
            },
            "s12.documents.v1.SearchItemsRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of items (files and folders combined) to return.\nMax value is 25. Defaults to 25 if not provided."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "The token to retrieve the next page of results.\nUse the value returned in the `next_page_token`` from the previous response."
                    },
                    "include_media_url": {
                        "type": "boolean",
                        "description": "If `true`, includes a temporary media URL for each file so it can be downloaded."
                    },
                    "archived": {
                        "type": "boolean",
                        "description": "If `true`, only archived files will be returned."
                    },
                    "search_term": {
                        "type": "string",
                        "description": "Search term to match against file or folder names.\nThis is case-insensitive, must be 1-130 characters, and exclude invalid characters."
                    },
                    "item_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of item IDs to filter results. Only items matching any of the IDs will be returned."
                    }
                },
                "description": "Request to search the files and folders."
            },
            "s12.documents.v1.SearchItemsResponse": {
                "type": "object",
                "properties": {
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.Folder"
                        },
                        "description": "List of folders that match the search criteria."
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.documents.v1.File"
                        },
                        "description": "List of files that match the search criteria."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of files and folders that match the search criteria."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The token used to retrieve the next page of results. Empty if there are no more items."
                    }
                },
                "title": "Response for the SearchItems request"
            },
            "s12.documents.v1.UpdateFileRequest.Description": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "description": "The new description of the file. Maximum of 1000 characters and must exclude invalid characters."
            },
            "s12.documents.v1.UpdateFileRequest.Owners": {
                "type": "object",
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the users you want to add as owners.\nTo get the `user_id`, open the user in the SafetyCulture web app and copy the last part of the URL before /profile\nFor example, in this link `https://app.safetyculture.com/organisation/role_d7b113c0c6774a59b8cfdea1ab1da89a/users/user_7a7cddac38ac4dd197304ba0d05b981a/profile`,\nthe user ID is `user_7a7cddac38ac4dd197304ba0d05b981a`."
                    },
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the groups you want to add as owners.\nTo get the `group_id`, open the group in the SafetyCulture web app and copy the last part of the URL before /users.\nFor example, in this link `https://app.safetyculture.com/organisation/role_d7b113c0c6774a59b8cfdea1ab1da89a/groups/role_1ebbbca147644b5aa4ea646429f941e7/users`,\nthe group ID is `role_1ebbbca147644b5aa4ea646429f941e7`."
                    }
                },
                "description": "The new owners of the file. Maximum of 5 users and groups."
            },
            "s12.documents.v1.UpdateFileResponse": {
                "type": "object",
                "properties": {
                    "upload_url": {
                        "type": "string",
                        "description": "The URL where you must upload the file’s binary content. It is valid for 20 minutes."
                    },
                    "version_number": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The version number of the file after the update."
                    }
                },
                "title": "Response for the UpdateFile request"
            },
            "s12.incidents.v1.AccessLevel": {
                "type": "string",
                "enum": [
                    "AccessLevelNone",
                    "AccessLevelView",
                    "AccessLevelEdit",
                    "AccessLevelOwner"
                ],
                "default": "AccessLevelUnknown",
                "description": "- AccessLevelNone: Access level is 'none'\n - AccessLevelView: Access level is 'view'\n - AccessLevelEdit: Access level is 'edit'\n - AccessLevelOwner: Access level is 'owner'",
                "title": "The possible access levels"
            },
            "s12.incidents.v1.Case": {
                "type": "object",
                "properties": {
                    "case_id": {
                        "type": "string",
                        "description": "case_id is the unique identifier for the case."
                    },
                    "establishment_id": {
                        "type": "string",
                        "description": "establishment_id is the ID of the establishment this case belongs to."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "created_at is the timestamp when the case was created."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "modified_at is the timestamp when the case was last modified."
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "modified_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "year_of_filing": {
                        "type": "integer",
                        "format": "int32",
                        "description": "year_of_filing is the year this case is filed for."
                    },
                    "case_number": {
                        "type": "string",
                        "description": "case_number is the case number."
                    },
                    "job_title": {
                        "type": "string",
                        "description": "job_title is the job title of the affected employee."
                    },
                    "date_of_incident": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_incident is the date the incident occurred."
                    },
                    "incident_location": {
                        "type": "string",
                        "description": "incident_location is where the incident occurred."
                    },
                    "incident_description": {
                        "type": "string",
                        "description": "incident_description is description of the incident."
                    },
                    "incident_outcome": {
                        "type": "integer",
                        "format": "int32",
                        "description": "incident_outcome is the outcome of the incident (1=Death, 2=Days away, 3=Job transfer, 4=Other)."
                    },
                    "dafw_num_away": {
                        "type": "integer",
                        "format": "int32",
                        "description": "dafw_num_away is days away from work."
                    },
                    "djtr_num_tr": {
                        "type": "integer",
                        "format": "int32",
                        "description": "djtr_num_tr is days job transfer or restriction."
                    },
                    "type_of_incident": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type_of_incident is the type of incident (1=Injury, 2=Skin disorder, 3=Respiratory, 4=Poisoning, 5=Hearing loss, 6=Other)."
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_birth is the employee's date of birth."
                    },
                    "date_of_hire": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_hire is the employee's date of hire."
                    },
                    "sex": {
                        "type": "string",
                        "description": "sex is the employee's sex (M or F)."
                    },
                    "treatment_facility_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "treatment_facility_type is whether emergency room was used (1=yes, 0=no)."
                    },
                    "treatment_in_patient": {
                        "type": "integer",
                        "format": "int32",
                        "description": "treatment_in_patient is whether hospitalization was required (1=yes, 0=no)."
                    },
                    "time_started_work": {
                        "type": "string",
                        "description": "time_started_work is time employee began work (hh:mm format)."
                    },
                    "time_of_incident": {
                        "type": "string",
                        "description": "time_of_incident is time of incident (hh:mm format)."
                    },
                    "time_unknown": {
                        "type": "boolean",
                        "description": "time_unknown is whether time of incident is unknown."
                    },
                    "nar_before_incident": {
                        "type": "string",
                        "description": "nar_before_incident is what employee was doing before incident."
                    },
                    "nar_what_happened": {
                        "type": "string",
                        "description": "nar_what_happened is how injury/illness occurred."
                    },
                    "nar_injury_illness": {
                        "type": "string",
                        "description": "nar_injury_illness is what the injury/illness was."
                    },
                    "nar_object_substance": {
                        "type": "string",
                        "description": "nar_object_substance is object/substance that harmed employee."
                    },
                    "date_of_death": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_death is the date of death if applicable."
                    },
                    "employee_name": {
                        "type": "string",
                        "description": "employee_name is the name of the employee."
                    },
                    "employee_street_address": {
                        "type": "string",
                        "description": "employee_street_address is the street address of the employee."
                    },
                    "employee_city": {
                        "type": "string",
                        "description": "employee_city is the city where the employee resides."
                    },
                    "employee_state": {
                        "type": "string",
                        "description": "employee_state is the two-letter state code for the employee."
                    },
                    "employee_zip": {
                        "type": "string",
                        "description": "employee_zip is the ZIP code for the employee."
                    },
                    "physician_name": {
                        "type": "string",
                        "description": "physician_name is the name of the physician who treated the employee."
                    },
                    "facility_name": {
                        "type": "string",
                        "description": "facility_name is the name of the treatment facility."
                    },
                    "facility_street_address": {
                        "type": "string",
                        "description": "facility_street_address is the street address of the treatment facility."
                    },
                    "facility_city": {
                        "type": "string",
                        "description": "facility_city is the city where the treatment facility is located."
                    },
                    "facility_state": {
                        "type": "string",
                        "description": "facility_state is the two-letter state code for the treatment facility."
                    },
                    "facility_zip": {
                        "type": "string",
                        "description": "facility_zip is the ZIP code for the treatment facility."
                    }
                },
                "description": "Case represents an OSHA case record."
            },
            "s12.incidents.v1.CreateCaseRequest": {
                "type": "object",
                "properties": {
                    "establishment_id": {
                        "type": "string",
                        "description": "establishment_id is the ID of the establishment this case belongs to (required)."
                    },
                    "year_of_filing": {
                        "type": "integer",
                        "format": "int32",
                        "description": "year_of_filing is the year this case is filed for (required)."
                    },
                    "case_number": {
                        "type": "string",
                        "description": "case_number is the case number."
                    },
                    "job_title": {
                        "type": "string",
                        "description": "job_title is the job title of the affected employee."
                    },
                    "date_of_incident": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_incident is the date the incident occurred."
                    },
                    "incident_location": {
                        "type": "string",
                        "description": "incident_location is where the incident occurred."
                    },
                    "incident_description": {
                        "type": "string",
                        "description": "incident_description is description of the incident."
                    },
                    "incident_outcome": {
                        "type": "integer",
                        "format": "int32",
                        "description": "incident_outcome is the outcome of the incident (1=Death, 2=Days away, 3=Job transfer, 4=Other)."
                    },
                    "dafw_num_away": {
                        "type": "integer",
                        "format": "int32",
                        "description": "dafw_num_away is days away from work."
                    },
                    "djtr_num_tr": {
                        "type": "integer",
                        "format": "int32",
                        "description": "djtr_num_tr is days job transfer or restriction."
                    },
                    "type_of_incident": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type_of_incident is the type of incident (1=Injury, 2=Skin disorder, 3=Respiratory, 4=Poisoning, 5=Hearing loss, 6=Other)."
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_birth is the employee's date of birth."
                    },
                    "date_of_hire": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_hire is the employee's date of hire."
                    },
                    "sex": {
                        "type": "string",
                        "description": "sex is the employee's sex (M or F)."
                    },
                    "treatment_facility_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "treatment_facility_type is whether emergency room was used (1=yes, 0=no)."
                    },
                    "treatment_in_patient": {
                        "type": "integer",
                        "format": "int32",
                        "description": "treatment_in_patient is whether hospitalization was required (1=yes, 0=no)."
                    },
                    "time_started_work": {
                        "type": "string",
                        "description": "time_started_work is time employee began work (hh:mm format)."
                    },
                    "time_of_incident": {
                        "type": "string",
                        "description": "time_of_incident is time of incident (hh:mm format)."
                    },
                    "time_unknown": {
                        "type": "boolean",
                        "description": "time_unknown is whether time of incident is unknown."
                    },
                    "nar_before_incident": {
                        "type": "string",
                        "description": "nar_before_incident is what employee was doing before incident."
                    },
                    "nar_what_happened": {
                        "type": "string",
                        "description": "nar_what_happened is how injury/illness occurred."
                    },
                    "nar_injury_illness": {
                        "type": "string",
                        "description": "nar_injury_illness is what the injury/illness was."
                    },
                    "nar_object_substance": {
                        "type": "string",
                        "description": "nar_object_substance is object/substance that harmed employee."
                    },
                    "date_of_death": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date_of_death is the date of death if applicable."
                    },
                    "employee_name": {
                        "type": "string",
                        "description": "employee_name is the name of the employee."
                    },
                    "employee_street_address": {
                        "type": "string",
                        "description": "employee_street_address is the street address of the employee."
                    },
                    "employee_city": {
                        "type": "string",
                        "description": "employee_city is the city where the employee resides."
                    },
                    "employee_state": {
                        "type": "string",
                        "description": "employee_state is the two-letter state code for the employee."
                    },
                    "employee_zip": {
                        "type": "string",
                        "description": "employee_zip is the ZIP code for the employee."
                    },
                    "physician_name": {
                        "type": "string",
                        "description": "physician_name is the name of the physician who treated the employee."
                    },
                    "facility_name": {
                        "type": "string",
                        "description": "facility_name is the name of the treatment facility."
                    },
                    "facility_street_address": {
                        "type": "string",
                        "description": "facility_street_address is the street address of the treatment facility."
                    },
                    "facility_city": {
                        "type": "string",
                        "description": "facility_city is the city where the treatment facility is located."
                    },
                    "facility_state": {
                        "type": "string",
                        "description": "facility_state is the two-letter state code for the treatment facility."
                    },
                    "facility_zip": {
                        "type": "string",
                        "description": "facility_zip is the ZIP code for the treatment facility."
                    }
                },
                "description": "CreateCaseRequest is the request message for creating an OSHA case."
            },
            "s12.incidents.v1.CreateCaseResponse": {
                "type": "object",
                "properties": {
                    "case": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Case"
                    }
                },
                "description": "CreateCaseResponse is the response message for creating an OSHA case."
            },
            "s12.incidents.v1.CreateEstablishmentRequest": {
                "type": "object",
                "properties": {
                    "establishment_name": {
                        "type": "string",
                        "description": "establishment_name is the name of the establishment (required)."
                    },
                    "ein": {
                        "type": "string",
                        "description": "ein is the Employer Identification Number."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "company_name is the name of the company."
                    },
                    "street_address": {
                        "type": "string",
                        "description": "street_address is the street address of the establishment."
                    },
                    "city": {
                        "type": "string",
                        "description": "city is the city where the establishment is located."
                    },
                    "state": {
                        "type": "string",
                        "description": "state is the two-letter state code."
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip is the ZIP code."
                    },
                    "naics_code": {
                        "type": "string",
                        "description": "naics_code is the North American Industry Classification System code."
                    },
                    "industry_description": {
                        "type": "string",
                        "description": "industry_description is the description of the industry."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "size is the size classification: 1 (< 20 employees), 21 (20-99 employees), 22 (100-249 employees), 3 (250+ employees)."
                    },
                    "establishment_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "establishment_type is the type: 1 (Private), 2 (State Government), 3 (Local Government)."
                    }
                },
                "description": "CreateEstablishmentRequest is the request message for creating an OSHA establishment."
            },
            "s12.incidents.v1.CreateEstablishmentResponse": {
                "type": "object",
                "properties": {
                    "establishment": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Establishment"
                    }
                },
                "description": "CreateEstablishmentResponse is the response message for creating an OSHA establishment."
            },
            "s12.incidents.v1.CreateInvestigationResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Investigation"
                    }
                },
                "title": "Response to CreateInvestigation"
            },
            "s12.incidents.v1.DeleteCaseResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "success indicates whether the deletion was successful."
                    }
                },
                "description": "DeleteCaseResponse is the response message for deleting an OSHA case."
            },
            "s12.incidents.v1.DeleteEstablishmentResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "success indicates whether the deletion was successful."
                    }
                },
                "description": "DeleteEstablishmentResponse is the response message for deleting an OSHA establishment."
            },
            "s12.incidents.v1.DeleteInvestigationResponse": {
                "type": "object",
                "title": "Response to DeleteInvestigation"
            },
            "s12.incidents.v1.Establishment": {
                "type": "object",
                "properties": {
                    "establishment_id": {
                        "type": "string",
                        "description": "establishment_id is the unique identifier for the establishment."
                    },
                    "establishment_name": {
                        "type": "string",
                        "description": "establishment_name is the name of the establishment."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "created_at is the timestamp when the establishment was created."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "modified_at is the timestamp when the establishment was last modified."
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "modified_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "ein": {
                        "type": "string",
                        "description": "ein is the Employer Identification Number."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "company_name is the name of the company."
                    },
                    "street_address": {
                        "type": "string",
                        "description": "street_address is the street address of the establishment."
                    },
                    "city": {
                        "type": "string",
                        "description": "city is the city where the establishment is located."
                    },
                    "state": {
                        "type": "string",
                        "description": "state is the two-letter state code."
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip is the ZIP code."
                    },
                    "naics_code": {
                        "type": "string",
                        "description": "naics_code is the North American Industry Classification System code."
                    },
                    "industry_description": {
                        "type": "string",
                        "description": "industry_description is the description of the industry."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "size is the size classification: 1 (< 20 employees), 21 (20-99 employees), 22 (100-249 employees), 3 (250+ employees)."
                    },
                    "establishment_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "establishment_type is the type: 1 (Private), 2 (State Government), 3 (Local Government)."
                    }
                },
                "description": "Establishment represents an OSHA establishment record."
            },
            "s12.incidents.v1.EstablishmentEmployees": {
                "type": "object",
                "properties": {
                    "year_of_filing": {
                        "type": "integer",
                        "format": "int32",
                        "description": "year_of_filing is the year for which the average employees are reported."
                    },
                    "average_employees": {
                        "type": "integer",
                        "format": "int32",
                        "description": "average_employees is the average number of employees in that year."
                    }
                },
                "description": "EstablishmentEmployees represents the average number of employees for an establishment for a specific year."
            },
            "s12.incidents.v1.EstablishmentHoursWorked": {
                "type": "object",
                "properties": {
                    "year_of_filing": {
                        "type": "integer",
                        "format": "int32",
                        "description": "year_of_filing is the year for which the hours are reported."
                    },
                    "month_of_filing": {
                        "type": "integer",
                        "format": "int32",
                        "description": "month_of_filing is the month for which the hours are reported."
                    },
                    "hours_worked": {
                        "type": "integer",
                        "format": "int32",
                        "description": "hours_worked is the number of hours worked in that month."
                    }
                },
                "description": "EstablishmentHoursWorked represents the hours worked by an establishment for a specific month and year."
            },
            "s12.incidents.v1.FieldContent": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "title": "unique identifier for the field"
                    },
                    "title": {
                        "type": "string",
                        "title": "title of the field"
                    },
                    "text": {
                        "$ref": "#/components/schemas/s12.incidents.v1.TextFieldContent"
                    }
                },
                "title": "Per-investigation field content"
            },
            "s12.incidents.v1.FieldListItem": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "title": "unique identifier for the field"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "created timestamp for the field"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "last modified timestamp for the field"
                    },
                    "title": {
                        "type": "string",
                        "title": "title of the field"
                    },
                    "category_id": {
                        "type": "string",
                        "title": "the category this field is associated with"
                    },
                    "text": {
                        "$ref": "#/components/schemas/s12.incidents.v1.TextFieldSpec"
                    }
                },
                "title": "List response for field"
            },
            "s12.incidents.v1.GetCaseResponse": {
                "type": "object",
                "properties": {
                    "case": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Case"
                    }
                },
                "description": "GetCaseResponse is the response message for retrieving an OSHA case."
            },
            "s12.incidents.v1.GetEstablishmentEmployeesResponse": {
                "type": "object",
                "properties": {
                    "average_employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.EstablishmentEmployees"
                        },
                        "description": "average_employees is the list of average employees for each year."
                    }
                },
                "description": "GetEstablishmentEmployeesResponse is the response message for retrieving establishment employees."
            },
            "s12.incidents.v1.GetEstablishmentHoursResponse": {
                "type": "object",
                "properties": {
                    "hours_worked": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.EstablishmentHoursWorked"
                        },
                        "description": "hours_worked is the list of hours worked for each month in the year."
                    }
                },
                "description": "GetEstablishmentHoursResponse is the response message for retrieving establishment hours."
            },
            "s12.incidents.v1.GetEstablishmentResponse": {
                "type": "object",
                "properties": {
                    "establishment": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Establishment"
                    }
                },
                "description": "GetEstablishmentResponse is the response message for retrieving an OSHA establishment."
            },
            "s12.incidents.v1.GetInvestigationAccessResponse": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAccessItem"
                        },
                        "title": "The list of investigation access entries"
                    }
                },
                "title": "Response to GetInvestigationAccess"
            },
            "s12.incidents.v1.GetInvestigationActionCountResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the count of actions linked to the investigation"
                    }
                },
                "title": "Response to GetInvestigationActionCount"
            },
            "s12.incidents.v1.GetInvestigationInspectionCountResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the count of inspections linked to the investigation matching the request"
                    }
                },
                "title": "Response to GetInvestigationInspectionCount"
            },
            "s12.incidents.v1.GetInvestigationIssueCountResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the count of issues linked to the investigation matching the request"
                    }
                },
                "title": "Response to GetInvestigationIssueCount"
            },
            "s12.incidents.v1.GetInvestigationMediaCountResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the count of media linked to the investigation"
                    }
                },
                "title": "Response to GetInvestigationMediaCount"
            },
            "s12.incidents.v1.GetInvestigationPDFReportResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Download URL for the PDF report"
                    }
                },
                "title": "Response to GetInvestigationAccess"
            },
            "s12.incidents.v1.GetInvestigationResponse": {
                "type": "object",
                "properties": {
                    "investigation": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Investigation"
                    },
                    "actions": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationUserActions"
                    },
                    "flags": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationUserFlags"
                    }
                },
                "title": "Response to GetInvestigations"
            },
            "s12.incidents.v1.GetInvestigationsCountResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "the count of investigations matching the request"
                    }
                },
                "title": "Response to GetInvestigationsCount"
            },
            "s12.incidents.v1.Identifier": {
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "prefix for the unique identifier e.g. IM"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "title": "sequence number for the unique identifier e.g. 100"
                    },
                    "for_display": {
                        "type": "string",
                        "title": "identifier data formatted for display e.g. IM-100"
                    }
                },
                "title": "Partial identifier information for embedding in other messages"
            },
            "s12.incidents.v1.Investigation": {
                "type": "object",
                "properties": {
                    "investigation_id": {
                        "type": "string",
                        "title": "unique identifier for the investigation"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "created timestamp for the investigation"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "last modified timestamp for the investigation"
                    },
                    "title": {
                        "type": "string",
                        "title": "title of the investigation"
                    },
                    "description": {
                        "type": "string",
                        "title": "description of the investigation"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusMeta"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Identifier"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.FieldContent"
                        },
                        "title": "fields and content for the investigation"
                    },
                    "link_counts": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkCounts"
                    }
                },
                "title": "Complete investigation response"
            },
            "s12.incidents.v1.InvestigationAccessItem": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "level": {
                        "$ref": "#/components/schemas/s12.incidents.v1.AccessLevel"
                    }
                },
                "title": "Investigation access entry"
            },
            "s12.incidents.v1.InvestigationAccessSetDetails": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "from_level": {
                        "$ref": "#/components/schemas/s12.incidents.v1.AccessLevel"
                    },
                    "to_level": {
                        "$ref": "#/components/schemas/s12.incidents.v1.AccessLevel"
                    }
                },
                "title": "details related to investigation access being granted"
            },
            "s12.incidents.v1.InvestigationAction": {
                "type": "object",
                "properties": {
                    "linked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time that the action was linked at"
                    },
                    "action": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Action"
                    },
                    "is_access_denied": {
                        "type": "boolean",
                        "title": "Flag to indicate that the requester does not have access to the linked action"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "title": "Flag to indicate that the linked action has been deleted"
                    },
                    "originates_from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkOriginatesFrom"
                    }
                },
                "title": "Wrapper message for any actions which are linked to an investigation"
            },
            "s12.incidents.v1.InvestigationActionLinkedDetails": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAction"
                    }
                },
                "title": "details related to investigation actions being linked"
            },
            "s12.incidents.v1.InvestigationActionUnlinkedDetails": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAction"
                    }
                },
                "title": "details related to investigation actions being unlinked"
            },
            "s12.incidents.v1.InvestigationCreatedDetails": {
                "type": "object",
                "title": "details pertaining to an investigation being created"
            },
            "s12.incidents.v1.InvestigationDescriptionChangedDetails": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "title": "the previous description"
                    },
                    "to": {
                        "type": "string",
                        "title": "the new description"
                    }
                },
                "title": "details related to investigation description changing"
            },
            "s12.incidents.v1.InvestigationFieldChangedDetails": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "the title of the field which has been changed"
                    },
                    "from": {
                        "type": "string",
                        "title": "the previous content of the field"
                    },
                    "to": {
                        "type": "string",
                        "title": "the new content of the field"
                    }
                },
                "title": "details related to investigation field being changed"
            },
            "s12.incidents.v1.InvestigationFieldDeletedDetails": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "the title of the field which has been deleted"
                    }
                },
                "title": "details related to investigation field being deleted"
            },
            "s12.incidents.v1.InvestigationInspection": {
                "type": "object",
                "properties": {
                    "linked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time that the inspection was linked at"
                    },
                    "inspection": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem"
                    },
                    "is_access_denied": {
                        "type": "boolean",
                        "title": "Flag to indicate that the requester does not have access to the linked inspection"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "title": "Flag to indicate that the linked inspection has been deleted"
                    },
                    "originates_from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkOriginatesFrom"
                    }
                },
                "title": "Wrapper message for any inspections which are linked to an investigation"
            },
            "s12.incidents.v1.InvestigationInspectionLinkedDetails": {
                "type": "object",
                "properties": {
                    "inspection": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspection"
                    }
                },
                "title": "details related to investigation inspections being linked"
            },
            "s12.incidents.v1.InvestigationInspectionUnlinkedDetails": {
                "type": "object",
                "properties": {
                    "inspection": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspection"
                    }
                },
                "title": "details related to investigation inspections being unlinked"
            },
            "s12.incidents.v1.InvestigationIssue": {
                "type": "object",
                "properties": {
                    "linked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time that the issue was linked at"
                    },
                    "issue": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Incident"
                    },
                    "is_access_denied": {
                        "type": "boolean",
                        "title": "Flag to indicate that the requester does not have access to the linked issue"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "title": "Flag to indicate that the linked issue has been deleted"
                    },
                    "originates_from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkOriginatesFrom"
                    }
                },
                "title": "Wrapper message for any issues which are linked to an investigation"
            },
            "s12.incidents.v1.InvestigationIssueLinkedDetails": {
                "type": "object",
                "properties": {
                    "issue": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssue"
                    }
                },
                "title": "details related to investigation issues being linked"
            },
            "s12.incidents.v1.InvestigationIssueUnlinkedDetails": {
                "type": "object",
                "properties": {
                    "issue": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssue"
                    }
                },
                "title": "details related to investigation issue being unlinked"
            },
            "s12.incidents.v1.InvestigationListItem": {
                "type": "object",
                "properties": {
                    "investigation_id": {
                        "type": "string",
                        "title": "unique identifier for the investigation"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "created timestamp for the investigation"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "last modified timestamp for the investigation"
                    },
                    "title": {
                        "type": "string",
                        "title": "title of the investigation"
                    },
                    "description": {
                        "type": "string",
                        "title": "description of the investigation"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusMeta"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Identifier"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "link_counts": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkCounts"
                    },
                    "user_actions": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationUserActions"
                    },
                    "modified_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "user_flags": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationUserFlags"
                    }
                },
                "title": "List response for investigations"
            },
            "s12.incidents.v1.InvestigationLogEvent": {
                "type": "object",
                "properties": {
                    "at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "timestamp for the log event"
                    },
                    "investigation_id": {
                        "type": "string",
                        "title": "unique identifier for the investigation event"
                    },
                    "performed_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "details": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationLogEventDetails"
                    }
                },
                "title": "Investigation log event entry"
            },
            "s12.incidents.v1.InvestigationLogEventDetails": {
                "type": "object",
                "properties": {
                    "created": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationCreatedDetails"
                    },
                    "owner_changed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationOwnerChangedDetails"
                    },
                    "title_changed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationTitleChangedDetails"
                    },
                    "description_changed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationDescriptionChangedDetails"
                    },
                    "status_changed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationStatusChangedDetails"
                    },
                    "action_linked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationActionLinkedDetails"
                    },
                    "action_unlinked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationActionUnlinkedDetails"
                    },
                    "issue_linked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssueLinkedDetails"
                    },
                    "issue_unlinked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssueUnlinkedDetails"
                    },
                    "inspection_linked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspectionLinkedDetails"
                    },
                    "inspection_unlinked": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspectionUnlinkedDetails"
                    },
                    "media_added": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMediaAddedDetails"
                    },
                    "media_removed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMediaRemovedDetails"
                    },
                    "access_set": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAccessSetDetails"
                    },
                    "field_changed": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationFieldChangedDetails"
                    },
                    "field_deleted": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationFieldDeletedDetails"
                    }
                },
                "title": "A wrapper message for the additional details that can be contained in investigation logs"
            },
            "s12.incidents.v1.InvestigationMedia": {
                "type": "object",
                "properties": {
                    "uploaded_by": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time that the media was uploaded"
                    },
                    "originates_from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LinkOriginatesFrom"
                    },
                    "file": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "is_access_denied": {
                        "type": "boolean",
                        "title": "Flag to indicate that the requester does not have access to the linked media"
                    }
                },
                "title": "Wrapper message for any media which is uploaded on the investigation"
            },
            "s12.incidents.v1.InvestigationMediaAddedDetails": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMedia"
                    }
                },
                "title": "details related to investigation media being added"
            },
            "s12.incidents.v1.InvestigationMediaRemovedDetails": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMedia"
                    }
                },
                "title": "details related to investigation media being removed"
            },
            "s12.incidents.v1.InvestigationOwnerChangedDetails": {
                "type": "object",
                "properties": {
                    "from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    },
                    "to": {
                        "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                    }
                },
                "title": "details related to investigation owner changing"
            },
            "s12.incidents.v1.InvestigationStatusChangedDetails": {
                "type": "object",
                "properties": {
                    "from": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusMeta"
                    },
                    "to": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusMeta"
                    }
                },
                "title": "details related to investigation status changing"
            },
            "s12.incidents.v1.InvestigationTitleChangedDetails": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "title": "the previous title"
                    },
                    "to": {
                        "type": "string",
                        "title": "the new title"
                    }
                },
                "title": "details related to investigation title changing"
            },
            "s12.incidents.v1.InvestigationUserActions": {
                "type": "object",
                "properties": {
                    "set_title": {
                        "type": "boolean",
                        "title": "user can set the title"
                    },
                    "set_description": {
                        "type": "boolean",
                        "title": "user can set the description"
                    },
                    "set_status": {
                        "type": "boolean",
                        "title": "user can set the status"
                    },
                    "list_access": {
                        "type": "boolean",
                        "title": "user can list users with access"
                    },
                    "update_access": {
                        "type": "boolean",
                        "title": "user can update access"
                    },
                    "change_owner": {
                        "type": "boolean",
                        "title": "user can change owner"
                    },
                    "list_actions": {
                        "type": "boolean",
                        "title": "user can list actions"
                    },
                    "count_actions": {
                        "type": "boolean",
                        "title": "user can count actions"
                    },
                    "link_action": {
                        "type": "boolean",
                        "title": "user can link action"
                    },
                    "unlink_action": {
                        "type": "boolean",
                        "title": "user can unlink action"
                    },
                    "list_issues": {
                        "type": "boolean",
                        "title": "user can list issues"
                    },
                    "count_issues": {
                        "type": "boolean",
                        "title": "user can count issues"
                    },
                    "link_issue": {
                        "type": "boolean",
                        "title": "user can link issues"
                    },
                    "unlink_issue": {
                        "type": "boolean",
                        "title": "user can unlink issues"
                    },
                    "list_media": {
                        "type": "boolean",
                        "title": "user can list media"
                    },
                    "count_media": {
                        "type": "boolean",
                        "title": "user can count media"
                    },
                    "add_media": {
                        "type": "boolean",
                        "title": "user can add media"
                    },
                    "remove_media": {
                        "type": "boolean",
                        "title": "user can remove media"
                    },
                    "list_inspections": {
                        "type": "boolean",
                        "title": "user can list inspections"
                    },
                    "count_inspections": {
                        "type": "boolean",
                        "title": "user can count inspections"
                    },
                    "link_inspection": {
                        "type": "boolean",
                        "title": "user can link inspections"
                    },
                    "unlink_inspection": {
                        "type": "boolean",
                        "title": "user can unlink inspections"
                    },
                    "generate_pdf_report": {
                        "type": "boolean",
                        "title": "user can generate a PDF report"
                    },
                    "can_delete": {
                        "type": "boolean",
                        "title": "user can delete the investigation"
                    },
                    "edit_field": {
                        "type": "boolean",
                        "title": "user can edit a field on the investigation"
                    },
                    "delete_field": {
                        "type": "boolean",
                        "title": "user can delete a field on the investigation"
                    }
                },
                "description": "Updates against core fields",
                "title": "Container for the actions which can be guarded in an investigation"
            },
            "s12.incidents.v1.InvestigationUserFlags": {
                "type": "object",
                "properties": {
                    "read_only": {
                        "type": "boolean",
                        "title": "User is accessing an investigation which is 'read only' for them"
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "User is the owner of the investigation"
                    }
                },
                "title": "Container for a set of flags associated with a user for an investigation"
            },
            "s12.incidents.v1.LinkCounts": {
                "type": "object",
                "properties": {
                    "total_actions": {
                        "type": "integer",
                        "format": "int32",
                        "title": "total count of linked actions"
                    },
                    "open_actions": {
                        "type": "integer",
                        "format": "int32",
                        "title": "count of linked actions which are open"
                    },
                    "closed_actions": {
                        "type": "integer",
                        "format": "int32",
                        "title": "count of linked actions which are closed"
                    }
                },
                "title": "Counts of different types of linked resources"
            },
            "s12.incidents.v1.LinkOriginatesFrom": {
                "type": "object",
                "properties": {
                    "linked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time that the originating link was linked_at"
                    },
                    "action": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAction"
                    },
                    "issue": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssue"
                    },
                    "inspection": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspection"
                    },
                    "media": {
                        "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMedia"
                    }
                },
                "title": "Wrapper message to cover the references available for an investigation"
            },
            "s12.incidents.v1.ListCasesResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.Case"
                        },
                        "description": "results is the list of case records."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "next_page_token is a token which can be used to fetch further results (for pagination)."
                    }
                },
                "description": "ListCasesResponse is the response message for listing OSHA cases."
            },
            "s12.incidents.v1.ListEstablishmentsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.Establishment"
                        },
                        "description": "results is the list of establishment records."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "next_page_token is a token which can be used to fetch further results (for pagination)."
                    }
                },
                "description": "ListEstablishmentsResponse is the response message for listing OSHA establishments."
            },
            "s12.incidents.v1.ListFieldsResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.FieldListItem"
                        },
                        "title": "The organisations field list"
                    }
                },
                "title": "Response to ListFields"
            },
            "s12.incidents.v1.ListInvestigationActionsResponse": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationAction"
                        },
                        "title": "the list of actions"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "A token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigationActions"
            },
            "s12.incidents.v1.ListInvestigationInspectionsResponse": {
                "type": "object",
                "properties": {
                    "inspections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationInspection"
                        },
                        "title": "the list of inspections"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "A token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigationInspections"
            },
            "s12.incidents.v1.ListInvestigationIssuesResponse": {
                "type": "object",
                "properties": {
                    "issues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationIssue"
                        },
                        "title": "the list of issues"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "A token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigationIssues"
            },
            "s12.incidents.v1.ListInvestigationLogResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationLogEvent"
                        },
                        "title": "The log events"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "a token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigationLog"
            },
            "s12.incidents.v1.ListInvestigationMediaResponse": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationMedia"
                        },
                        "title": "the list of media"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "A token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigationMedia"
            },
            "s12.incidents.v1.ListInvestigationsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.InvestigationListItem"
                        },
                        "title": "the list of results"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "a token which can be used to fetch further results"
                    }
                },
                "title": "Response to ListInvestigations"
            },
            "s12.incidents.v1.ListStatusesResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.StatusListItem"
                        },
                        "title": "The status results"
                    }
                },
                "title": "Response to ListStatuses"
            },
            "s12.incidents.v1.LocalisedString": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "title": "The string value that has been matched"
                    },
                    "lang": {
                        "type": "string",
                        "title": "The matched language which has been used to provided the value"
                    },
                    "alternatives": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LocalisedStringSet"
                    }
                },
                "title": "A string which has been localised for the end user"
            },
            "s12.incidents.v1.LocalisedStringSet": {
                "type": "object",
                "properties": {
                    "strings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "The map of BCP47 language codes to string content"
                    },
                    "order": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The ordered list of BCP47 language codes. 0th index acts as the default\nif no languages could be matched"
                    }
                },
                "title": "A set of strings which can be used for user localisation"
            },
            "s12.incidents.v1.OSHAService.UpdateCaseBody": {
                "type": "object",
                "properties": {
                    "case": {
                        "type": "object",
                        "properties": {
                            "establishment_id": {
                                "type": "string",
                                "description": "establishment_id is the ID of the establishment this case belongs to."
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "created_at is the timestamp when the case was created."
                            },
                            "modified_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "modified_at is the timestamp when the case was last modified."
                            },
                            "created_by": {
                                "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                            },
                            "modified_by": {
                                "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                            },
                            "year_of_filing": {
                                "type": "integer",
                                "format": "int32",
                                "description": "year_of_filing is the year this case is filed for."
                            },
                            "case_number": {
                                "type": "string",
                                "description": "case_number is the case number."
                            },
                            "job_title": {
                                "type": "string",
                                "description": "job_title is the job title of the affected employee."
                            },
                            "date_of_incident": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date_of_incident is the date the incident occurred."
                            },
                            "incident_location": {
                                "type": "string",
                                "description": "incident_location is where the incident occurred."
                            },
                            "incident_description": {
                                "type": "string",
                                "description": "incident_description is description of the incident."
                            },
                            "incident_outcome": {
                                "type": "integer",
                                "format": "int32",
                                "description": "incident_outcome is the outcome of the incident (1=Death, 2=Days away, 3=Job transfer, 4=Other)."
                            },
                            "dafw_num_away": {
                                "type": "integer",
                                "format": "int32",
                                "description": "dafw_num_away is days away from work."
                            },
                            "djtr_num_tr": {
                                "type": "integer",
                                "format": "int32",
                                "description": "djtr_num_tr is days job transfer or restriction."
                            },
                            "type_of_incident": {
                                "type": "integer",
                                "format": "int32",
                                "description": "type_of_incident is the type of incident (1=Injury, 2=Skin disorder, 3=Respiratory, 4=Poisoning, 5=Hearing loss, 6=Other)."
                            },
                            "date_of_birth": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date_of_birth is the employee's date of birth."
                            },
                            "date_of_hire": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date_of_hire is the employee's date of hire."
                            },
                            "sex": {
                                "type": "string",
                                "description": "sex is the employee's sex (M or F)."
                            },
                            "treatment_facility_type": {
                                "type": "integer",
                                "format": "int32",
                                "description": "treatment_facility_type is whether emergency room was used (1=yes, 0=no)."
                            },
                            "treatment_in_patient": {
                                "type": "integer",
                                "format": "int32",
                                "description": "treatment_in_patient is whether hospitalization was required (1=yes, 0=no)."
                            },
                            "time_started_work": {
                                "type": "string",
                                "description": "time_started_work is time employee began work (hh:mm format)."
                            },
                            "time_of_incident": {
                                "type": "string",
                                "description": "time_of_incident is time of incident (hh:mm format)."
                            },
                            "time_unknown": {
                                "type": "boolean",
                                "description": "time_unknown is whether time of incident is unknown."
                            },
                            "nar_before_incident": {
                                "type": "string",
                                "description": "nar_before_incident is what employee was doing before incident."
                            },
                            "nar_what_happened": {
                                "type": "string",
                                "description": "nar_what_happened is how injury/illness occurred."
                            },
                            "nar_injury_illness": {
                                "type": "string",
                                "description": "nar_injury_illness is what the injury/illness was."
                            },
                            "nar_object_substance": {
                                "type": "string",
                                "description": "nar_object_substance is object/substance that harmed employee."
                            },
                            "date_of_death": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date_of_death is the date of death if applicable."
                            },
                            "employee_name": {
                                "type": "string",
                                "description": "employee_name is the name of the employee."
                            },
                            "employee_street_address": {
                                "type": "string",
                                "description": "employee_street_address is the street address of the employee."
                            },
                            "employee_city": {
                                "type": "string",
                                "description": "employee_city is the city where the employee resides."
                            },
                            "employee_state": {
                                "type": "string",
                                "description": "employee_state is the two-letter state code for the employee."
                            },
                            "employee_zip": {
                                "type": "string",
                                "description": "employee_zip is the ZIP code for the employee."
                            },
                            "physician_name": {
                                "type": "string",
                                "description": "physician_name is the name of the physician who treated the employee."
                            },
                            "facility_name": {
                                "type": "string",
                                "description": "facility_name is the name of the treatment facility."
                            },
                            "facility_street_address": {
                                "type": "string",
                                "description": "facility_street_address is the street address of the treatment facility."
                            },
                            "facility_city": {
                                "type": "string",
                                "description": "facility_city is the city where the treatment facility is located."
                            },
                            "facility_state": {
                                "type": "string",
                                "description": "facility_state is the two-letter state code for the treatment facility."
                            },
                            "facility_zip": {
                                "type": "string",
                                "description": "facility_zip is the ZIP code for the treatment facility."
                            }
                        },
                        "description": "case contains the updated case data.",
                        "title": "case contains the updated case data."
                    },
                    "field_mask": {
                        "type": "string",
                        "description": "field_mask specifies which fields to update. If not set, all fields will be updated."
                    }
                },
                "description": "UpdateCaseRequest is the request message for updating an OSHA case.\nIf field_mask is set, only the fields specified will be updated (PATCH semantics).\nIf field_mask is not set, all fields will be updated (PUT semantics)."
            },
            "s12.incidents.v1.OSHAService.UpdateEstablishmentBody": {
                "type": "object",
                "properties": {
                    "establishment": {
                        "type": "object",
                        "properties": {
                            "establishment_name": {
                                "type": "string",
                                "description": "establishment_name is the name of the establishment."
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "created_at is the timestamp when the establishment was created."
                            },
                            "modified_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "modified_at is the timestamp when the establishment was last modified."
                            },
                            "created_by": {
                                "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                            },
                            "modified_by": {
                                "$ref": "#/components/schemas/s12.incidents.v1.UserMeta"
                            },
                            "ein": {
                                "type": "string",
                                "description": "ein is the Employer Identification Number."
                            },
                            "company_name": {
                                "type": "string",
                                "description": "company_name is the name of the company."
                            },
                            "street_address": {
                                "type": "string",
                                "description": "street_address is the street address of the establishment."
                            },
                            "city": {
                                "type": "string",
                                "description": "city is the city where the establishment is located."
                            },
                            "state": {
                                "type": "string",
                                "description": "state is the two-letter state code."
                            },
                            "zip": {
                                "type": "string",
                                "description": "zip is the ZIP code."
                            },
                            "naics_code": {
                                "type": "string",
                                "description": "naics_code is the North American Industry Classification System code."
                            },
                            "industry_description": {
                                "type": "string",
                                "description": "industry_description is the description of the industry."
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "size is the size classification: 1 (< 20 employees), 21 (20-99 employees), 22 (100-249 employees), 3 (250+ employees)."
                            },
                            "establishment_type": {
                                "type": "integer",
                                "format": "int32",
                                "description": "establishment_type is the type: 1 (Private), 2 (State Government), 3 (Local Government)."
                            }
                        },
                        "description": "establishment contains the updated establishment data.",
                        "title": "establishment contains the updated establishment data."
                    },
                    "field_mask": {
                        "type": "string",
                        "description": "field_mask specifies which fields to update. If not set, all fields will be updated."
                    }
                },
                "description": "UpdateEstablishmentRequest is the request message for updating an OSHA establishment.\nIf field_mask is set, only the fields specified will be updated (PATCH semantics).\nIf field_mask is not set, all fields will be updated (PUT semantics)."
            },
            "s12.incidents.v1.OSHAService.UpdateEstablishmentEmployeesBody": {
                "type": "object",
                "properties": {
                    "average_employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.EstablishmentEmployees"
                        },
                        "description": "average_employees is the list of average employees for each year."
                    }
                },
                "description": "UpdateEstablishmentEmployeesRequest is the request message for updating establishment employees."
            },
            "s12.incidents.v1.OSHAService.UpdateEstablishmentHoursBody": {
                "type": "object",
                "properties": {
                    "hours_worked": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.EstablishmentHoursWorked"
                        },
                        "description": "hours_worked is the list of hours worked for each month in the year."
                    }
                },
                "description": "UpdateEstablishmentHoursRequest is the request message for updating establishment hours."
            },
            "s12.incidents.v1.StatusBadgeColor": {
                "type": "string",
                "enum": [
                    "StatusBadgeColorAccent",
                    "StatusBadgeColorInfo",
                    "StatusBadgeColorNegative",
                    "StatusBadgeColorPositive",
                    "StatusBadgeColorWarning",
                    "StatusBadgeColorSurface"
                ],
                "default": "StatusBadgeColorUnknown",
                "description": "- StatusBadgeColorAccent: Color is accent\n - StatusBadgeColorInfo: Color is info\n - StatusBadgeColorNegative: Color is negative\n - StatusBadgeColorPositive: Color is positive\n - StatusBadgeColorWarning: Color is warning\n - StatusBadgeColorSurface: Color is surface",
                "title": "The possible colors of status badges"
            },
            "s12.incidents.v1.StatusListItem": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "title": "unique identifier for the status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "created timestamp for the status"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "last modified timestamp for the status"
                    },
                    "title": {
                        "type": "string",
                        "title": "Deprecated. use title_localised instead.\ntitle of the status"
                    },
                    "badge_color": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusBadgeColor"
                    },
                    "has_investigation_associated": {
                        "type": "boolean",
                        "title": "Whether this investigations has any associated"
                    },
                    "title_localised": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LocalisedString"
                    }
                },
                "title": "List response for status"
            },
            "s12.incidents.v1.StatusMeta": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "title": "unique identifier for the status"
                    },
                    "title": {
                        "type": "string",
                        "title": "Deprecated. Use title_localised instead.\ntitle of the status"
                    },
                    "badge_color": {
                        "$ref": "#/components/schemas/s12.incidents.v1.StatusBadgeColor"
                    },
                    "title_localised": {
                        "$ref": "#/components/schemas/s12.incidents.v1.LocalisedString"
                    }
                },
                "title": "Partial status for embedding in other messages"
            },
            "s12.incidents.v1.TextFieldContent": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "The text content for this field instance"
                    }
                },
                "title": "Field content for a text field"
            },
            "s12.incidents.v1.TextFieldSpec": {
                "type": "object",
                "properties": {
                    "default_text": {
                        "type": "string",
                        "title": "The default text to set as the content when instances of this field are created"
                    }
                },
                "title": "Field specification for a text field"
            },
            "s12.incidents.v1.UpdateCaseResponse": {
                "type": "object",
                "properties": {
                    "case": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Case"
                    }
                },
                "description": "UpdateCaseResponse is the response message for updating an OSHA case."
            },
            "s12.incidents.v1.UpdateEstablishmentEmployeesResponse": {
                "type": "object",
                "description": "UpdateEstablishmentEmployeesResponse is the response message for updating establishment employees."
            },
            "s12.incidents.v1.UpdateEstablishmentHoursResponse": {
                "type": "object",
                "description": "UpdateEstablishmentHoursResponse is the response message for updating establishment hours."
            },
            "s12.incidents.v1.UpdateEstablishmentResponse": {
                "type": "object",
                "properties": {
                    "establishment": {
                        "$ref": "#/components/schemas/s12.incidents.v1.Establishment"
                    }
                },
                "description": "UpdateEstablishmentResponse is the response message for updating an OSHA establishment."
            },
            "s12.incidents.v1.UpdateFieldsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.FieldListItem"
                        },
                        "title": "The updated field list"
                    }
                },
                "title": "Response to UpdateFields"
            },
            "s12.incidents.v1.UpdateInvestigationAccessResponse": {
                "type": "object",
                "title": "Response to UpdateInvestigationAccess"
            },
            "s12.incidents.v1.UpdateInvestigationResponse": {
                "type": "object",
                "title": "Response to UpdateInvestigation"
            },
            "s12.incidents.v1.UpdateInvestigationsResponse": {
                "type": "object",
                "title": "Response to UpdateInvestigations"
            },
            "s12.incidents.v1.UpdateStatusesResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.incidents.v1.StatusListItem"
                        },
                        "title": "The updated statuses"
                    }
                },
                "title": "Response to UpdateStatuses"
            },
            "s12.incidents.v1.UserMeta": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "unique identifier for the user"
                    },
                    "display_name": {
                        "type": "string",
                        "title": "name of the user"
                    },
                    "profile_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "email": {
                        "type": "string",
                        "title": "email address of the user"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.common.UserActiveStatus"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "the timezone of the user"
                    }
                },
                "title": "Partial user information for embedding in other messages"
            },
            "s12.inspections.v1.AddressAnswer": {
                "type": "object",
                "properties": {
                    "location_text": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.inspections.v1.AddressLocation"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.AddressLocation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "The name of the location"
                    },
                    "thoroughfare": {
                        "type": "string",
                        "title": "The thoroughfare of the location"
                    },
                    "sub_thoroughfare": {
                        "type": "string",
                        "title": "The sub_thoroughfare of the location"
                    },
                    "locality": {
                        "type": "string",
                        "title": "The locality of the location"
                    },
                    "sub_locality": {
                        "type": "string",
                        "title": "The sub_locality of the location"
                    },
                    "administrative_area": {
                        "type": "string",
                        "title": "The administrative_area of the location"
                    },
                    "sub_administrative_area": {
                        "type": "string",
                        "title": "The sub_administrative_area of the location"
                    },
                    "postal_code": {
                        "type": "string",
                        "title": "The postal_code of the location"
                    },
                    "country": {
                        "type": "string",
                        "title": "The country of the location"
                    },
                    "iso_country_code": {
                        "type": "string",
                        "title": "The iso_country_code of the location"
                    },
                    "geo_position": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    }
                },
                "title": "The, optional, object generated only when location is added using a location\npicker"
            },
            "s12.inspections.v1.Answer": {
                "type": "object",
                "properties": {
                    "question_id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection item"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time the item was last modified"
                    },
                    "text_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.TextAnswer"
                    },
                    "datetime_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.DateTimeAnswer"
                    },
                    "address_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.AddressAnswer"
                    },
                    "checkbox_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CheckboxAnswer"
                    },
                    "dynamicfield_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.DynamicField"
                    },
                    "list_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.ListAnswer"
                    },
                    "question_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.QuestionAnswer"
                    },
                    "media_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.MediaAnswer"
                    },
                    "drawing_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.DrawingAnswer"
                    },
                    "signature_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.SignatureAnswer"
                    },
                    "temperature_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.TemperatureAnswer"
                    },
                    "slider_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.SliderAnswer"
                    },
                    "site_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.SiteAnswer"
                    },
                    "switch_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.SwitchAnswer"
                    },
                    "asset_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.AssetAnswer"
                    },
                    "calculation_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculationAnswer"
                    },
                    "company_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CompanyAnswer"
                    },
                    "table_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.TableData"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    }
                },
                "title": "Answer represents one inspection item"
            },
            "s12.inspections.v1.AnswerService.AnswerAssetBody": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "@deprecated: manual request id no longer in use"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Date/time the answer text request was created on the client"
                            },
                            "location": {
                                "$ref": "#/components/schemas/s12.common.GeoPosition"
                            }
                        },
                        "title": "The metadata for answering a question"
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "The id of the asset that is selected, has to be a UUID"
                    }
                },
                "title": "The parameter body to `AnswerAssetRequest`"
            },
            "s12.inspections.v1.AnswerService.AnswerCheckboxBody": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "@deprecated: manual request id no longer in use"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Date/time the answer text request was created on the client"
                            },
                            "location": {
                                "$ref": "#/components/schemas/s12.common.GeoPosition"
                            }
                        },
                        "title": "The metadata for answering a question"
                    },
                    "selected": {
                        "type": "boolean",
                        "title": "Whether the checkbox is selected"
                    }
                },
                "title": "The parameter body to `AnswerCheckboxRequest`"
            },
            "s12.inspections.v1.AnswerService.GenerateDynamicFieldBody": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "@deprecated: manual request id no longer in use"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Date/time the answer text request was created on the client"
                            },
                            "location": {
                                "$ref": "#/components/schemas/s12.common.GeoPosition"
                            }
                        },
                        "description": "The metadata for answering a question. `question_id` in metadata will\nbe the id of the dynamic field.",
                        "title": "The metadata for answering a question. `question_id` in metadata will\nbe the id of the dynamic field."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "The unique identifier of the item of type `dynamicField`. It is\nthe parent of the element we are creating."
                    }
                },
                "title": "The request message for `GenerateDynamicField`"
            },
            "s12.inspections.v1.AnswerSubmissionResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    },
                    "calculated_values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem"
                        },
                        "title": "Map of calculation item ids to their values that have been evaluated as a result of answering a number type question"
                    }
                },
                "title": "Result returned from answering a question"
            },
            "s12.inspections.v1.Approvals.SectionApprovalState": {
                "type": "string",
                "enum": [
                    "SECTION_APPROVAL_STATE_UNSPECIFIED",
                    "SECTION_APPROVAL_STATE_NOT_REQUESTED",
                    "SECTION_APPROVAL_STATE_REQUESTED",
                    "SECTION_APPROVAL_STATE_APPROVED"
                ],
                "default": "SECTION_APPROVAL_STATE_UNSPECIFIED",
                "description": "- SECTION_APPROVAL_STATE_UNSPECIFIED: Value not set.\n - SECTION_APPROVAL_STATE_NOT_REQUESTED: Approval hasn't been requested yet for this Approval Page. Default state of Approval Page.\n - SECTION_APPROVAL_STATE_REQUESTED: Approval has been requested for this Approval Page.\n - SECTION_APPROVAL_STATE_APPROVED: Approval Page has been approved.",
                "title": "Approval state of an Approval Page"
            },
            "s12.inspections.v1.ArchiveInspectionResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from ArchiveInspection"
            },
            "s12.inspections.v1.AssetAnswer": {
                "type": "object",
                "properties": {
                    "asset_id": {
                        "type": "string"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.Attachments": {
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.Media"
                        }
                    }
                }
            },
            "s12.inspections.v1.CalculatedItem": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem.Status"
                    },
                    "error_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "single_value": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem.SingleValue"
                    },
                    "multiple_value": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem.MultipleValue"
                    }
                },
                "title": "Data containing either the value of a calculated item or error data if something went wrong"
            },
            "s12.inspections.v1.CalculatedItem.MultipleValue": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "s12.inspections.v1.CalculatedItem.SingleValue": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "s12.inspections.v1.CalculatedItem.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_SUCCESS",
                    "STATUS_INVALID_FORMULA",
                    "STATUS_UNANSWERED_DEPENDENCIES",
                    "STATUS_DIVISION_BY_ZERO",
                    "STATUS_UNSUPPORTED_FUNCTION"
                ],
                "default": "STATUS_UNSPECIFIED"
            },
            "s12.inspections.v1.CalculationAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.CheckboxAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "boolean"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.CloneInspectionResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "Inspection ID of the newly cloned inspection"
                    }
                },
                "title": "Result returned from `CloneInspection`"
            },
            "s12.inspections.v1.CompanyAnswer": {
                "type": "object",
                "properties": {
                    "company_id": {
                        "type": "string",
                        "description": "Company ID provides a reference to the company that the answer is associated with."
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Company name is included in the answer to allow for a snapshot of the selection."
                    }
                }
            },
            "s12.inspections.v1.DateTimeAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.DeleteInspectionResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from DeleteInspection"
            },
            "s12.inspections.v1.DrawingAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.DynamicField": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.DynamicFieldAnswerSet"
                        }
                    }
                },
                "description": "DynamicField contains flat list of answers with one of answer type is being\nDynamicMeta - a reference to DynamicField answer. Check the schema above for\nbetter understanding."
            },
            "s12.inspections.v1.DynamicFieldAnswerSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "client side generated ID (Element ID)"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.DynamicFieldChild"
                        }
                    }
                }
            },
            "s12.inspections.v1.DynamicFieldChild": {
                "type": "object",
                "properties": {
                    "answer_id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection item"
                    },
                    "question_id": {
                        "type": "string",
                        "title": "A reference to dynamic field element"
                    }
                }
            },
            "s12.inspections.v1.GenerateDynamicFieldResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    },
                    "calculated_values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.inspections.v1.CalculatedItem"
                        },
                        "description": "Map of calculation item ids to their results that have been\nevaluated as a result of generating this dynamic field, if any.\nUse this to see results or to update your local structure of the inspection\ndocument without the need to refetch the entire inspection."
                    },
                    "ids": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of `item_id` which is part of primary element tree to `item_id`\nof the newly created element. Use this map to either answer the questions\nwithin dynamic fields or update you local structure of the inspection\ndocument without the need to refetch the entire inspection."
                    }
                },
                "title": "Result returned from `GenerateDynamicField`"
            },
            "s12.inspections.v1.GetInspectionDetailsResponse": {
                "type": "object",
                "properties": {
                    "inspection": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails"
                    }
                },
                "title": "Result returned from `GetInspectionDetails`"
            },
            "s12.inspections.v1.GetInspectionResponse": {
                "type": "object",
                "properties": {
                    "inspection": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Inspection"
                    }
                },
                "title": "Result returned from `GetInspectionResponse`"
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "inspections id"
                    },
                    "name": {
                        "type": "string",
                        "title": "title of the inspection"
                    },
                    "completed": {
                        "type": "boolean",
                        "title": "if the inspection is completed or not"
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "if inspection is archived or not"
                    },
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "title": "score percentage"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "title": "score of the inspection"
                    },
                    "total_score": {
                        "type": "number",
                        "format": "double",
                        "title": "total score of the inspection"
                    },
                    "duration": {
                        "type": "string",
                        "format": "int64",
                        "title": "total duration of the inspection"
                    },
                    "document_number": {
                        "type": "string",
                        "title": "document number of the inspection"
                    },
                    "date_started": {
                        "type": "string",
                        "format": "date-time",
                        "title": "date the inspection started"
                    },
                    "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "title": "date the inspection was last modified"
                    },
                    "date_completed": {
                        "type": "string",
                        "format": "date-time",
                        "title": "date the inspection was completed. can be a zero date for incomplete\ninspections"
                    },
                    "date_conducted": {
                        "type": "string",
                        "format": "date-time",
                        "title": "date the inspection was conducted"
                    },
                    "revision_key": {
                        "type": "string",
                        "title": "revision key of the inspection"
                    },
                    "metadata_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "template": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Template"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Location"
                    },
                    "author": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Author"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Owner"
                    },
                    "access_level": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.AccessLevel"
                    },
                    "inspection_approval_state": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionApprovalState"
                    },
                    "date_approved": {
                        "type": "string",
                        "format": "date-time",
                        "title": "date the inspection was last approved"
                    },
                    "last_approver": {
                        "$ref": "#/components/schemas/s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Approver"
                    }
                }
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.AccessLevel": {
                "type": "string",
                "enum": [
                    "ACCESS_LEVEL_UNKNOWN",
                    "ACCESS_LEVEL_VIEW",
                    "ACCESS_LEVEL_EDIT",
                    "ACCESS_LEVEL_DELETE"
                ],
                "default": "ACCESS_LEVEL_UNKNOWN"
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Approver": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "user id of the approver"
                    },
                    "name": {
                        "type": "string",
                        "title": "name of the approver"
                    }
                }
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Author": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "user id of the author"
                    },
                    "name": {
                        "type": "string",
                        "title": "name of the author"
                    }
                }
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Location": {
                "type": "object",
                "properties": {
                    "location_text": {
                        "type": "string",
                        "title": "inspection location description"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    }
                }
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Owner": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "user id of the owner"
                    },
                    "name": {
                        "type": "string",
                        "title": "name of the author"
                    }
                }
            },
            "s12.inspections.v1.GetInspectionsResponse.InspectionsListItem.Template": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "corresponding template id"
                    },
                    "name": {
                        "type": "string",
                        "title": "corresponding template name"
                    }
                }
            },
            "s12.inspections.v1.Inspection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection"
                    },
                    "template_id": {
                        "type": "string",
                        "title": "The unique identifier for the template"
                    },
                    "site_id": {
                        "type": "string",
                        "description": "Deprecated: Use Site object instead."
                    },
                    "title": {
                        "type": "string",
                        "title": "The title of the inspection"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int64",
                        "title": "The duration over which the inspection is conducted"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time the inspection was created"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time the inspection was last modified"
                    },
                    "modified_by": {
                        "$ref": "#/components/schemas/s12.common.IdValueEntry"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionPermissions"
                    },
                    "is_marked_as_complete": {
                        "type": "boolean",
                        "title": "Is the inspection marked as complete"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the inspection was marked as complete."
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "title": "All the media linked to the inspection"
                    },
                    "revision_id": {
                        "type": "string",
                        "title": "Revisions are unique between inspections with same ID"
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Site"
                    },
                    "started_on": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The date/time the inspection was started"
                    },
                    "revision_key": {
                        "type": "string",
                        "title": "Similar to revision_id, revision_key is unique between inspections with same ID\nPlease use revision_key to compare between revisions"
                    },
                    "start_trigger": {
                        "$ref": "#/components/schemas/s12.inspections.v1.StartInspectionTrigger"
                    },
                    "score": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Inspection.Score"
                    },
                    "template_revision_id": {
                        "type": "string",
                        "title": "Revisions are unique between templates with same ID"
                    }
                }
            },
            "s12.inspections.v1.Inspection.Score": {
                "type": "object",
                "properties": {
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "title": "score percentage"
                    },
                    "total_score": {
                        "type": "number",
                        "format": "double",
                        "title": "total score of the inspection"
                    }
                }
            },
            "s12.inspections.v1.InspectionApprovalState": {
                "type": "string",
                "enum": [
                    "INSPECTION_APPROVAL_STATE_UNSPECIFIED",
                    "INSPECTION_APPROVAL_STATE_NOT_REQUESTED",
                    "INSPECTION_APPROVAL_STATE_REQUESTED",
                    "INSPECTION_APPROVAL_STATE_APPROVED"
                ],
                "default": "INSPECTION_APPROVAL_STATE_UNSPECIFIED",
                "description": "- INSPECTION_APPROVAL_STATE_UNSPECIFIED: Inspection has no approval pages\n - INSPECTION_APPROVAL_STATE_NOT_REQUESTED: Inspection has at least one approval page, and approval hasn't been requested yet\n - INSPECTION_APPROVAL_STATE_REQUESTED: Approval has been requested for one of the pages - inspection is awaiting approval\n - INSPECTION_APPROVAL_STATE_APPROVED: All approval pages in the inspection has been approved",
                "title": "Approval state for the inspection filter"
            },
            "s12.inspections.v1.InspectionDetails": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.Metadata"
                    },
                    "template": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.Template"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem"
                        },
                        "title": "Inspection items"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection item"
                    },
                    "type": {
                        "type": "string",
                        "title": "The response type for the item"
                    },
                    "label": {
                        "type": "string",
                        "title": "The label for the inspection item"
                    },
                    "parent_id": {
                        "type": "string",
                        "title": "The item ID of the parent item"
                    },
                    "flagged": {
                        "type": "boolean",
                        "description": "For question and list item, true if flagged response is set."
                    },
                    "last_modified_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time of when the item was last modified"
                    },
                    "item_score": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.ItemScore"
                    },
                    "combined_item_score": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.CombinedItemScore"
                    },
                    "text_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.TextItem"
                    },
                    "datetime_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.DateTimeItem"
                    },
                    "address_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.AddressItem"
                    },
                    "checkbox_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.CheckboxItem"
                    },
                    "list_items": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.ListItems"
                    },
                    "question_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.QuestionItem"
                    },
                    "media_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.MediaItem"
                    },
                    "drawing_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.DrawingItem"
                    },
                    "signature_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.SignatureItem"
                    },
                    "temperature_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.TemperatureItem"
                    },
                    "slider_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.SliderItem"
                    },
                    "asset_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.AssetItem"
                    },
                    "site_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.SiteItem"
                    },
                    "page_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.PageItem"
                    },
                    "section_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.SectionItem"
                    },
                    "repeated_section": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSection"
                    },
                    "repeated_section_prototype_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSectionPrototypeItem"
                    },
                    "repeated_section_instance_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSectionInstanceItem"
                    },
                    "logic_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.LogicItem"
                    },
                    "company_item": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.CompanyItem"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.Attachments"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.AddressItem": {
                "type": "object",
                "properties": {
                    "location_text": {
                        "type": "string",
                        "title": "Text value of the address item"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.inspections.v1.AddressLocation"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.AssetItem": {
                "type": "object",
                "properties": {
                    "asset_id": {
                        "type": "string",
                        "title": "ID of the asset"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.Attachments": {
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string",
                        "title": "Note attached to the item"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.Media"
                        },
                        "title": "An array of media attached to the item"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.CheckboxItem": {
                "type": "object",
                "properties": {
                    "checked": {
                        "type": "boolean",
                        "title": "Value of the checkbox"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.CombinedItemScore": {
                "type": "object",
                "properties": {
                    "combined_score_percentage": {
                        "type": "number",
                        "format": "double",
                        "title": "Score divided by total score"
                    },
                    "combined_max_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Max score of the item"
                    },
                    "combined_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score of the item"
                    }
                },
                "title": "Combined score represents the sum of scores for all children items"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.CompanyItem": {
                "type": "object",
                "properties": {
                    "company_id": {
                        "type": "string",
                        "title": "ID of the company"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.DateTimeItem": {
                "type": "object",
                "properties": {
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Value of the datetime item"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.DrawingItem": {
                "type": "object",
                "properties": {
                    "image": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.Media"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.ItemScore": {
                "type": "object",
                "properties": {
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "title": "Score divided by total score"
                    },
                    "max_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Max score of the item"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score of the item"
                    }
                },
                "title": "Score for individual items"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.ListItems": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.IdValueEntry"
                        },
                        "title": "Response will contain both the ID and the corresponding value"
                    },
                    "responseset_id": {
                        "type": "string",
                        "title": "ID of the response set"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.LogicItem": {
                "type": "object"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.Media": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the media"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the media, only present if include_media_url is set to true."
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/s12.common.MediaType"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Name of the originally uploaded media file, only present if include_media_url is set to true."
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.MediaItem": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.Media"
                        },
                        "title": "An array of media attached to the item"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.PageItem": {
                "type": "object",
                "properties": {
                    "approval": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.PageItem.Approval"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.PageItem.Approval": {
                "type": "object",
                "properties": {
                    "approval_state": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Approvals.SectionApprovalState"
                    },
                    "requested_at_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the approval was requested"
                    },
                    "requested_by": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.User"
                    },
                    "approved_at_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time the approval was approved"
                    },
                    "approved_by": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.User"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.QuestionItem": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.IdValueEntry"
                        },
                        "title": "Response will contain both the ID and the corresponding value"
                    },
                    "responseset_id": {
                        "type": "string",
                        "title": "ID of the response set"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSection": {
                "type": "object"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSectionInstanceItem": {
                "type": "object"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.RepeatedSectionPrototypeItem": {
                "type": "object"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.SectionItem": {
                "type": "object"
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.SignatureItem": {
                "type": "object",
                "properties": {
                    "image": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.InspectionItem.Media"
                    },
                    "name": {
                        "type": "string",
                        "title": "Text response of the signature item"
                    },
                    "signed_at_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time of the signature"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.SiteItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The unique identifier for the site"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the site"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.SliderItem": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "number",
                        "format": "double",
                        "title": "Value of the slider item"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.TemperatureItem": {
                "type": "object",
                "properties": {
                    "temperature": {
                        "type": "number",
                        "format": "double",
                        "title": "Temperature value recorded"
                    },
                    "scale": {
                        "type": "string",
                        "title": "Scale of the temperature"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.InspectionItem.TextItem": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text response of the item"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.Metadata": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection"
                    },
                    "inspection_name": {
                        "type": "string",
                        "title": "The name of the inspection"
                    },
                    "created_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Datetime the inspection was sync to the server"
                    },
                    "last_modified_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Datetime of when the inspection last synced to the server"
                    },
                    "last_modified_by": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.User"
                    },
                    "completed_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Datetime when the inspection was marked as complete"
                    },
                    "is_marked_as_complete": {
                        "type": "boolean",
                        "title": "Is the inspection marked as complete"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is the inspection archived"
                    },
                    "start_trigger": {
                        "type": "string",
                        "description": "Describes the trigger that started this inspection if\nit was not directly created by a user."
                    },
                    "score": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.Metadata.Score"
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.Metadata.Site"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/s12.inspections.v1.InspectionDetails.User"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.Metadata.Score": {
                "type": "object",
                "properties": {
                    "combined_score_percentage": {
                        "type": "number",
                        "format": "double",
                        "title": "Score divided by total score"
                    },
                    "combined_total_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Max score of the inspection"
                    },
                    "combined_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Sum of answered responses score"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.Metadata.Site": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "title": "The unique identifier for the site"
                    },
                    "site_name": {
                        "type": "string",
                        "title": "The name of the site"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.Template": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "title": "The unique identifier for the template"
                    },
                    "template_name": {
                        "type": "string",
                        "title": "The name of the template"
                    },
                    "template_revision_id": {
                        "type": "string",
                        "title": "Revisions are unique between templates with same ID"
                    }
                }
            },
            "s12.inspections.v1.InspectionDetails.User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The ID of the user"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the user"
                    }
                }
            },
            "s12.inspections.v1.InspectionPermissions": {
                "type": "object",
                "properties": {
                    "isOwner": {
                        "type": "boolean",
                        "title": "Is the current user the owner the inspection"
                    },
                    "canView": {
                        "type": "boolean",
                        "title": "Can the current user view the inspection"
                    },
                    "canEdit": {
                        "type": "boolean",
                        "title": "Can the current user edit the inspection"
                    },
                    "canDelete": {
                        "type": "boolean",
                        "title": "Can the current user delete the inspection"
                    }
                },
                "title": "Permissions granted to a user for a certain inspection"
            },
            "s12.inspections.v1.InspectionService.ArchiveInspectionBody": {
                "type": "object",
                "title": "The parameter body to `ArchiveInspection`"
            },
            "s12.inspections.v1.InspectionService.CloneInspectionBody": {
                "type": "object",
                "title": "The parameter body to `CloneInspection`"
            },
            "s12.inspections.v1.InspectionService.SetInspectionLocationBody": {
                "type": "object",
                "properties": {
                    "geo_position": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    },
                    "is_start_location": {
                        "type": "boolean",
                        "title": "Required. Whether this is the inspections starting or completing location"
                    }
                },
                "title": "The parameter body to `SetInspectionLocation`",
                "required": [
                    "geo_position",
                    "is_start_location"
                ]
            },
            "s12.inspections.v1.InspectionService.SetInspectionSiteBody": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "title": "The ID of the site"
                    }
                },
                "title": "The parameter body to `SetInspectionSite`",
                "required": [
                    "site_id"
                ]
            },
            "s12.inspections.v1.InspectionService.SetOwnerBody": {
                "type": "object",
                "properties": {
                    "owner_id": {
                        "type": "string",
                        "title": "The unique identifier for the new owner"
                    }
                },
                "title": "The parameter body to `SetOwner`",
                "required": [
                    "owner_id"
                ]
            },
            "s12.inspections.v1.ListAnswer": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "note": {
                        "type": "string",
                        "description": "Deprecated. Use attachments."
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.Media"
                        },
                        "description": "Deprecated. Use attachments."
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                },
                "title": "Answer returned for inspection items of type list"
            },
            "s12.inspections.v1.Media": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "filename": {
                        "type": "string",
                        "title": "DEPRECATED filename is now provided as part of the media field"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "created at contains date file was uploaded at"
                    }
                }
            },
            "s12.inspections.v1.MediaAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.Media"
                        }
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.QuestionAnswer": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "note": {
                        "type": "string",
                        "description": "Deprecated. Use attachments."
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.Media"
                        },
                        "description": "Deprecated. Use attachments."
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                },
                "title": "Answer returned for inspection items of type question"
            },
            "s12.inspections.v1.RemoveInspectionUserAccessResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from RemoveInspectionUserAccess"
            },
            "s12.inspections.v1.RestoreArchivedInspectionResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from RestoreArchivedInspection"
            },
            "s12.inspections.v1.SetInspectionLocationResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The unique identifier for the inspection"
                    }
                },
                "title": "Result returned from `SetInspectionLocation`"
            },
            "s12.inspections.v1.SetInspectionSiteResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from `SetInspectionSite`"
            },
            "s12.inspections.v1.SetOwnerResponse": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection"
                    }
                },
                "title": "Result returned from SetOwner"
            },
            "s12.inspections.v1.SignatureAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "name": {
                        "type": "string",
                        "title": "name on the signature"
                    },
                    "signed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp for when the signature answer was last updated"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                },
                "title": "Signature item stores user name and an image with signature"
            },
            "s12.inspections.v1.Site": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The site id for the inspection"
                    },
                    "name": {
                        "type": "string",
                        "title": "The site name for the inspection"
                    }
                },
                "title": "The site data for the inspection"
            },
            "s12.inspections.v1.SiteAnswer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Unique ID for the site"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of site (for ex. Surry Hills)"
                    },
                    "region": {
                        "type": "string",
                        "title": "Name for region (for ex. NSW)"
                    },
                    "area": {
                        "type": "string",
                        "title": "Name for area (for ex. Sydney)"
                    }
                },
                "title": "Site answer contains inspection location data"
            },
            "s12.inspections.v1.SliderAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "number",
                        "format": "double"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.StartInspectionTrigger": {
                "type": "object",
                "properties": {
                    "schedule": {
                        "$ref": "#/components/schemas/s12.inspections.v1.StartInspectionTrigger.StartedFromSchedule"
                    },
                    "issue": {
                        "$ref": "#/components/schemas/s12.inspections.v1.StartInspectionTrigger.StartedFromIssue"
                    }
                },
                "title": "Represents the resource that started this inspection"
            },
            "s12.inspections.v1.StartInspectionTrigger.StartedFromIssue": {
                "type": "object",
                "properties": {
                    "issue_id": {
                        "type": "string",
                        "description": "ID of the issue that this inspection was started from."
                    }
                }
            },
            "s12.inspections.v1.StartInspectionTrigger.StartedFromSchedule": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule that this inspection was started from."
                    }
                }
            },
            "s12.inspections.v1.SwitchAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "boolean"
                    }
                }
            },
            "s12.inspections.v1.TableData": {
                "type": "object",
                "properties": {
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.TableData.Line"
                        }
                    }
                },
                "title": "Table stores a flat list of Lines which comprise of Cells\nThis message loosely follows the schema of DynamicField"
            },
            "s12.inspections.v1.TableData.Line": {
                "type": "object",
                "properties": {
                    "line_id": {
                        "type": "string",
                        "title": "client side generated ID (Element ID)"
                    },
                    "cells": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.inspections.v1.TableData.Line.Cell"
                        }
                    }
                }
            },
            "s12.inspections.v1.TableData.Line.Cell": {
                "type": "object",
                "properties": {
                    "repeated_section_question_id": {
                        "type": "string",
                        "title": "The unique identifier for the prime element of the inspection item"
                    },
                    "repeated_section_answer_id": {
                        "type": "string",
                        "title": "The unique identifier for the answer item\nThis should refer to the answer item in `content`"
                    },
                    "text_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.TextAnswer"
                    },
                    "calculation_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CalculationAnswer"
                    },
                    "temperature_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.TemperatureAnswer"
                    },
                    "checkbox_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.CheckboxAnswer"
                    },
                    "datetime_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.DateTimeAnswer"
                    },
                    "switch_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.SwitchAnswer"
                    },
                    "media_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.MediaAnswer"
                    },
                    "list_answer": {
                        "$ref": "#/components/schemas/s12.inspections.v1.ListAnswer"
                    }
                }
            },
            "s12.inspections.v1.TemperatureAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "number",
                        "format": "double"
                    },
                    "recorded_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.inspections.v1.TextAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "string"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/s12.inspections.v1.Attachments"
                    }
                }
            },
            "s12.integrations.app.v1.App": {
                "type": "object",
                "properties": {
                    "app_id": {
                        "type": "string",
                        "description": "The ID of the app."
                    },
                    "app_name": {
                        "type": "string",
                        "description": "The name of the application."
                    },
                    "installation_id": {
                        "type": "string",
                        "description": "The ID of this installation."
                    },
                    "installation_configuration": {
                        "type": "string",
                        "description": "The configuration of the installation."
                    }
                }
            },
            "s12.integrations.app.v1.ApplicationTypeExternalWebExperience": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "The iframe url"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.integrations.app.v1.ApplicationTypeExternalWebExperience.Location"
                    }
                },
                "title": "ExternalWebExperience",
                "required": [
                    "url",
                    "location"
                ]
            },
            "s12.integrations.app.v1.ApplicationTypeExternalWebExperience.Location": {
                "type": "object",
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Location Standalone",
                        "description": "the iframe will be rendered on a separate page",
                        "properties": {
                            "location_standalone": {
                                "$ref": "#/components/schemas/s12.integrations.app.v1.ExternalWebExperience_LocationStandalone"
                            }
                        }
                    }
                ]
            },
            "s12.integrations.app.v1.CreateConfigurationResponse": {
                "type": "object",
                "properties": {
                    "configuration_id": {
                        "type": "string",
                        "title": "The unique identifier for the app installation configuration"
                    }
                },
                "title": "Response for creating a configuration"
            },
            "s12.integrations.app.v1.CreateInstallationResponse": {
                "type": "object",
                "properties": {
                    "installation_id": {
                        "type": "string",
                        "title": "The unique identifier for the app installation"
                    }
                },
                "title": "Response for InstallApplication"
            },
            "s12.integrations.app.v1.DeleteConfigurationResponse": {
                "type": "object",
                "title": "Response for deleting the configuration"
            },
            "s12.integrations.app.v1.DeleteInstallationResponse": {
                "type": "object",
                "title": "Response for DeleteInstallation"
            },
            "s12.integrations.app.v1.ExtApplication": {
                "type": "object",
                "properties": {
                    "app_id": {
                        "type": "string",
                        "description": "The ID of the app."
                    },
                    "app_name": {
                        "type": "string",
                        "description": "The name of the integration."
                    },
                    "app_type": {
                        "type": "string",
                        "description": "The type of the application."
                    },
                    "app_configuration": {
                        "type": "string",
                        "title": "The configuration of the application;"
                    }
                }
            },
            "s12.integrations.app.v1.ExternalWebExperience_LocationAssetProfile": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "The name for the app installation"
                    },
                    "filter_asset_id": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Filter for asset id"
                    },
                    "filter_asset_type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Filter for asset type"
                    }
                },
                "title": "Location Asset Profile",
                "required": [
                    "label"
                ]
            },
            "s12.integrations.app.v1.ExternalWebExperience_LocationSiteProfile": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "The name for the app installation"
                    }
                },
                "title": "Location Site Profile",
                "required": [
                    "label"
                ]
            },
            "s12.integrations.app.v1.ExternalWebExperience_LocationStandalone": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "The name for the app installation"
                    }
                },
                "title": "Location Standalone",
                "required": [
                    "label"
                ]
            },
            "s12.integrations.app.v1.ExternalWebExperience_LocationUserProfile": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "The name for the app installation"
                    }
                },
                "title": "Location User Profile",
                "required": [
                    "label"
                ]
            },
            "s12.integrations.app.v1.GetInstallationResponse": {
                "type": "object",
                "properties": {
                    "app_id": {
                        "type": "string",
                        "description": "The ID of the app."
                    },
                    "app_name": {
                        "type": "string",
                        "description": "The name of the application."
                    },
                    "installation_id": {
                        "type": "string",
                        "description": "The ID of this installation."
                    },
                    "installation_configuration": {
                        "type": "string",
                        "description": "The configuration of the installation."
                    }
                },
                "title": "Response for GetInstallation"
            },
            "s12.integrations.app.v1.ListApplicationsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.common.v1.PaginationMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.integrations.app.v1.ExtApplication"
                        },
                        "description": "The applications returned."
                    }
                },
                "title": "Response for ListApplications"
            },
            "s12.integrations.app.v1.ListInstallationsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.common.v1.PaginationMetadata"
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.integrations.app.v1.App"
                        },
                        "description": "The installations returned."
                    }
                },
                "title": "Response for ListInstallations"
            },
            "s12.integrations.app.v1.PartnerIntegrationService.CreateConfigurationBody": {
                "type": "object",
                "properties": {
                    "external_web_experience": {
                        "$ref": "#/components/schemas/s12.integrations.app.v1.ApplicationTypeExternalWebExperience"
                    }
                },
                "title": "Request for creating a configuration"
            },
            "s12.integrations.app.v1.PartnerIntegrationService.CreateInstallationBody": {
                "type": "object",
                "title": "Request for CreateInstallation"
            },
            "s12.integrations.app.v1.PartnerIntegrationService.UpdateApplicationBody": {
                "type": "object",
                "properties": {
                    "app_name": {
                        "type": "string"
                    },
                    "external_web_experience": {
                        "$ref": "#/components/schemas/s12.integrations.app.v1.RegisterApplicationTypeExternalWebExperience"
                    }
                },
                "title": "Request for UpdateApplication",
                "required": [
                    "app_name"
                ]
            },
            "s12.integrations.app.v1.PartnerIntegrationService.UpdateConfigurationBody": {
                "type": "object",
                "properties": {
                    "external_web_experience": {
                        "$ref": "#/components/schemas/s12.integrations.app.v1.ApplicationTypeExternalWebExperience"
                    }
                },
                "title": "Request for updating the configuration"
            },
            "s12.integrations.app.v1.RegisterApplicationRequest": {
                "type": "object",
                "properties": {
                    "app_name": {
                        "type": "string"
                    },
                    "external_web_experience": {
                        "$ref": "#/components/schemas/s12.integrations.app.v1.RegisterApplicationTypeExternalWebExperience"
                    }
                },
                "title": "Request for RegisterApplication",
                "required": [
                    "app_name"
                ]
            },
            "s12.integrations.app.v1.RegisterApplicationResponse": {
                "type": "object",
                "properties": {
                    "app_id": {
                        "type": "string",
                        "description": "The ID of the app."
                    }
                },
                "title": "Response for RegisterApplication"
            },
            "s12.integrations.app.v1.RegisterApplicationTypeExternalWebExperience": {
                "type": "object",
                "properties": {
                    "allowlist_hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "the host that is intended to be the origin of the iframe. Ex: example.com",
                        "title": "The iframe url host allowlist"
                    }
                },
                "description": "Object that describes an external iframe with a list of allowed hosts",
                "title": "Web Experience",
                "required": [
                    "allowlist_hosts"
                ]
            },
            "s12.integrations.app.v1.UpdateApplicationResponse": {
                "type": "object",
                "title": "Response for UpdateApplication"
            },
            "s12.integrations.app.v1.UpdateConfigurationResponse": {
                "type": "object",
                "title": "Response for updating the configuration"
            },
            "s12.media.v1.Download": {
                "type": "object",
                "properties": {
                    "stream_info": {
                        "$ref": "#/components/schemas/s12.media.v1.Download.Stream"
                    },
                    "mp4_info": {
                        "$ref": "#/components/schemas/s12.media.v1.Download.MP4"
                    }
                },
                "title": "Information to be included for download in SignedURLResponse"
            },
            "s12.media.v1.Download.MP4": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Signed url to download the MP4 file"
                    },
                    "captions_url": {
                        "type": "string",
                        "title": "Signed url to download the captions file for the video"
                    }
                },
                "title": "Message to be used for the MP4 video file object"
            },
            "s12.media.v1.Download.Stream": {
                "type": "object",
                "properties": {
                    "stream_url": {
                        "type": "string",
                        "title": "URL to the HLS manifest file, used to start the streaming"
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of cookies to be used when requesting resource from CloudFront."
                    }
                },
                "title": "Messages to be used for video streaming with HLS files"
            },
            "s12.media.v1.SignedURLResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The url has been deprecated for upload paths. For download paths, it is\nstill valid. The signed URL that can be used to upload or download the\nmedia to the S12 system. UploadSignedURL is only valid for 5 minutes and\nDownloadSignedURL for 20 minutes; this is from the first bytes received\ni.e. if upload started within 5 minutes, it is still valid even if upload\ntakes 10 minutes to complete. It is safe to reject a signed URL and\nre-request a new Upload/Download Signed URL."
                    },
                    "upload_info": {
                        "$ref": "#/components/schemas/s12.media.v1.Upload"
                    },
                    "download_info": {
                        "$ref": "#/components/schemas/s12.media.v1.Download"
                    }
                },
                "title": "The URL response from `GetUploadSignedURL` and `GetDownloadSignedURL`"
            },
            "s12.media.v1.Upload": {
                "type": "object",
                "properties": {
                    "multipart_upload": {
                        "$ref": "#/components/schemas/s12.media.v1.Upload.MultipartUpload"
                    }
                },
                "title": "Information to be included for upload in SignedURLResponse"
            },
            "s12.media.v1.Upload.MultipartUpload": {
                "type": "object",
                "properties": {
                    "upload_id": {
                        "type": "string",
                        "title": "This parameter is the upload id generated by S3 when initiating a new\nmultipart upload Used as an identifier of a multipart upload session"
                    },
                    "upload_bodies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.media.v1.Upload.MultipartUpload.UploadPartBody"
                        }
                    }
                }
            },
            "s12.media.v1.Upload.MultipartUpload.UploadPartBody": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Destination url to upload the part"
                    },
                    "part_number": {
                        "type": "string",
                        "format": "int64",
                        "title": "Number of the part in the multipart uploading sequence"
                    }
                },
                "description": "This parameter returns the multi-part signed URL and part number\nrepresenting the position of a part in the upload sequence for AmazonS3\nmulti-part upload. It will return N number of UploadPartBody, each one is\nused to upload one part of the whole file. An UploadPartBody will be\nreturned only if the file size is more than 10MB. Note that all parts\nexcept the last one should be larger than 5MB or the upload will fail.\nEach url is only valid for 10 minutes; this is from the first bytes\nreceived i.e. if upload started within 10 minutes, it is still valid even\nif upload takes more than 10 minutes to complete."
            },
            "s12.permissions.v1.AssignPermissionSetRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Optional. The ID of the permission set."
                    },
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the users to assign."
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional. The name of the permission set to assign.\nDe-prioritised in favour of id."
                    }
                },
                "description": "The request for AssignPermissionSet."
            },
            "s12.permissions.v1.AssignPermissionSetResponse": {
                "type": "object",
                "description": "The response for AssignPermissionSet."
            },
            "s12.permissions.v1.GetPermissionSetResponse": {
                "type": "object",
                "properties": {
                    "permission_set": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetWithUsers"
                    }
                },
                "description": "The response for GetPermissionSet."
            },
            "s12.permissions.v1.ListPermissionSetsFilter": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetType"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    }
                }
            },
            "s12.permissions.v1.ListPermissionSetsRequest": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "description": "Search input to filter down the permission sets."
                    },
                    "sort": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetSort"
                    },
                    "include_users": {
                        "type": "boolean",
                        "description": "Whether to include users in the response."
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum number of permission sets to return."
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The offset of the first permission set to return."
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.permissions.v1.ListPermissionSetsFilter"
                        },
                        "description": "(Optional). The filters to apply."
                    }
                },
                "description": "The request for ListPermissionSets."
            },
            "s12.permissions.v1.ListPermissionSetsResponse": {
                "type": "object",
                "properties": {
                    "permission_sets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetWithUsers"
                        },
                        "description": "The permission sets."
                    },
                    "total_results": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of results for the provided input."
                    }
                },
                "description": "The response for ListPermissionSets."
            },
            "s12.permissions.v1.PermissionSet": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetIdentifier"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification time of the permission set."
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/s12.permissions.v1.Permissions"
                    },
                    "default_for_seat_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                        },
                        "description": "The seat types that this permission set is the default for."
                    },
                    "permissions_denylist": {
                        "$ref": "#/components/schemas/s12.permissions.v1.Permissions"
                    }
                },
                "description": "PermissionSet represents a permission set."
            },
            "s12.permissions.v1.PermissionSetIdentifier": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the permission set."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetType"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the permission set."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the permission set."
                    },
                    "allowed_seat_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                        },
                        "description": "The seat types allowed for the permission set. The first element is the \"minimum\" allowed seat type."
                    }
                },
                "description": "Identifier for a permission set."
            },
            "s12.permissions.v1.PermissionSetOrder": {
                "type": "string",
                "enum": [
                    "PERMISSION_SET_ORDER_UNSPECIFIED",
                    "PERMISSION_SET_ORDER_ASC",
                    "PERMISSION_SET_ORDER_DESC"
                ],
                "default": "PERMISSION_SET_ORDER_UNSPECIFIED",
                "description": "The possible sort orders for permission sets.\n\n - PERMISSION_SET_ORDER_UNSPECIFIED: Unspecified order.\n - PERMISSION_SET_ORDER_ASC: Ascending order.\n - PERMISSION_SET_ORDER_DESC: Descending order."
            },
            "s12.permissions.v1.PermissionSetSort": {
                "type": "object",
                "properties": {
                    "criteria": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetSortCriteria"
                    },
                    "order": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSetOrder"
                    },
                    "prioritise_seat_type": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    }
                },
                "description": "The parameters to sort permission sets by (criteria and order)."
            },
            "s12.permissions.v1.PermissionSetSortCriteria": {
                "type": "string",
                "enum": [
                    "PERMISSION_SET_SORT_CRITERIA_UNSPECIFIED",
                    "PERMISSION_SET_SORT_CRITERIA_DEFAULT",
                    "PERMISSION_SET_SORT_CRITERIA_NAME",
                    "PERMISSION_SET_SORT_CRITERIA_MIN_SEAT_TYPE",
                    "PERMISSION_SET_SORT_CRITERIA_LAST_MODIFIED"
                ],
                "default": "PERMISSION_SET_SORT_CRITERIA_UNSPECIFIED",
                "description": "The possible criteria to sort permission sets by.\n\n - PERMISSION_SET_SORT_CRITERIA_UNSPECIFIED: Unspecified sort.\n - PERMISSION_SET_SORT_CRITERIA_DEFAULT: Sort by the default order, which may or may not be equivalent as any other option.\n - PERMISSION_SET_SORT_CRITERIA_NAME: Sort by name.\n - PERMISSION_SET_SORT_CRITERIA_MIN_SEAT_TYPE: Sort by minimum seat type.\n - PERMISSION_SET_SORT_CRITERIA_LAST_MODIFIED: Sort by last modified date."
            },
            "s12.permissions.v1.PermissionSetType": {
                "type": "string",
                "enum": [
                    "PERMISSION_SET_TYPE_UNSPECIFIED",
                    "PERMISSION_SET_TYPE_DEFAULT",
                    "PERMISSION_SET_TYPE_CUSTOM"
                ],
                "default": "PERMISSION_SET_TYPE_UNSPECIFIED",
                "description": "The possible types of permission sets.\n\n - PERMISSION_SET_TYPE_UNSPECIFIED: Unspecified permission set type.\n - PERMISSION_SET_TYPE_DEFAULT: Default permission set.\n - PERMISSION_SET_TYPE_CUSTOM: Custom permission set."
            },
            "s12.permissions.v1.PermissionSetWithUsers": {
                "type": "object",
                "properties": {
                    "permission_set": {
                        "$ref": "#/components/schemas/s12.permissions.v1.PermissionSet"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A subset of the users assigned to the permission set."
                    },
                    "user_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users assigned to the permission set."
                    }
                },
                "title": "A permission set and its users"
            },
            "s12.permissions.v1.Permissions": {
                "type": "object",
                "properties": {
                    "manage_role": {
                        "type": "boolean",
                        "title": "Permission representing \"Admin\""
                    },
                    "billing": {
                        "type": "boolean",
                        "title": "Permission representing \"Billing management\""
                    },
                    "manage_folders": {
                        "type": "boolean",
                        "title": "Permission representing \"Site management\""
                    },
                    "create_children": {
                        "type": "boolean",
                        "title": "Permission representing \"Group management\""
                    },
                    "manage_users": {
                        "type": "boolean",
                        "title": "Permission representing \"User management\""
                    },
                    "allow_modify_manage_data": {
                        "type": "boolean",
                        "title": "Permission representing \"Data management\""
                    },
                    "manage_data": {
                        "type": "boolean",
                        "title": "Permission representing \"Data access\""
                    },
                    "allow_mobile_data_access_sync": {
                        "type": "boolean",
                        "title": "Permission representing \"Mobile data access\""
                    },
                    "create_template": {
                        "type": "boolean",
                        "title": "Permission representing \"Template creation\""
                    },
                    "manage_response_sets": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage response sets\""
                    },
                    "share_public_library": {
                        "type": "boolean",
                        "title": "Permission representing \"Upload to Public Library\""
                    },
                    "manage_report_preferences": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage global report layouts\""
                    },
                    "create_schedules": {
                        "type": "boolean",
                        "title": "Permission representing \"Schedule creation\""
                    },
                    "manage_schedules": {
                        "type": "boolean",
                        "title": "Permission representing \"Schedule management\""
                    },
                    "manage_incidents": {
                        "type": "boolean",
                        "title": "Permission representing \"Issues management\""
                    },
                    "incident_access": {
                        "type": "boolean",
                        "title": "Permission representing \"Issues access\""
                    },
                    "manage_sensors": {
                        "type": "boolean",
                        "title": "Permission representing \"Sensor management\""
                    },
                    "view_sensors": {
                        "type": "boolean",
                        "title": "Permission representing \"Sensors access\""
                    },
                    "create_heads_up": {
                        "type": "boolean",
                        "title": "Permission representing \"Create Heads up\""
                    },
                    "manage_assets": {
                        "type": "boolean",
                        "title": "Permission representing \"Assets management\""
                    },
                    "view_assets": {
                        "type": "boolean",
                        "title": "Permission representing \"Assets access\""
                    },
                    "view_training": {
                        "type": "boolean",
                        "title": "Permission representing \"Training access\""
                    },
                    "manage_tasks": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage tasks\""
                    },
                    "new_report_experience": {
                        "type": "boolean",
                        "description": "Permission representing \"New report experience\"\nShould not be used in new cases. Returned only for backwards compat."
                    },
                    "manage_training": {
                        "type": "boolean",
                        "title": "Permission representing \"Training management\""
                    },
                    "create_training": {
                        "type": "boolean",
                        "title": "Permission representing \"Training creation\""
                    },
                    "manage_permissions": {
                        "type": "boolean",
                        "title": "Permission representing \"Permission management\""
                    },
                    "view_analytics": {
                        "type": "boolean",
                        "title": "Permission representing \"Analytics access\""
                    },
                    "create_analytics": {
                        "type": "boolean",
                        "title": "Permission representing \"Analytics report creation (creator-based)\""
                    },
                    "create_site_analytics": {
                        "type": "boolean",
                        "title": "Permission representing \"Analytics report creation (site-based)\""
                    },
                    "manage_analytics": {
                        "type": "boolean",
                        "title": "Permission representing \"Analytics management\""
                    },
                    "settings_assets": {
                        "type": "boolean",
                        "title": "Permission representing \"Assets settings\""
                    },
                    "manage_credentials": {
                        "type": "boolean",
                        "title": "Permission representing \"Credentials\""
                    },
                    "create_course": {
                        "type": "boolean",
                        "title": "Permission representing \"Course creation\""
                    },
                    "admin_resources": {
                        "type": "boolean",
                        "title": "Permission representing \"Resources Administration\""
                    },
                    "create_resources": {
                        "type": "boolean",
                        "title": "Permission representing \"Resources Creation\""
                    },
                    "manage_training_teams": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Teams\""
                    },
                    "manage_companies": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Companies\""
                    },
                    "manage_assets_media": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Assets media\""
                    },
                    "manage_assets_maintenance": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Assets maintenance\""
                    },
                    "settings_lone_worker": {
                        "type": "boolean",
                        "title": "Permission representing \"Lone worker settings\""
                    },
                    "manage_lone_worker": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Lone Workers\""
                    },
                    "access_lone_worker": {
                        "type": "boolean",
                        "title": "Permission representing \"Access Lone Workers\""
                    },
                    "access_investigations": {
                        "type": "boolean",
                        "title": "Permission representing \"Create Investigations\""
                    },
                    "manage_investigations": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Investigations\""
                    },
                    "manage_heads_up": {
                        "type": "boolean",
                        "title": "Permission representing \"Manage Heads Up\""
                    },
                    "configuration_investigations": {
                        "type": "boolean",
                        "title": "Permission representing \"Configuration Investigations\""
                    },
                    "view_investigations": {
                        "type": "boolean",
                        "title": "Permission representing \"Read Investigations\""
                    },
                    "access_osha": {
                        "type": "boolean",
                        "title": "Permission representing \"Access OSHA\""
                    },
                    "view_inductions": {
                        "type": "boolean",
                        "title": "Permission representing \"Access Onboarding\""
                    }
                },
                "description": "Permissions represents a set of permissions. Individual permissions can be omitted to leave them unchanged."
            },
            "s12.reports.v1.Filter": {
                "type": "object",
                "properties": {
                    "show_actions": {
                        "type": "boolean",
                        "title": "Show/hide actions from the inspection report"
                    },
                    "show_failed_items": {
                        "type": "boolean",
                        "title": "Show/hide failed items"
                    },
                    "show_scores": {
                        "type": "boolean",
                        "title": "Show/hide all scoring"
                    },
                    "show_inspection": {
                        "type": "boolean",
                        "title": "Show/hide the inspection result"
                    },
                    "show_instructions": {
                        "type": "boolean",
                        "title": "Show/hide information/instruction fields"
                    },
                    "show_unanswered": {
                        "type": "boolean",
                        "title": "Show/hide unanswered questions"
                    },
                    "show_toc": {
                        "type": "boolean",
                        "title": "Show/hide table of content in exported file"
                    },
                    "show_high_quality_photo": {
                        "type": "boolean",
                        "title": "Show high/normal quality photo in exported file\n@deprecated: use media_layout on the upper level instead"
                    },
                    "show_disclaimer": {
                        "type": "boolean",
                        "title": "Show/hide the report disclaimer"
                    },
                    "show_media_summary": {
                        "type": "boolean",
                        "title": "Show media summary at the end of the report"
                    },
                    "show_footer": {
                        "type": "boolean",
                        "title": "Show/hide footer"
                    },
                    "show_footer_inspection_title": {
                        "type": "boolean",
                        "title": "Show/hide just the inspection title in footer"
                    },
                    "show_footer_custom_text": {
                        "type": "boolean",
                        "title": "Show/hide just the custom text in footer"
                    },
                    "enable_pdf_private_link": {
                        "type": "boolean",
                        "title": "Toggle the private pdf link feature"
                    },
                    "show_page_break": {
                        "type": "boolean",
                        "title": "Show/hide page breaks for each section"
                    },
                    "hide_failed_items_in_summary": {
                        "type": "boolean",
                        "title": "Show/hide failed items in report summary"
                    },
                    "hide_actions_in_summary": {
                        "type": "boolean",
                        "title": "Show/hide actions in report summary"
                    },
                    "hide_checked_questions": {
                        "type": "boolean",
                        "title": "Show/hide checked questions in report summary"
                    },
                    "hide_unchecked_questions": {
                        "type": "boolean",
                        "title": "Show/hide unchecked questions in report summary"
                    },
                    "show_ai_summary": {
                        "type": "boolean",
                        "title": "Show/hide AI generated summary in report summary"
                    },
                    "show_tables": {
                        "type": "boolean",
                        "title": "Show/hide any tables in the report"
                    }
                },
                "title": "Filter show/hide a certain part of the web report"
            },
            "s12.reports.v1.MediaLayout": {
                "type": "object",
                "properties": {
                    "size": {
                        "$ref": "#/components/schemas/s12.reports.v1.MediaSize"
                    },
                    "resolution": {
                        "$ref": "#/components/schemas/s12.reports.v1.MediaResolution"
                    }
                },
                "title": "Defines the layout of the media elements in the report appendix"
            },
            "s12.reports.v1.MediaResolution": {
                "type": "string",
                "enum": [
                    "MEDIA_RESOLUTION_UNSPECIFIED",
                    "MEDIA_RESOLUTION_LOW",
                    "MEDIA_RESOLUTION_HIGH"
                ],
                "default": "MEDIA_RESOLUTION_UNSPECIFIED",
                "description": "- MEDIA_RESOLUTION_LOW: Render images in low resolution (smaller file size)\n - MEDIA_RESOLUTION_HIGH: Render images in high resolution (larger file size)",
                "title": "Desired quality of media in the appendix"
            },
            "s12.reports.v1.MediaSize": {
                "type": "string",
                "enum": [
                    "MEDIA_SIZE_UNSPECIFIED",
                    "MEDIA_SIZE_SMALL",
                    "MEDIA_SIZE_MEDIUM",
                    "MEDIA_SIZE_LARGE"
                ],
                "default": "MEDIA_SIZE_UNSPECIFIED",
                "description": "- MEDIA_SIZE_SMALL: Thumbnails: 6 per row, Appendix: 4 images per page\n - MEDIA_SIZE_MEDIUM: Thumbnails: 3 per row; Appendix: 2 images per page\n - MEDIA_SIZE_LARGE: Thumbnails: 2 per row; Appendix: 1 image per page",
                "title": "Desired size of media as thumbnails or in the appendix"
            },
            "s12.reports.v1.PageSize": {
                "type": "string",
                "enum": [
                    "PAGE_SIZE_UNSPECIFIED",
                    "PAGE_SIZE_A4",
                    "PAGE_SIZE_US_LETTER"
                ],
                "default": "PAGE_SIZE_UNSPECIFIED",
                "title": "- PAGE_SIZE_A4: A4 page size (210mm x 297mm)\n - PAGE_SIZE_US_LETTER: US Letter page size (8.5in x 11in)"
            },
            "s12.reports.v1.Preference": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The preference id"
                    },
                    "creator_id": {
                        "type": "string",
                        "title": "The user who created the preference"
                    },
                    "organisation_id": {
                        "type": "string",
                        "title": "The org id of the user who created this preference"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/s12.reports.v1.Filter"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this preference was created"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this preference was modified"
                    },
                    "label": {
                        "type": "string",
                        "title": "The label/title of this preference"
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is this a default preference for a template"
                    },
                    "logo": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "disclaimer": {
                        "type": "string",
                        "title": "Disclaimer message"
                    },
                    "is_global": {
                        "type": "boolean",
                        "title": "Is this preference a global preference?"
                    },
                    "template_id": {
                        "type": "string",
                        "title": "The template id where this preference can be associated with"
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of page IDs to be filtered"
                    },
                    "email_subject": {
                        "type": "string",
                        "title": "Email template to prefill with when sending PDF"
                    },
                    "email_body": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.reports.v1.PreferenceContact"
                        },
                        "title": "Contacts to prefill email with"
                    },
                    "footer_text": {
                        "type": "string",
                        "title": "Footer message"
                    },
                    "media_layout": {
                        "$ref": "#/components/schemas/s12.reports.v1.MediaLayout"
                    },
                    "cover_page": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "inspection_items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of report configurations"
                    },
                    "thumbnail_size": {
                        "$ref": "#/components/schemas/s12.reports.v1.MediaSize"
                    },
                    "email_auto_send": {
                        "type": "boolean",
                        "description": "To specify whether emails are automatically sent for this template or not."
                    },
                    "page_size": {
                        "$ref": "#/components/schemas/s12.reports.v1.PageSize"
                    }
                },
                "title": "Preference represents a report preference that has been created for an\nOrg/Template"
            },
            "s12.reports.v1.PreferenceContact": {
                "type": "object",
                "properties": {
                    "contact_type": {
                        "$ref": "#/components/schemas/s12.reports.v1.PreferenceContact.ContactType"
                    },
                    "delivery_type": {
                        "$ref": "#/components/schemas/s12.reports.v1.PreferenceContact.DeliveryType"
                    },
                    "value": {
                        "type": "string",
                        "title": "Email address (or userId/groupId in the future)"
                    }
                }
            },
            "s12.reports.v1.PreferenceContact.ContactType": {
                "type": "string",
                "enum": [
                    "UNKNOWN_CONTACT_TYPE",
                    "EXTERNAL",
                    "USER",
                    "GROUP"
                ],
                "default": "UNKNOWN_CONTACT_TYPE"
            },
            "s12.reports.v1.PreferenceContact.DeliveryType": {
                "type": "string",
                "enum": [
                    "UNKNOWN_DELIVERY_TYPE",
                    "TO",
                    "CC",
                    "BCC"
                ],
                "default": "UNKNOWN_DELIVERY_TYPE"
            },
            "s12.reports.v1.StartInspectionExportRequest": {
                "type": "object",
                "properties": {
                    "export_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportRequest.ExportData"
                        },
                        "title": "List of report configurations"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportRequest.DocumentType"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "Sets the timezone for bulk exporting file name"
                    },
                    "regenerate": {
                        "type": "boolean",
                        "description": "Indicate whether to by pass any caching and regenerate the report from the\nlatest data. This flag would only take effect for authorized user."
                    },
                    "lang": {
                        "type": "string",
                        "title": "Sets the language for the document using language code from ISO-639\nformat"
                    },
                    "inspection_filter": {
                        "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportRequest.InspectionFilter"
                    },
                    "export_settings": {
                        "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportRequest.TabularExportSettings"
                    }
                },
                "title": "StartInspectionExportRequest represents the parameters to `StartInspectionExport`",
                "required": [
                    "export_data",
                    "type"
                ]
            },
            "s12.reports.v1.StartInspectionExportRequest.DocumentType": {
                "type": "string",
                "enum": [
                    "DOCUMENT_TYPE_UNSPECIFIED",
                    "DOCUMENT_TYPE_PDF",
                    "DOCUMENT_TYPE_WORD",
                    "DOCUMENT_TYPE_MEDIA",
                    "DOCUMENT_TYPE_EXCEL",
                    "DOCUMENT_TYPE_CSV_V3",
                    "DOCUMENT_TYPE_JSON",
                    "DOCUMENT_TYPE_CSV",
                    "DOCUMENT_TYPE_CSV_MEDIA",
                    "DOCUMENT_TYPE_CSV_EXCEL"
                ],
                "default": "DOCUMENT_TYPE_UNSPECIFIED",
                "title": "- DOCUMENT_TYPE_PDF: export document as PDF\n - DOCUMENT_TYPE_WORD: export document as MS Word\n - DOCUMENT_TYPE_MEDIA: export document as mediaZip\n - DOCUMENT_TYPE_EXCEL: export document as Excel\n - DOCUMENT_TYPE_CSV_V3: export document as CSV\n - DOCUMENT_TYPE_JSON: export document as JSON for backward compatibility\n - DOCUMENT_TYPE_CSV: export document as CSV for backward compatibility\n - DOCUMENT_TYPE_CSV_MEDIA: export document as CSVWithMedia for backward compatibility\n - DOCUMENT_TYPE_CSV_EXCEL: export document as Old Excel for backward compatibility"
            },
            "s12.reports.v1.StartInspectionExportRequest.ExportData": {
                "type": "object",
                "example": {
                    "inspection_id": "9961f8ef-fa73-4e66-bd79-17138f83a5b8",
                    "lang": "en-US",
                    "preference_id": "5e3fe9e1-8b3f-41d2-8e2e-1b6172068bb2",
                    "pages": [
                        "3990d1f7-d9c0-48d8-8e3f-50ba6f164b0f",
                        "45ecc281-0cbf-480d-a66a-a00aae195fd5"
                    ],
                    "media_layout": {
                        "size": "MEDIA_SIZE_SMALL",
                        "resolution": "MEDIA_RESOLUTION_LOW"
                    }
                },
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "The ID of the inspection, this can be an s12ID or a UUID"
                    },
                    "lang": {
                        "type": "string",
                        "description": "Sets the language for the document using language code from ISO-639\nformat. This is backward compatible with v2 request coming through thepub. Please use the lang property in the root level instead."
                    },
                    "preference_id": {
                        "type": "string",
                        "title": "Sets the requested preference"
                    },
                    "filters": {
                        "$ref": "#/components/schemas/s12.reports.v1.Filter"
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "@deprecated: Prefer using the preference_override field instead\nSets the pages need to be hid for the generated document"
                    },
                    "media_layout": {
                        "$ref": "#/components/schemas/s12.reports.v1.MediaLayout"
                    },
                    "preference_override": {
                        "$ref": "#/components/schemas/s12.reports.v1.Preference"
                    }
                },
                "description": "Export data contains all export variant for a single inspection",
                "title": "StartInspectionExportRequest.ExportData",
                "externalDocs": {
                    "url": "https://en.wikipedia.org/wiki/IETF_language_tag"
                },
                "required": [
                    "inspection_id"
                ]
            },
            "s12.reports.v1.StartInspectionExportRequest.InspectionFilter": {
                "type": "object",
                "properties": {
                    "search_text": {
                        "type": "string",
                        "description": "text to search against."
                    },
                    "template_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The ID of the template to be filter with, this can be an s12ID or a UUID"
                    },
                    "template_folders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "template folder ids to filter by"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "the role_id to be filter by"
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "locations (sites) to filter by"
                    },
                    "from_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "earlier date in conducted date range to filter by"
                    },
                    "to_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "later date in conducted date range to filter by"
                    },
                    "from_date_completed": {
                        "type": "string",
                        "format": "date-time",
                        "title": "earlier date in completed date range to filter by"
                    },
                    "to_date_completed": {
                        "type": "string",
                        "format": "date-time",
                        "title": "later date in completed date range to filter by"
                    },
                    "asset_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "asset ids to filter by"
                    },
                    "owned": {
                        "type": "boolean",
                        "title": "filter by inspections owned by user"
                    },
                    "shared": {
                        "type": "boolean",
                        "title": "filter by inspections shared with user"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "filter by archived"
                    },
                    "completed": {
                        "type": "boolean",
                        "description": "Optional. When set to true, inspections that are completed will be included.\nWhen set to false, inspections that are not-completed will be included.\nIf unset, this property is ignored\nThe fields completed, exclude_pending_approvals and inspection_approval_state are used to query the inspection state\nThey are set like this for historical reasons in inspections."
                    }
                }
            },
            "s12.reports.v1.StartInspectionExportRequest.TabularExportSettings": {
                "type": "object",
                "properties": {
                    "show_empty_notes": {
                        "type": "boolean",
                        "title": "This setting determines whether to include a separate column for unpopulated notes field for each inspection question"
                    },
                    "show_empty_timestamps": {
                        "type": "boolean",
                        "title": "This setting determines whether to include a separate column for empty timestamp from each signature / temperature type question"
                    },
                    "show_full_site_hierarchy": {
                        "type": "boolean",
                        "title": "This setting determines whether to include a separate column for all non-defined site hierarchy level"
                    },
                    "show_unanswered_logic_questions": {
                        "type": "boolean",
                        "title": "This setting determines whether to include unanswered logic questions for reports"
                    }
                }
            },
            "s12.reports.v1.StartInspectionExportResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "The S3 bucket url for the generated export file, the url will only be\npopulated when the status is 'DONE'"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportResponse.Status"
                    },
                    "version": {
                        "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportResponse.Version"
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.reports.v1.StartInspectionExportResponse.Info"
                        },
                        "title": "Any additional info that feedback to the calling service"
                    }
                },
                "title": "StartExportResponse represents the result of `StartExport`"
            },
            "s12.reports.v1.StartInspectionExportResponse.Info": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string",
                        "title": "The code for a particular subject"
                    },
                    "details": {
                        "type": "string",
                        "title": "Any additional details for the particular subject"
                    }
                }
            },
            "s12.reports.v1.StartInspectionExportResponse.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_IN_PROGRESS",
                    "STATUS_FAILED",
                    "STATUS_DONE"
                ],
                "default": "STATUS_UNSPECIFIED"
            },
            "s12.reports.v1.StartInspectionExportResponse.Version": {
                "type": "string",
                "enum": [
                    "VERSION_UNSPECIFIED",
                    "VERSION_1",
                    "VERSION_2",
                    "VERSION_3"
                ],
                "default": "VERSION_UNSPECIFIED"
            },
            "s12.resources.v1.ExpiryStatus": {
                "type": "string",
                "enum": [
                    "EXPIRY_STATUS_UNSPECIFIED",
                    "EXPIRY_STATUS_VALID",
                    "EXPIRY_STATUS_EXPIRED",
                    "EXPIRY_STATUS_EXPIRING_SOON"
                ],
                "default": "EXPIRY_STATUS_UNSPECIFIED",
                "description": "The status of a document based on its validity period."
            },
            "s12.resources.v1.ResourceMedia": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.resources.v1.ResourceMediaStatus"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "s12.resources.v1.ResourceMediaStatus": {
                "type": "string",
                "enum": [
                    "RESOURCE_MEDIA_STATUS_UNSPECIFIED",
                    "RESOURCE_MEDIA_STATUS_PENDING",
                    "RESOURCE_MEDIA_STATUS_DONE",
                    "RESOURCE_MEDIA_STATUS_FAILED",
                    "RESOURCE_MEDIA_STATUS_UNSUPPORTED"
                ],
                "default": "RESOURCE_MEDIA_STATUS_UNSPECIFIED"
            },
            "s12.schedules.v1.CreateScheduleItemResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The id of the newly created schedule item"
                    }
                },
                "description": "Result returned from `CreateScheduleItem`",
                "title": "CreateScheduleItemResponse"
            },
            "s12.schedules.v1.DeleteScheduleItemResponse": {
                "type": "object",
                "description": "Result returned from `DeleteScheduleItem`",
                "title": "DeleteScheduleItemResponse"
            },
            "s12.schedules.v1.ListScheduleItemsResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem"
                        },
                        "title": "A list of schedule items"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.\nFor Example: 'MzA='"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of schedule items found"
                    }
                },
                "description": "Result returned from `ListScheduleItems`",
                "title": "ListScheduleItemsResponse"
            },
            "s12.schedules.v1.ScheduleItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the schedule item"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the schedule item"
                    },
                    "must_complete": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.MustComplete"
                    },
                    "can_late_submit": {
                        "type": "boolean",
                        "title": "Can the inspections be started after the due date"
                    },
                    "recurrence": {
                        "type": "string",
                        "description": "[RRule](https://www.textmagic.com/free-tools/rrule-generator) formatted\nrecurrence string. <br> Example: `FREQ=WEEKLY;BYDAY=MO;INTERVAL=1`\nrepresents weekly on Monday."
                    },
                    "start_time": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.StartTime"
                    },
                    "duration": {
                        "type": "string",
                        "description": "ISO8601 duration string, e.g. PT1H. How long inspection can be started\nafter the start_date."
                    },
                    "timezone": {
                        "type": "string",
                        "title": "Timezone the schedule item will appear in"
                    },
                    "from_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When this schedule will begin appearing"
                    },
                    "to_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the schedule will end"
                    },
                    "reminders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Reminder"
                        },
                        "title": "Reminders that will be sent to assignees"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the schedule item was last modified"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the schedule item was created"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Status"
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Entity"
                        },
                        "title": "The users or groups that are assigned to complete the schedule"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Entity"
                    },
                    "document": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Document"
                    },
                    "location_id": {
                        "type": "string",
                        "title": "The location assigned to this schedule item"
                    },
                    "next_occurrence": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.NextOccurrence"
                    },
                    "site_based_assignment_enabled": {
                        "type": "boolean",
                        "description": "Allows for site based assignments when enabled."
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "The asset assigned to this schedule item"
                    }
                },
                "description": "ScheduleItem represents a the rule for a reoccuring schedule event",
                "title": "ScheduleItem"
            },
            "s12.schedules.v1.ScheduleItem.Document": {
                "type": "object",
                "example": {
                    "id": "0e7cff72-f919-4c84-aa37-e847b306423e",
                    "type": "TEMPLATE",
                    "name": "Joe's JSA Template"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The unique identifier for the document"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.DocumentType"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the document",
                        "readOnly": true
                    }
                },
                "description": "Document represents the document in a schedule",
                "title": "ScheduleItem.Document",
                "required": [
                    "id",
                    "type"
                ]
            },
            "s12.schedules.v1.ScheduleItem.DocumentType": {
                "type": "string",
                "enum": [
                    "DOCUMENT_TYPE_UNSPECIFIED",
                    "TEMPLATE"
                ],
                "default": "DOCUMENT_TYPE_UNSPECIFIED",
                "description": "- DOCUMENT_TYPE_UNSPECIFIED: Unspecified document type\n - TEMPLATE: Inspection Template",
                "title": "DocumentType is the type of document (e.g. template)"
            },
            "s12.schedules.v1.ScheduleItem.Entity": {
                "type": "object",
                "example": {
                    "id": "0e7cff72-f919-4c84-aa37-e847b306423e",
                    "type": "USER",
                    "name": "Joe Bloggs"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The unique identifier for the entity"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.EntityType"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the entity",
                        "readOnly": true
                    }
                },
                "description": "Entity represent the entity in a schedule, either creator or assignee",
                "title": "ScheduleItem.Entity",
                "required": [
                    "id",
                    "type"
                ]
            },
            "s12.schedules.v1.ScheduleItem.EntityType": {
                "type": "string",
                "enum": [
                    "ENTITY_TYPE_UNSPECIFIED",
                    "USER",
                    "ROLE"
                ],
                "default": "ENTITY_TYPE_UNSPECIFIED",
                "description": "- ENTITY_TYPE_UNSPECIFIED: Unspecified entity type\n - USER: User\n - ROLE: Role",
                "title": "EntityType is the type of entity, either a user or a role"
            },
            "s12.schedules.v1.ScheduleItem.MustComplete": {
                "type": "string",
                "enum": [
                    "MUST_COMPLETE_UNSPECIFIED",
                    "ONE",
                    "ALL"
                ],
                "default": "MUST_COMPLETE_UNSPECIFIED",
                "description": "- MUST_COMPLETE_UNSPECIFIED: Unspecified must complete value\n - ONE: Schedule must be completed by one assignee\n - ALL: Schedule must be completed by all assignees",
                "title": "MustComplete is whom must complete a given schedule, either one assignee or\nall assignees"
            },
            "s12.schedules.v1.ScheduleItem.NextOccurrence": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The timestamp in the Internet Date-Time format when the next occurrence will occur"
                    },
                    "due": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The timestamp in the Internet Date-Time format when the next occurrence is due by"
                    }
                },
                "description": "NextOccurrence is the next time the schedule item will occur for assignees",
                "title": "ScheduleItem.NextOccurrence"
            },
            "s12.schedules.v1.ScheduleItem.Reminder": {
                "type": "object",
                "example": {
                    "event": "START",
                    "duration": "PT5M"
                },
                "properties": {
                    "event": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.ReminderEventType"
                    },
                    "duration": {
                        "type": "string",
                        "description": "ISO8601 duration string, e.g. PT1H. How long before the event to remind\nthe assignees."
                    }
                },
                "description": "Reminder represents a reminder for a schedule item",
                "title": "ScheduleItem.Reminder",
                "required": [
                    "event",
                    "duration"
                ]
            },
            "s12.schedules.v1.ScheduleItem.ReminderEventType": {
                "type": "string",
                "enum": [
                    "REMINDER_EVENT_TYPE_UNSPECIFIED",
                    "START",
                    "DUE"
                ],
                "default": "REMINDER_EVENT_TYPE_UNSPECIFIED",
                "description": "- REMINDER_EVENT_TYPE_UNSPECIFIED: Unspecified reminder event type\n - START: Default value - start of the schedule\n - DUE: End of the schedule",
                "title": "ReminderEventType is the type of reminder event"
            },
            "s12.schedules.v1.ScheduleItem.StartTime": {
                "type": "object",
                "example": {
                    "hour": 15,
                    "minute": 56
                },
                "properties": {
                    "hour": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The hour of the day to start the schedule"
                    },
                    "minute": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The minute of the day to start the schedule"
                    }
                },
                "description": "StartTime represents the start time of a schedule item",
                "title": "ScheduleItem.StartTime",
                "required": [
                    "hour",
                    "minute"
                ]
            },
            "s12.schedules.v1.ScheduleItem.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "ACTIVE",
                    "PAUSED",
                    "NO_TEMPLATE",
                    "NO_ASSIGNEE",
                    "FINISHED",
                    "SUBSCRIPTION_INACTIVE",
                    "NO_SITE"
                ],
                "default": "STATUS_UNSPECIFIED",
                "description": "- STATUS_UNSPECIFIED: Unspecified status value\n - ACTIVE: Default value - schedule item is still active\n - PAUSED: Schedule has been paused e.g. manually paused/org frozen\n - NO_TEMPLATE: The template used for this schedule item has been deleted/archived\n - NO_ASSIGNEE: No valid assignees exist for this schedule item anymore\n - FINISHED: The schedule item has hit its end date or count limit and is now complete\n - SUBSCRIPTION_INACTIVE: User/org subscription is inactive\n - NO_SITE: The site used for this schedule has been removed",
                "title": "Status is the current status of the schedule item"
            },
            "s12.schedules.v1.UpdateScheduleItem": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description of the schedule item"
                    },
                    "must_complete": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.MustComplete"
                    },
                    "can_late_submit": {
                        "type": "boolean",
                        "title": "Can the inspections be started after the due date"
                    },
                    "recurrence": {
                        "type": "string",
                        "description": "[RRule](https://www.textmagic.com/free-tools/rrule-generator) formatted\nrecurrence string. <br> Example: `FREQ=WEEKLY;BYDAY=MO;INTERVAL=1`\nrepresents weekly on Monday."
                    },
                    "start_time": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.StartTime"
                    },
                    "duration": {
                        "type": "string",
                        "description": "ISO8601 duration string, e.g. PT1H. How long inspection can be started\nafter the start_date."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "@deprecated, this field is not being used to dictate the timezone of the schedule item.\nThe timezone of the schedule item is based on the authenticated user's profile timezone."
                    },
                    "from_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When this schedule will begin appearing"
                    },
                    "to_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the schedule will end"
                    },
                    "reminders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Reminder"
                        },
                        "title": "Reminders that will be sent to assignees"
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Entity"
                        },
                        "title": "The users or groups that are assigned to complete the schedule"
                    },
                    "document": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Document"
                    },
                    "location_id": {
                        "type": "string",
                        "title": "The location assigned to this schedule item"
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Status"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.Entity"
                    },
                    "next_occurrence": {
                        "$ref": "#/components/schemas/s12.schedules.v1.ScheduleItem.NextOccurrence"
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "The asset assigned to this schedule item"
                    }
                },
                "description": "The parameters for creating or updating a schedule item",
                "title": "UpdateScheduleItem",
                "required": [
                    "description",
                    "must_complete",
                    "can_late_submit",
                    "recurrence",
                    "start_time",
                    "duration",
                    "from_date",
                    "assignees",
                    "document"
                ]
            },
            "s12.schedules.v1.UpdateScheduleItemResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The identifier of the updated schedule item"
                    }
                },
                "description": "Result returned from `UpdateScheduleItem`",
                "title": "UpdateScheduleItemResponse"
            },
            "s12.sensors.v1.CarbonDioxideReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.CarbonDioxideReadingType.CarbonDioxideReadingTypeUnit"
                    }
                },
                "description": "CarbonDioxideReadingType describes a carbon dioxide (CO2) reading type."
            },
            "s12.sensors.v1.CarbonDioxideReadingType.CarbonDioxideReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "CARBON_DIOXIDE_READING_TYPE_UNIT_UNSPECIFIED",
                    "CARBON_DIOXIDE_READING_TYPE_UNIT_PARTS_PER_MILLION"
                ],
                "default": "CARBON_DIOXIDE_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - CARBON_DIOXIDE_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - CARBON_DIOXIDE_READING_TYPE_UNIT_PARTS_PER_MILLION: Parts Per Million unit."
            },
            "s12.sensors.v1.CarbonMonoxideReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.CarbonMonoxideReadingType.CarbonMonoxideReadingTypeUnit"
                    }
                },
                "description": "CarbonMonoxideReadingType describes a carbon monoxide (CO) reading type."
            },
            "s12.sensors.v1.CarbonMonoxideReadingType.CarbonMonoxideReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "CARBON_MONOXIDE_READING_TYPE_UNIT_UNSPECIFIED",
                    "CARBON_MONOXIDE_READING_TYPE_UNIT_PARTS_PER_MILLION"
                ],
                "default": "CARBON_MONOXIDE_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - CARBON_MONOXIDE_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - CARBON_MONOXIDE_READING_TYPE_UNIT_PARTS_PER_MILLION: Parts Per Million unit."
            },
            "s12.sensors.v1.DeprovisionSensorResponse": {
                "type": "object",
                "description": "DeprovisionSensorResponse is the response for the endpoint `DeprovisionSensor`."
            },
            "s12.sensors.v1.EngineOnReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "boolean",
                        "description": "Value of the reading.\nTrue if the engine is on, false if the engine is off."
                    }
                },
                "description": "EngineOnReadingType describes an engine on/off reading type."
            },
            "s12.sensors.v1.GeoPositionReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    }
                },
                "description": "GeoPositionReadingType describes geographic coordinates."
            },
            "s12.sensors.v1.GetSensorIdResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SensorId"
                    }
                },
                "description": "Result returned from `GetSensorId`",
                "title": "GetSensorIdResponse"
            },
            "s12.sensors.v1.GetSensorLatestReadingsResponse": {
                "type": "object",
                "properties": {
                    "readings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.sensors.v1.LatestSensorReading"
                        },
                        "description": "The latest readings associated with this device."
                    }
                },
                "description": "Result returned from `GetSensorLatestReadings`",
                "title": "GetSensorLatestReadingsResponse"
            },
            "s12.sensors.v1.GetSensorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SensorId"
                    },
                    "provisioned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time at which the sensor was provisioned on UTC."
                    },
                    "asset_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The asset IDs associated with this sensor."
                    },
                    "sensor_name": {
                        "type": "string",
                        "description": "The sensor name."
                    },
                    "sensor_timezone": {
                        "type": "string",
                        "description": "IANA TZ Database timezone for the sensor."
                    },
                    "sensor_location_name": {
                        "type": "string",
                        "description": "The location name for the sensor."
                    }
                },
                "description": "Result returned from `GetSensor`",
                "title": "GetSensorResponse"
            },
            "s12.sensors.v1.HeadingReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.HeadingReadingType.HeadingReadingTypeUnit"
                    }
                },
                "description": "HeadingReadingType describes the compass direction in which a craft or vehicle is pointed."
            },
            "s12.sensors.v1.HeadingReadingType.HeadingReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "HEADING_READING_TYPE_UNIT_UNSPECIFIED",
                    "HEADING_READING_TYPE_UNIT_DEGREES"
                ],
                "default": "HEADING_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - HEADING_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - HEADING_READING_TYPE_UNIT_DEGREES: A heading measured in degrees. This unit describes an angle in a circular coordinate system,\nwhere 0°, 90°, 180° and 270° represent North, South, East and West respectively."
            },
            "s12.sensors.v1.IgnitionOnReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "boolean",
                        "description": "Value of the reading.\nTrue if the ignition is on, false if the ignition is off."
                    }
                },
                "description": "IgnitionOnReadingType describes an ignition on/off reading type."
            },
            "s12.sensors.v1.IngestSensorReadingsRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SensorId"
                    },
                    "readings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.sensors.v1.SensorReading"
                        },
                        "description": "The readings to be ingested."
                    }
                },
                "description": "The parameters for `IngestSensorReadingsRequest`",
                "title": "IngestSensorReadingsRequest"
            },
            "s12.sensors.v1.IngestSensorReadingsResponse": {
                "type": "object",
                "title": "IngestSensorReadingsResponse is the response for the endpoint `IngestSensorReadings`"
            },
            "s12.sensors.v1.LatestSensorReading": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SensorId"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the reading."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the reading, eg: \"Relative Humidity\"."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the reading, eg: \"relative_humidity\"."
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the reading, eg: \"90\". The value is rounded to 2 decimal places."
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of the reading, eg: \"Percentage\". The unit might be converted from\nthe original unit to a corresponding standardised unit already supported on\nSafetyCulture App for certain reading types.\nFor example, for the reading type \"Odometer\", if the unit is \"Meters\", it\nwill be converted to \"Kilometers\"."
                    },
                    "raw_value": {
                        "type": "string",
                        "description": "The original value of the reading without any rounding."
                    },
                    "raw_unit": {
                        "type": "string",
                        "description": "The original unit of the reading without any conversion."
                    },
                    "alias": {
                        "type": "string",
                        "description": "Optional. A human-readable name for the reading specified by the user, e.g. 'Mileage', 'Usage'."
                    }
                },
                "description": "LatestSensorReading represents the latest sensor reading."
            },
            "s12.sensors.v1.ListSensorsRequest": {
                "type": "object",
                "properties": {
                    "page_token": {
                        "type": "string",
                        "description": "OPTIONAL. The value of next_page_token from a previous response. If\nspecified, the API will return the next batch of results following the\nprevious list sensors request."
                    },
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "OPTIONAL. The number of sensors to return. By default, each request\nreturns 50 sensors. You can specify a page_size value between 1 to 100."
                    }
                },
                "description": "The parameters for `ListSensorsRequest`",
                "title": "ListSensorsRequest"
            },
            "s12.sensors.v1.ListSensorsResponse": {
                "type": "object",
                "properties": {
                    "sensors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.sensors.v1.SensorMetadata"
                        },
                        "description": "The list of sensors."
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "The value of next_page_token to be used in the next list sensors request."
                    }
                },
                "description": "Result returned from `ListSensors`",
                "title": "ListSensorsResponse"
            },
            "s12.sensors.v1.MovingReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "boolean",
                        "description": "Value of the reading.\nTrue if it is moving, false if it is not moving."
                    }
                },
                "description": "MovingReadingType describes a moving reading type."
            },
            "s12.sensors.v1.OdometerReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.OdometerReadingType.OdometerReadingTypeUnit"
                    }
                },
                "description": "OdometerReadingType describes an odometer reading type."
            },
            "s12.sensors.v1.OdometerReadingType.OdometerReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "ODOMETER_READING_TYPE_UNIT_UNSPECIFIED",
                    "ODOMETER_READING_TYPE_UNIT_KILOMETER",
                    "ODOMETER_READING_TYPE_UNIT_MILE",
                    "ODOMETER_READING_TYPE_UNIT_METER"
                ],
                "default": "ODOMETER_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - ODOMETER_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - ODOMETER_READING_TYPE_UNIT_KILOMETER: Kilometer unit.\n - ODOMETER_READING_TYPE_UNIT_MILE: Mile unit.\n - ODOMETER_READING_TYPE_UNIT_METER: Meter unit."
            },
            "s12.sensors.v1.ProvisionSensorRequest": {
                "type": "object",
                "properties": {
                    "device_id": {
                        "type": "string",
                        "description": "The id of the device that is being provisioned."
                    },
                    "sensor_name": {
                        "type": "string",
                        "description": "The sensor name."
                    },
                    "sensor_timezone": {
                        "type": "string",
                        "description": "IANA TZ Database timezone for the sensor."
                    },
                    "sensor_location_name": {
                        "type": "string",
                        "description": "The location name for the sensor."
                    }
                },
                "description": "The parameters for `ProvisionSensorRequest`",
                "title": "ProvisionSensorRequest"
            },
            "s12.sensors.v1.ProvisionSensorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SensorId"
                    }
                },
                "description": "Result returned from `ProvisionSensor`",
                "title": "ProvisionSensorResponse"
            },
            "s12.sensors.v1.ReceivedSignalStrengthIndicatorReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.ReceivedSignalStrengthIndicatorReadingType.ReceivedSignalStrengthIndicatorReadingTypeUnit"
                    }
                },
                "description": "ReceivedSignalStrengthIndicatorReadingType describes a received signal\nstrength indicator (RSSI) reading type."
            },
            "s12.sensors.v1.ReceivedSignalStrengthIndicatorReadingType.ReceivedSignalStrengthIndicatorReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "RECEIVED_SIGNAL_STRENGTH_INDICATOR_READING_TYPE_UNIT_UNSPECIFIED",
                    "RECEIVED_SIGNAL_STRENGTH_INDICATOR_READING_TYPE_UNIT_DECIBEL"
                ],
                "default": "RECEIVED_SIGNAL_STRENGTH_INDICATOR_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - RECEIVED_SIGNAL_STRENGTH_INDICATOR_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - RECEIVED_SIGNAL_STRENGTH_INDICATOR_READING_TYPE_UNIT_DECIBEL: Decibel unit."
            },
            "s12.sensors.v1.RelativeHumidityReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.RelativeHumidityReadingType.RelativeHumidityReadingTypeUnit"
                    }
                },
                "description": "RelativeHumidityReadingType describes a relative humidity reading type."
            },
            "s12.sensors.v1.RelativeHumidityReadingType.RelativeHumidityReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "RELATIVE_HUMIDITY_READING_TYPE_UNIT_UNSPECIFIED",
                    "RELATIVE_HUMIDITY_READING_TYPE_UNIT_PERCENTAGE"
                ],
                "default": "RELATIVE_HUMIDITY_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - RELATIVE_HUMIDITY_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - RELATIVE_HUMIDITY_READING_TYPE_UNIT_PERCENTAGE: Percentage unit."
            },
            "s12.sensors.v1.RunningTimeReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.RunningTimeReadingType.RunningTimeReadingTypeUnit"
                    }
                },
                "description": "RunningTimeReadingType describes an operating time reading type."
            },
            "s12.sensors.v1.RunningTimeReadingType.RunningTimeReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "RUNNING_TIME_READING_TYPE_UNIT_UNSPECIFIED",
                    "RUNNING_TIME_READING_TYPE_UNIT_HOUR",
                    "RUNNING_TIME_READING_TYPE_UNIT_MINUTE",
                    "RUNNING_TIME_READING_TYPE_UNIT_SECOND"
                ],
                "default": "RUNNING_TIME_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - RUNNING_TIME_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - RUNNING_TIME_READING_TYPE_UNIT_HOUR: Hour unit.\n - RUNNING_TIME_READING_TYPE_UNIT_MINUTE: Minute unit.\n - RUNNING_TIME_READING_TYPE_UNIT_SECOND: Second unit."
            },
            "s12.sensors.v1.SensorId": {
                "type": "object",
                "properties": {
                    "source_name": {
                        "type": "string",
                        "description": "The provider/origin of the sensor data."
                    },
                    "source_id": {
                        "type": "string",
                        "description": "An ID for the sensor, specified by the provider/origin."
                    }
                },
                "description": "SensorId represent a source name/source ID pairing that uniquely\nidentify a hardware sensor."
            },
            "s12.sensors.v1.SensorMetadata": {
                "type": "object",
                "properties": {
                    "source_name": {
                        "type": "string",
                        "description": "The provider/origin of the sensor data."
                    },
                    "source_id": {
                        "type": "string",
                        "description": "An ID for the sensor, specified by the provider/origin."
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "The asset's id the sensor is associated with."
                    },
                    "asset_name": {
                        "type": "string",
                        "description": "The asset's name the user has assigned the sensor with."
                    },
                    "asset_timezone": {
                        "type": "string",
                        "description": "The timezone the sensor is operating in."
                    },
                    "location_name": {
                        "type": "string",
                        "description": "The user created location label associated with the sensor."
                    }
                },
                "description": "SensorMetadata represents the metadata associated with a single hardware sensor."
            },
            "s12.sensors.v1.SensorReading": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the reading."
                    },
                    "temperature": {
                        "$ref": "#/components/schemas/s12.sensors.v1.TemperatureReadingType"
                    },
                    "relative_humidity": {
                        "$ref": "#/components/schemas/s12.sensors.v1.RelativeHumidityReadingType"
                    },
                    "carbon_monoxide": {
                        "$ref": "#/components/schemas/s12.sensors.v1.CarbonMonoxideReadingType"
                    },
                    "carbon_dioxide": {
                        "$ref": "#/components/schemas/s12.sensors.v1.CarbonDioxideReadingType"
                    },
                    "received_signal_strength_indicator": {
                        "$ref": "#/components/schemas/s12.sensors.v1.ReceivedSignalStrengthIndicatorReadingType"
                    },
                    "signal_to_noise_ratio": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SignalToNoiseRatioReadingType"
                    },
                    "geo_position": {
                        "$ref": "#/components/schemas/s12.sensors.v1.GeoPositionReadingType"
                    },
                    "odometer": {
                        "$ref": "#/components/schemas/s12.sensors.v1.OdometerReadingType"
                    },
                    "running_time": {
                        "$ref": "#/components/schemas/s12.sensors.v1.RunningTimeReadingType"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SpeedReadingType"
                    },
                    "engine_on": {
                        "$ref": "#/components/schemas/s12.sensors.v1.EngineOnReadingType"
                    },
                    "moving": {
                        "$ref": "#/components/schemas/s12.sensors.v1.MovingReadingType"
                    },
                    "ignition_on": {
                        "$ref": "#/components/schemas/s12.sensors.v1.IgnitionOnReadingType"
                    },
                    "heading": {
                        "$ref": "#/components/schemas/s12.sensors.v1.HeadingReadingType"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field is to allow specify the name of the reading. If not present, the\nreading name will be inferred from the type, eg: \"Relative Humidity\"."
                    }
                },
                "description": "SensorReading represents a single sensor reading."
            },
            "s12.sensors.v1.SignalToNoiseRatioReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SignalToNoiseRatioReadingType.SignalToNoiseRatioReadingTypeUnit"
                    }
                },
                "description": "SignalToNoiseRatioReadingType describes a signal-to-noise ratio (SNR) reading type."
            },
            "s12.sensors.v1.SignalToNoiseRatioReadingType.SignalToNoiseRatioReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "SIGNAL_TO_NOISE_RATIO_READING_TYPE_UNIT_UNSPECIFIED",
                    "SIGNAL_TO_NOISE_RATIO_READING_TYPE_UNIT_DECIBEL"
                ],
                "default": "SIGNAL_TO_NOISE_RATIO_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - SIGNAL_TO_NOISE_RATIO_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - SIGNAL_TO_NOISE_RATIO_READING_TYPE_UNIT_DECIBEL: Decibel unit."
            },
            "s12.sensors.v1.SpeedReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.SpeedReadingType.SpeedReadingTypeUnit"
                    }
                },
                "description": "SpeedReadingType describes a speed reading type."
            },
            "s12.sensors.v1.SpeedReadingType.SpeedReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "SPEED_READING_TYPE_UNIT_UNSPECIFIED",
                    "SPEED_READING_TYPE_UNIT_KILOMETERS_PER_HOUR",
                    "SPEED_READING_TYPE_UNIT_MILES_PER_HOUR"
                ],
                "default": "SPEED_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - SPEED_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - SPEED_READING_TYPE_UNIT_KILOMETERS_PER_HOUR: Kilometers per hour unit.\n - SPEED_READING_TYPE_UNIT_MILES_PER_HOUR: Miles per hour unit."
            },
            "s12.sensors.v1.TemperatureReadingType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Value of the reading."
                    },
                    "unit": {
                        "$ref": "#/components/schemas/s12.sensors.v1.TemperatureReadingType.TemperatureReadingTypeUnit"
                    }
                },
                "description": "TemperatureReadingType describes a temperature reading type."
            },
            "s12.sensors.v1.TemperatureReadingType.TemperatureReadingTypeUnit": {
                "type": "string",
                "enum": [
                    "TEMPERATURE_READING_TYPE_UNIT_UNSPECIFIED",
                    "TEMPERATURE_READING_TYPE_UNIT_CELSIUS",
                    "TEMPERATURE_READING_TYPE_UNIT_FAHRENHEIT",
                    "TEMPERATURE_READING_TYPE_UNIT_MILLIDEGREE_CELSIUS"
                ],
                "default": "TEMPERATURE_READING_TYPE_UNIT_UNSPECIFIED",
                "description": " - TEMPERATURE_READING_TYPE_UNIT_UNSPECIFIED: Unit unspecified.\n - TEMPERATURE_READING_TYPE_UNIT_CELSIUS: Celsius unit.\n - TEMPERATURE_READING_TYPE_UNIT_FAHRENHEIT: Fahrenheit unit.\n - TEMPERATURE_READING_TYPE_UNIT_MILLIDEGREE_CELSIUS: Millidegree Celsius unit."
            },
            "s12.tasks.v1.Action": {
                "type": "object",
                "properties": {
                    "task": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task"
                    },
                    "custom_field_and_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.TaskCustomFieldAndValue"
                        },
                        "title": "Custom fields and their values (if any) belonging to the action"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Type"
                    }
                },
                "title": "Action represents a stand-alone action that has been created"
            },
            "s12.tasks.v1.ActionLabel": {
                "type": "object",
                "properties": {
                    "label_id": {
                        "type": "string",
                        "description": "(Required) The UUID of the action label.\nFor example, \"73361b5d-407a-424e-b20e-c932bc41706c\"."
                    },
                    "label_name": {
                        "type": "string",
                        "description": "(Required) The name of the action label."
                    }
                },
                "description": "ActionLabel is the label that's selected for an action."
            },
            "s12.tasks.v1.ActionResponse": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Action"
                    },
                    "read_only": {
                        "type": "boolean",
                        "title": "If action should be read-only"
                    }
                },
                "title": "ActionResponse represents the result of `GetAction`"
            },
            "s12.tasks.v1.ActionSharedLink": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "The URL that can be given to an unauthenticated user to give them access"
                    }
                }
            },
            "s12.tasks.v1.ActionsResponse": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Action"
                        },
                        "title": "List of Actions"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.\nFor Example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "@deprecated. Use ActionsService.GetOrgActionCount instead.\nTotal number of actions found"
                    }
                },
                "title": "ActionsResponse represents the result of `GetActions`"
            },
            "s12.tasks.v1.ActionsService.UpdateActionLabelsBody": {
                "type": "object",
                "properties": {
                    "label_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of label IDs to associate with the action. Multiple labels can be added.\nNote: Sending an empty list for `label_ids` will remove all labels currently associated with the action."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time this label was modified."
                    }
                },
                "title": "UpdateActionLabelsRequest updates the label associated with an action"
            },
            "s12.tasks.v1.ActionsService.UpdateAssetBody": {
                "type": "object",
                "properties": {
                    "asset_id": {
                        "$ref": "#/components/schemas/s12.common.UUIDValue"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateAssetRequest represents the parameter to update the asset\nassociated to a task"
            },
            "s12.tasks.v1.ActionsService.UpdateAssigneesBody": {
                "type": "object",
                "properties": {
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "Required. The assignees to be assigned to the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The UTC time and date the modification took place."
                    }
                },
                "title": "UpdateAssigneesRequest represents the parameters for\n`UpdateAssignees`",
                "required": [
                    "assignees"
                ]
            },
            "s12.tasks.v1.ActionsService.UpdateDescriptionBody": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Required. The new description for the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateDescriptionRequest represents the parameters to update the description\nof the task"
            },
            "s12.tasks.v1.ActionsService.UpdateDueAtBody": {
                "type": "object",
                "properties": {
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. Date/time this task is due.\nIf this is empty, \"due at\" will be unset."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "description": "UpdateDueAtRequest represents the parameter to update the due date of the\ntask."
            },
            "s12.tasks.v1.ActionsService.UpdatePriorityBody": {
                "type": "object",
                "properties": {
                    "priority_id": {
                        "type": "string",
                        "description": "Required. The new priority UUID for the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdatePriorityRequest represents the parameters to update the priority of the\ntask",
                "required": [
                    "priority_id"
                ]
            },
            "s12.tasks.v1.ActionsService.UpdateSiteBody": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "$ref": "#/components/schemas/s12.common.UUIDValue"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateSiteRequest represents the parameter to update the site (folder)\nassociated to a task"
            },
            "s12.tasks.v1.ActionsService.UpdateStatusBody": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "description": "Required. The ID of the status you're updating the action or issue to.\nAn issue can be in an \"Open\" or \"Resolved\" status, where each status is represented by hardcoded UUID values.\nIssue statuses:\n- Open: `547ed646-5e34-4732-bb54-a199d304368a`.\n- Resolved: `450484b1-56cd-4784-9b49-a3cf97d0c0ad`.\n\nAn action can be in a \"To do\", \"In progress\", \"Complete\", or \"Can't do\" status, where each status is represented by hardcoded UUID values.\nAction statuses:\n- To do: `17e793a1-26a3-4ecd-99ca-f38ecc6eaa2e`.\n- In progress: `20ce0cb1-387a-47d4-8c34-bc6fd3be0e27`.\n- Complete: `7223d809-553e-4714-a038-62dc98f3fbf3`.\n- Can't do: `06308884-41c2-4ee0-9da7-5676647d3d75`."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The UTC time and date the modification took place."
                    }
                },
                "description": "UpdateStatusRequest represents the parameters for `UpdateStatus`.",
                "required": [
                    "status_id"
                ]
            },
            "s12.tasks.v1.ActionsService.UpdateTitleBody": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Required. The new title for the task.\nThe title must be between 0 and 255 characters."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "description": "UpdateTitleRequest represents the parameters to update the title of the task."
            },
            "s12.tasks.v1.AddCommentRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "description": "Required. The UUID for the task the comment is being added to."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Required. The content of the comment."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. Date/time this comment was added."
                    },
                    "event_id": {
                        "type": "string",
                        "description": "Optional. The unique identifier for the event. This will be auto-generated\nif omitted."
                    }
                },
                "title": "Represents the parameters to `AddComment`",
                "required": [
                    "task_id",
                    "comment"
                ]
            },
            "s12.tasks.v1.AlertEventLevel": {
                "type": "string",
                "enum": [
                    "OK",
                    "INFO",
                    "WARN",
                    "CRITICAL"
                ],
                "default": "UNKNOWN_LEVEL",
                "description": "- OK: `OK` level indicates that device metric became healthy\n - INFO: `INFO` level indicates that the first alert event sent\n - WARN: `WARN` level indicates that the second alert event sent\n - CRITICAL: `CRITICAL` level indicates that the third alert event sent",
                "title": "Alert event level represents a level of importance of the alert event"
            },
            "s12.tasks.v1.Answer": {
                "type": "object",
                "properties": {
                    "answer_text": {
                        "$ref": "#/components/schemas/s12.tasks.v1.AnswerText"
                    },
                    "answer_multiple_choice_option": {
                        "$ref": "#/components/schemas/s12.tasks.v1.MultipleChoiceOption"
                    },
                    "answer_id": {
                        "type": "string",
                        "description": "The ID of the answer."
                    },
                    "answered_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the question was answered."
                    }
                },
                "description": "Answer contains information about the answer to a custom question."
            },
            "s12.tasks.v1.AnswerText": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "The text that answers the question."
                    }
                },
                "description": "A type of answer for a custom question containing text data."
            },
            "s12.tasks.v1.Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of a category."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of a category. This can be a default name or one that is\ncustomized in your organization."
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of a category. This field's value is the same as the value for\n`key`."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of a category. This is unused, and is hardcoded to an empty\nstring, `\"\"`."
                    },
                    "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The sorting order of a list of categories. This is unused, and is hardcoded\nas `0`."
                    },
                    "is_visible": {
                        "type": "boolean",
                        "description": "The indicator for whether a category is visible or not for an organization\non the web app and the mobile app."
                    },
                    "use_category_access_whitelist": {
                        "type": "boolean",
                        "description": "The indicator for whether a category's issues can be accessed by anyone\nin your organization or not. If this is `false` for a category, then that\ncategory's issues can only be accessed by creators and assignees."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Item"
                        },
                        "title": "List of all items to be used in the category"
                    },
                    "notification_detail": {
                        "$ref": "#/components/schemas/s12.tasks.v1.CategoryNotificationDetail"
                    },
                    "linked_template_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of template ids linked to this category."
                    },
                    "visibility_summary": {
                        "$ref": "#/components/schemas/s12.tasks.v1.CategoryVisibilitySummary"
                    },
                    "user_access_as_reporter": {
                        "$ref": "#/components/schemas/s12.tasks.v1.CategoryUserAccessAsReporter"
                    }
                },
                "description": "A category is used to classify an issue.\nFor example, you can filter issues by category for analytics, or give\nusers or groups access to issues from a category."
            },
            "s12.tasks.v1.CategoryNotificationDetail": {
                "type": "string",
                "enum": [
                    "CATEGORY_NOTIFICATION_DETAIL_UNSPECIFIED",
                    "CATEGORY_NOTIFICATION_DETAIL_PRIVATE",
                    "CATEGORY_NOTIFICATION_DETAIL_SUMMARY",
                    "CATEGORY_NOTIFICATION_DETAIL_FULL"
                ],
                "default": "CATEGORY_NOTIFICATION_DETAIL_UNSPECIFIED",
                "description": "CategoryNotificationDetail represents the different level of detail for category notifications.\n\n - CATEGORY_NOTIFICATION_DETAIL_UNSPECIFIED: CATEGORY_NOTIFICATION_DETAIL_UNSPECIFIED is the default value and should not be used.\n - CATEGORY_NOTIFICATION_DETAIL_PRIVATE: CATEGORY_NOTIFICATION_DETAIL_PRIVATE notifications will be restricted to public metadata.\n - CATEGORY_NOTIFICATION_DETAIL_SUMMARY: CATEGORY_NOTIFICATION_DETAIL_SUMMARY notifications will include public and private metadata.\n - CATEGORY_NOTIFICATION_DETAIL_FULL: CATEGORY_NOTIFICATION_DETAIL_FULL will include all metadata and detailed responses."
            },
            "s12.tasks.v1.CategoryUserAccessAsReporter": {
                "type": "string",
                "enum": [
                    "CATEGORY_USER_ACCESS_AS_REPORTER_UNSPECIFIED",
                    "CATEGORY_USER_ACCESS_AS_REPORTER_ALWAYS",
                    "CATEGORY_USER_ACCESS_AS_REPORTER_NEVER",
                    "CATEGORY_USER_ACCESS_AS_REPORTER_WHEN_SITE_MEMBER"
                ],
                "default": "CATEGORY_USER_ACCESS_AS_REPORTER_UNSPECIFIED",
                "title": "- CATEGORY_USER_ACCESS_AS_REPORTER_UNSPECIFIED: CATEGORY_USER_ACCESS_AS_REPORTER_UNSPECIFIED is the default value and should not be used\n - CATEGORY_USER_ACCESS_AS_REPORTER_ALWAYS: CATEGORY_USER_ACCESS_AS_REPORTER_ALWAYS the user will always gain access to issues they report\n - CATEGORY_USER_ACCESS_AS_REPORTER_NEVER: CATEGORY_USER_ACCESS_AS_REPORTER_NEVER the user will never gain access to issues they report\n - CATEGORY_USER_ACCESS_AS_REPORTER_WHEN_SITE_MEMBER: CATEGORY_USER_ACCESS_AS_REPORTER_WHEN_SITE_MEMBER the user will gain access to issues they report\nwhen they have membership to the site that the issue has been raised at"
            },
            "s12.tasks.v1.CategoryVisibilitySummary": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users that are the category is directly visible to"
                    },
                    "groups": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of groups that the category is directly visible to"
                    },
                    "sites": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of sites that the category is directly visible to"
                    }
                },
                "title": "CategoryVisibilitySummary represents a summary of the number of entities that the category is visible for"
            },
            "s12.tasks.v1.CollaboratorRole": {
                "type": "string",
                "enum": [
                    "ASSIGNEE",
                    "CREATOR"
                ],
                "default": "COLLABORATOR_ROLE_NOT_SET",
                "description": "- ASSIGNEE: The collaborator has been assigned to a task.\n - CREATOR: The collaborator has created the task.",
                "title": "The role of the collaborator in relation to a task"
            },
            "s12.tasks.v1.CollaboratorType": {
                "type": "string",
                "enum": [
                    "USER",
                    "GROUP",
                    "EXTERNAL_USER",
                    "CONTRIBUTOR"
                ],
                "default": "COLLABORATOR_TYPE_NOT_SET",
                "description": "- USER: The collaborator is an internal user.\n - GROUP: The collaborator is a group.\n - EXTERNAL_USER: The collaborator is an external user.\nThis happens when a task is assigned to an email address.\n - CONTRIBUTOR: The collaborator is a contributor.\nA contributor is an individual who raises a task anonymously. For example,\ncreating an incident through the incident QR code functionality.",
                "title": "The type of the collaborator"
            },
            "s12.tasks.v1.CreateActionRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "description": "The unique identifier of the action\nIf not provided, UUID will be generated server side."
                    },
                    "title": {
                        "type": "string",
                        "description": "Required. Title of the action\nTitle is limited to only 255 characters max."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the action (maximum 500 characters)."
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "The collaborators involved into this action."
                    },
                    "priority_id": {
                        "type": "string",
                        "description": "ID of the action's priority\nIf not set, this action will be stored with the default priority(none)."
                    },
                    "status_id": {
                        "type": "string",
                        "description": "ID of the action's status\nIf not set, this action will be stored with the default status(to do)."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time this action was created."
                    },
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this action is due"
                    },
                    "inspection_id": {
                        "type": "string",
                        "description": "ID of the inspection the action belongs to\nIf not set, this action is a standalone action and the inspection ID will\nbe null."
                    },
                    "inspection_item_id": {
                        "type": "string",
                        "title": "ID of the item in the inspection associated with the action"
                    },
                    "template_id": {
                        "type": "string",
                        "description": "If a template ID is provided then an inspection ID must be\nprovided. If not set, this action is a standalone action and the template\nID will be null."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "ID of the Site associated with the action."
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Reference"
                        },
                        "description": "Array of references attached to this action."
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "ID of the Asset associated with the action"
                    },
                    "label_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the labels associated with the action."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Type"
                    },
                    "field_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldValue"
                        },
                        "description": "Array of custom fields and their values to create with the action."
                    },
                    "template_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of templates to be linked to the action."
                    }
                },
                "title": "CreateActionRequest represents the parameters to `CreateAction`",
                "required": [
                    "title"
                ]
            },
            "s12.tasks.v1.CreateActionResponse": {
                "type": "object",
                "properties": {
                    "action_id": {
                        "type": "string"
                    }
                },
                "title": "CreateActionResponse is response of the create action endpoint call"
            },
            "s12.tasks.v1.CreateActionScheduleRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title of the actions that will be created in this schedule"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the actions that will be created in this schedule"
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "title": "The assignees of the actions that will be created in this schedule"
                    },
                    "priority_id": {
                        "type": "string",
                        "title": "The priority ID of the actions that will be created in this schedule\nIf not set, these actions will be stored with the default priority(none)"
                    },
                    "site_id": {
                        "type": "string",
                        "title": "The site ID of the actions that will be created in this schedule"
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "The asset ID of the actions that will be created in this schedule"
                    },
                    "label_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The label IDs of the actions that will be created in this schedule"
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency rule for the schedule to create actions.\nThis follows RFC 5545, and is in the RRule format."
                    },
                    "action_id": {
                        "type": "string",
                        "description": "This ID will be used to create the first action in the schedule right away.\nIt is specified here to allow for optimistic update of the UI, as well as redirecting to the action details view."
                    },
                    "field_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldValue"
                        },
                        "title": "Array of custom fields and their values of the actions that will be created in this schedule"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Type"
                    },
                    "template_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of templates identifiers linked to an action."
                    }
                },
                "title": "CreateActionScheduleRequest contains the available options when configuring a schedule to create actions"
            },
            "s12.tasks.v1.CreateActionScheduleResponse": {
                "type": "object",
                "title": "CreateActionScheduleResponse is the response sent to the customer when they configure a schedule to create actions"
            },
            "s12.tasks.v1.CreateActionSharedLinkResponse": {
                "type": "object",
                "properties": {
                    "link": {
                        "$ref": "#/components/schemas/s12.tasks.v1.ActionSharedLink"
                    }
                },
                "title": "CreateActionSharedLinkResponse creates and returns information shared link\nfor an action"
            },
            "s12.tasks.v1.CreateCustomFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The ID of the newly created custom field"
                    }
                },
                "description": "The parameters for `CreateCustomFieldResponse`",
                "title": "CreateCustomFieldResponse"
            },
            "s12.tasks.v1.CreateIncidentRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "description": "A UUID to identify the issue.\nOptional. If it is not provided, it will be automatically generated."
                    },
                    "title": {
                        "type": "string",
                        "description": "Required. Title of the issue (maximum 255 characters)."
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional. Description of the issue (maximum 500 characters)."
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "The collaborators involved in this issue.\nCollaborators are users who have been assigned to the issue. The user will\nappear in the \"Assignee\" field in the issue. Only one user can be assigned\nto an issue at a time."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The date and time this issue was created.\nIf no date is provided, the current time will be used.\nMust be sent in the Internet Date-Time format, more information about the type is\navailable here:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp."
                    },
                    "category_id": {
                        "type": "string",
                        "description": "The ID of the issue's category.\nCategories are configured at an organization level, and can be retrieved\nfrom the `GetCategories` endpoint. The issue will not be created if the\ncategory is missing, and an error will be returned."
                    },
                    "status_id": {
                        "type": "string",
                        "description": "Optional. ID of the issue's status.\nIf not set, this issue will be stored with the default status (Open).\nAn issue can be open or resolved, and these are represented by hardcoded\nUUID values. Open status: `547ed646-5e34-4732-bb54-a199d304368a`. Resolved\nstatus: `450484b1-56cd-4784-9b49-a3cf97d0c0ad`."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the site associated with the issue.\nSite IDs can be retrieved on platform."
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressLocation"
                    },
                    "question_answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.QuestionAnswer"
                        },
                        "description": "Answers for questions on the issue."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Item"
                        },
                        "description": "Optional. The category fields and questions that applied to this incident\nwhen it was created."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Optional. Date and time this incident occurred at"
                    }
                },
                "title": "CreateIncidentRequest represents the parameters to `CreateIncident`",
                "required": [
                    "title",
                    "category_id"
                ]
            },
            "s12.tasks.v1.CreateIncidentResponse": {
                "type": "object",
                "properties": {
                    "incident_id": {
                        "type": "string"
                    }
                },
                "title": "CreateIncidentResonse represents the result of `CreateIncident`"
            },
            "s12.tasks.v1.CreateTaskTypeRequest": {
                "type": "object",
                "properties": {
                    "type_attributes": {
                        "$ref": "#/components/schemas/s12.typefield.v1.CreateTypeAttributes"
                    }
                },
                "description": "The parameters for `CreateTaskType`",
                "title": "CreateTaskTypeRequest"
            },
            "s12.tasks.v1.CreateTaskTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The id of the new action type"
                    }
                },
                "description": "Result returned from `CreateTaskType`",
                "title": "CreateTaskTypeResponse"
            },
            "s12.tasks.v1.CustomerConfigurationService.CreateCustomFieldBody": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/s12.typefield.v1.CreateFieldAttributes"
                    }
                },
                "description": "The parameters for `CreateCustomFieldRequest`",
                "title": "CreateCustomFieldRequest"
            },
            "s12.tasks.v1.CustomerConfigurationService.MapFieldToTaskTypeBody": {
                "type": "object",
                "description": "The parameters for `MapFieldToTaskTypeRequest`",
                "title": "MapFieldToTaskTypeRequest"
            },
            "s12.tasks.v1.CustomerConfigurationService.RenameCustomFieldBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "The name to update the custom field to"
                    }
                },
                "description": "The parameters for `RenameCustomFieldRequest`",
                "title": "RenameCustomFieldRequest"
            },
            "s12.tasks.v1.CustomerConfigurationService.RenameTaskTypeBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "The new name for the action type"
                    }
                },
                "description": "The parameters for `RenameTaskType`",
                "title": "RenameTaskTypeRequest"
            },
            "s12.tasks.v1.DeleteActionLabelsRequest": {
                "type": "object",
                "properties": {
                    "label_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IDs for action labels you want to delete."
                    }
                },
                "description": "DeleteActionLabelsRequest is the request for deleting a list of action labels."
            },
            "s12.tasks.v1.DeleteActionLabelsResponse": {
                "type": "object",
                "description": "DeleteActionLabelsResponse is the response for deleting a list of action labels."
            },
            "s12.tasks.v1.DeleteActionsRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The list of action ids to be deleted"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The UTC time and date the deletion took place."
                    }
                },
                "title": "DeleteActionsRequest represents the list of action ids to delete"
            },
            "s12.tasks.v1.DeleteCustomFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The ID of the custom field deleted"
                    }
                },
                "description": "The parameters for `DeleteCustomFieldResponse`",
                "title": "DeleteCustomFieldResponse"
            },
            "s12.tasks.v1.DeleteIncidentsRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of issue UUIDs to be deleted."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The UTC time and date the deletion took place."
                    }
                },
                "description": "DeleteIncidentsRequest represents the list of issue UUIDs to delete.",
                "required": [
                    "ids"
                ]
            },
            "s12.tasks.v1.DeleteTaskTypeResponse": {
                "type": "object",
                "description": "Result returned from `DeleteTaskType`",
                "title": "DeleteTaskTypeResponse"
            },
            "s12.tasks.v1.GenerateResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The shareable link pointing to the issue's public web report."
                    }
                },
                "title": "GenerateReponse represents the result of `GenerateWebReportSharedLink`"
            },
            "s12.tasks.v1.GetActionLabelsResponse": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.ActionLabel"
                        }
                    }
                },
                "description": "GetActionLabelsResponse is the response for getting all action labels in your organization."
            },
            "s12.tasks.v1.GetActionSharedLinkResponse": {
                "type": "object",
                "properties": {
                    "link": {
                        "$ref": "#/components/schemas/s12.tasks.v1.ActionSharedLink"
                    }
                },
                "title": "GetActionSharedLinkResponse returns information for a shared link to an\naction"
            },
            "s12.tasks.v1.GetActionsRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Optional. Number of actions to be returned in a single request. Maximum\n100. Non-positive values are ignored. The presence of `next_page_token` in\nthe response indicates that more results might be available. For example: '20'."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "Optional. If present, then retrieve the next batch of results from the preceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.  The values of other method parameters should be identical to those in the previous call.\nFor example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='."
                    },
                    "inspection_id": {
                        "type": "string",
                        "description": "Optional. The ID of the inspection the action belongs to. Deprecated,\ninspectionID in `filters` should be used instead."
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Optional. Offset from where on the actions will be listed."
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetActionsRequest.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetActionsRequest.SortDirection"
                    },
                    "without_count": {
                        "type": "boolean",
                        "description": "Optional. If true, will not return the count of actions."
                    },
                    "task_filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter"
                        },
                        "description": "Optional. The array of filters to apply in your request. You can\napply multiple filters in a single request."
                    }
                },
                "description": "The parameters for `GetActionsRequest`",
                "title": "GetActionsRequest"
            },
            "s12.tasks.v1.GetActionsRequest.SortDirection": {
                "type": "string",
                "enum": [
                    "ASC",
                    "DESC"
                ]
            },
            "s12.tasks.v1.GetActionsRequest.SortField": {
                "type": "string",
                "enum": [
                    "PRIORITY",
                    "DATE_DUE",
                    "CREATED_AT",
                    "MODIFIED_AT"
                ]
            },
            "s12.tasks.v1.GetCategoriesResponse": {
                "type": "object",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Category"
                        },
                        "title": "A list of the categories that are configured for the organisation"
                    },
                    "next_page_token": {
                        "type": "string",
                        "description": "NextPageToken to get the next set of categories. Empty if scrolled to the end."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of categories"
                    }
                },
                "description": "GetCategoriesResponse represents the response to a GetCategories request.\nIt is an array of `Category`, containing data about the organization's\ncategories."
            },
            "s12.tasks.v1.GetIncidentQuestionsAndAnswersResponse": {
                "type": "object",
                "properties": {
                    "questions_answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.QuestionAndAnswers"
                        },
                        "description": "The list of questions and their respective answers."
                    }
                },
                "description": "GetIncidentQuestionsAndAnswersResponse returns a list of questions and\nanswers associated with an issue ID."
            },
            "s12.tasks.v1.GetIncidentsCountResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Total number of incidents"
                    }
                },
                "title": "GetIncidentsCountResponse response object for getIncidentsCount"
            },
            "s12.tasks.v1.GetIncidentsRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Optional. Number of issues to be returned in a single request.\nThis must be a value between 1 and 100, any values outside of this range\nwill be ignored. The presence of `next_page_token` in the response\nindicates that more results might be available."
                    },
                    "page_token": {
                        "type": "string",
                        "title": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `page_token` must be the value of\n`next_page_token` from the previous response.  The values of other method\nparameters should be identical to those in the previous call.\nThis can be used to retrieve more than 100 issues with multiple API\ncalls. For example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.SortDirection"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter"
                        },
                        "description": "Optional. An array of filters can be provided in the request to filter the\nissues."
                    }
                },
                "description": "GetIncidentsRequest represents the parameters to `GetIncidents`."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.StatusID"
                    },
                    "priority_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.PriorityID"
                    },
                    "category_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.CategoryID"
                    },
                    "site_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.SiteID"
                    },
                    "assignee_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.AssigneeID"
                    },
                    "creator_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.CreatorID"
                    },
                    "title": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Search"
                    },
                    "description": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Search"
                    },
                    "task_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.TaskID"
                    },
                    "due_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Duration"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Duration"
                    },
                    "occurred_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Duration"
                    },
                    "keyword": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Search"
                    },
                    "modified_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Duration"
                    },
                    "completed_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.Duration"
                    }
                },
                "description": "Filters represents a filters object which contains the filters available\nwhen listing issues. You can provide an array of filters in the request\nto get a more specific response. Each filter can have an `operator` and a\n`value`. The `operators` are described in `FilterOperator`, and the `value`\nwill be a UUID associated with that filter type."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.AssigneeID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The user ID of the assignee."
                    }
                },
                "description": "Will return issues where the user ID of the assignee matches the\nprovided value."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.CategoryID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the category."
                    }
                },
                "description": "Will return issues that have a matching category."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.CreatorID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The user ID of the creator."
                    }
                },
                "description": "Will return issues where the user ID of the creator matches the\nprovided value."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.Duration": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "format": "date-time",
                        "title": "optional. represents the time should be after the time provided"
                    },
                    "to": {
                        "type": "string",
                        "format": "date-time",
                        "title": "optional. represents the time should be before the time provided"
                    }
                },
                "title": "time duration filter"
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator": {
                "type": "string",
                "enum": [
                    "FILTER_OPERATOR_UNKNOWN",
                    "IN"
                ],
                "default": "FILTER_OPERATOR_UNKNOWN",
                "description": "The options available when defining a filter. The only available option\nis `IN`.\n\n - FILTER_OPERATOR_UNKNOWN: `FILTER_OPERATOR_UNKNOWN` represents the default value for a filter\noperator, which is `IN`.\n - IN: `IN` returns results where the value is a direct match."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.PriorityID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the priority."
                    }
                },
                "description": "Will return issues that have a matching priority.\nThe priority of an issue can be one of four options: none, low, medium\nor high. Each of these are represented by a hardcoded UUID value.\nNo priority: `58941717-817f-4c7c-a6f6-5cd05e2bbfde`.\nLow priority: `16ba4717-adc9-4d48-bf7c-044cfe0d2727`.\nMedium priority: `ce87c58a-eeb2-4fde-9dc4-c6e85f1f4055`.\nHigh priority: `02eb40c1-4f46-40c5-be16-d32941c96ec9`."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.Search": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string",
                        "description": "`term` represents the text to search for."
                    }
                },
                "description": "Will return issues where the title and/or description contain the search\nterm."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.SiteID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the site."
                    }
                },
                "description": "Will return issues that have a matching site."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.StatusID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the status."
                    }
                },
                "description": "Will return issues that have a matching status.\nAn issue can be open or resolved, and these are represented by\nhardcoded UUID values.\nOpen status: `547ed646-5e34-4732-bb54-a199d304368a`.\nResolved status: `450484b1-56cd-4784-9b49-a3cf97d0c0ad`."
            },
            "s12.tasks.v1.GetIncidentsRequest.Filter.TaskID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.GetIncidentsRequest.Filter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the task_id should be\none of the value provided"
                    }
                },
                "title": "task id filter"
            },
            "s12.tasks.v1.GetIncidentsRequest.SortDirection": {
                "type": "string",
                "enum": [
                    "SORT_DIRECTION_UNKNOWN",
                    "ASC",
                    "DESC"
                ],
                "default": "SORT_DIRECTION_UNKNOWN",
                "description": "The options available to define the sort direction.\n\n - SORT_DIRECTION_UNKNOWN: `SORT_DIRECTION_UNKNOWN` will return the default sort direction.\n - ASC: `ASC` will return the sorted issues in ascending order.\n - DESC: `DESC` will return the sorted issues in descending order."
            },
            "s12.tasks.v1.GetIncidentsRequest.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNKNOWN",
                    "PRIORITY",
                    "DATE_DUE",
                    "CREATED_AT",
                    "MODIFIED_AT",
                    "OCCURRED_AT"
                ],
                "default": "SORT_FIELD_UNKNOWN",
                "description": "The options available to sort the issues by.\nBy default, the issues will be returned by the date they were last\nmodified in descending order. This should be used in combination with\n`SortDirection` to determine how issues are sorted. If either\n`SortField` or `SortDirection` is missing, the default sort order will be\nused.\n\n - SORT_FIELD_UNKNOWN: `SORT_FIELD_UNKNOWN` will return the default sort order.\n - PRIORITY: `PRIORITY` will sort the issues by incident priority.\n - DATE_DUE: `DATE_DUE` will sort the issues by due date.\n - CREATED_AT: `CREATED_AT` will sort the issues by the date they were created.\n - MODIFIED_AT: `MODIFIED_AT` will sort the issues by the date they were last\nmodified.\n - OCCURRED_AT: `OCCURRED_AT` will sort the issues by the date they occurred at."
            },
            "s12.tasks.v1.GetOrgTaskTypeUnmappedFieldsResponse": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.Field"
                        },
                        "title": "The unmapped fields of the specified action type"
                    }
                },
                "description": "The parameters for `GetOrgTaskTypeUnmappedFieldsResponse`",
                "title": "GetOrgTaskTypeUnmappedFieldsResponse"
            },
            "s12.tasks.v1.GetPDFReportResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "The pdf report download link"
                    }
                }
            },
            "s12.tasks.v1.GetTaskTypeCustomFieldsResponse": {
                "type": "object",
                "properties": {
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldMapping"
                        },
                        "description": "The field mappings of the type_id passed in the request."
                    }
                },
                "title": "Result returned from `GetTaskTypeCustomFields`"
            },
            "s12.tasks.v1.GetTimelineRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "description": "Required. The UUID of the task whose timeline will be retrieved."
                    }
                },
                "title": "Represents the parameters to `GetTimeline`",
                "required": [
                    "task_id"
                ]
            },
            "s12.tasks.v1.GetTimelineResponse": {
                "type": "object",
                "properties": {
                    "timeline_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem"
                        },
                        "description": "A list of items in the task timeline."
                    }
                },
                "title": "Represents the result of `GetTimeline`"
            },
            "s12.tasks.v1.Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "title": "Group represents a user group configured within an organisation"
            },
            "s12.tasks.v1.Incident": {
                "type": "object",
                "properties": {
                    "task": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "@deprecated. Use category instead.\nThe category id associated with the issue."
                    },
                    "category": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Category"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "Any media associated with this issue."
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressLocation"
                    },
                    "inspections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Inspection"
                        },
                        "description": "The inspections that are linked to this issue."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Item"
                        },
                        "description": "A snapshot of the category items, at the time of creation."
                    },
                    "question_answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.QuestionAnswers"
                        },
                        "title": "The answers to the snapshot category items"
                    }
                },
                "description": "An Incident represents the details of an issue.\nThis can include the category, any attached media, the location,\nany linked inspections and the task associated with the issue."
            },
            "s12.tasks.v1.IncidentResponse": {
                "type": "object",
                "properties": {
                    "incident": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Incident"
                    }
                },
                "title": "IncidentResponse represents the result of `GetIncident`"
            },
            "s12.tasks.v1.IncidentsResponse": {
                "type": "object",
                "properties": {
                    "incidents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Incident"
                        },
                        "title": "List of issues"
                    },
                    "next_page_token": {
                        "type": "string",
                        "title": "If there are more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call `GetIncidents`\nmethod again using the value of `next_page_token` as `page_token`.\nFor Example: 'ODFBMzQ3MDYtNzQxNy00RDZGLThDNjE1MEFDMkM4MTQ3NDQ='"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "@deprecated: Use `GetIncidentsCount` instead. Total number of issues found"
                    }
                },
                "title": "IncidentsResponse represents the result of `GetIncidents`"
            },
            "s12.tasks.v1.IncidentsService.AddCollaboratorsBody": {
                "type": "object",
                "properties": {
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "Required. The collaborators to be added to the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "AddCollaboratorsRequest represents the parameters to add collaborators to the\ntask"
            },
            "s12.tasks.v1.IncidentsService.RemoveCollaboratorsBody": {
                "type": "object",
                "properties": {
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "Required. The collaborators to be removed from the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "RemoveCollaboratorsRequest represents the parameters to remove the\ncollaborators from the task"
            },
            "s12.tasks.v1.IncidentsService.UpdateCategoryBody": {
                "type": "object",
                "properties": {
                    "category_id": {
                        "type": "string",
                        "description": "Required. The new category UUID for the issue.\nCall the `GetCategories` endpoint to get the available categories."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateCategoryRequest represents the parameters to `UpdateCategory`",
                "required": [
                    "category_id"
                ]
            },
            "s12.tasks.v1.IncidentsService.UpdateDescriptionBody": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Required. The new description for the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateDescriptionRequest represents the parameters to update the description\nof the task"
            },
            "s12.tasks.v1.IncidentsService.UpdateDueAtBody": {
                "type": "object",
                "properties": {
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. Date/time this task is due.\nIf this is empty, \"due at\" will be unset."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "description": "UpdateDueAtRequest represents the parameter to update the due date of the\ntask."
            },
            "s12.tasks.v1.IncidentsService.UpdateOccurredAtBody": {
                "type": "object",
                "properties": {
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The new occurred at time for the task.\nIf this is empty, the occurred at value will be unset."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateOccurredAtRequest represents the parameters to update the\noccurred at time associated with a task"
            },
            "s12.tasks.v1.IncidentsService.UpdatePriorityBody": {
                "type": "object",
                "properties": {
                    "priority_id": {
                        "type": "string",
                        "description": "Required. The new priority UUID for the task."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdatePriorityRequest represents the parameters to update the priority of the\ntask",
                "required": [
                    "priority_id"
                ]
            },
            "s12.tasks.v1.IncidentsService.UpdateSiteBody": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "$ref": "#/components/schemas/s12.common.UUIDValue"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "title": "UpdateSiteRequest represents the parameter to update the site (folder)\nassociated to a task"
            },
            "s12.tasks.v1.IncidentsService.UpdateStatusBody": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "description": "Required. The ID of the status you're updating the action or issue to.\nAn issue can be in an \"Open\" or \"Resolved\" status, where each status is represented by hardcoded UUID values.\nIssue statuses:\n- Open: `547ed646-5e34-4732-bb54-a199d304368a`.\n- Resolved: `450484b1-56cd-4784-9b49-a3cf97d0c0ad`.\n\nAn action can be in a \"To do\", \"In progress\", \"Complete\", or \"Can't do\" status, where each status is represented by hardcoded UUID values.\nAction statuses:\n- To do: `17e793a1-26a3-4ecd-99ca-f38ecc6eaa2e`.\n- In progress: `20ce0cb1-387a-47d4-8c34-bc6fd3be0e27`.\n- Complete: `7223d809-553e-4714-a038-62dc98f3fbf3`.\n- Can't do: `06308884-41c2-4ee0-9da7-5676647d3d75`."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The UTC time and date the modification took place."
                    }
                },
                "description": "UpdateStatusRequest represents the parameters for `UpdateStatus`.",
                "required": [
                    "status_id"
                ]
            },
            "s12.tasks.v1.IncidentsService.UpdateTitleBody": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Required. The new title for the task.\nThe title must be between 0 and 255 characters."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. The timestamp of when this event occurred."
                    }
                },
                "description": "UpdateTitleRequest represents the parameters to update the title of the task."
            },
            "s12.tasks.v1.Inspection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the linked inspection. This may or may not be a UUID, so we don't\nvalidate it here."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the inspection was created."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Inspection.InspectionStatus"
                    },
                    "title": {
                        "type": "string",
                        "title": "The title of the inspection"
                    },
                    "template_title": {
                        "type": "string",
                        "title": "The title of the template that this inspection was created from"
                    }
                },
                "title": "Inspection represents an inspection that is linked to an issue"
            },
            "s12.tasks.v1.Inspection.InspectionStatus": {
                "type": "string",
                "enum": [
                    "INSPECTION_STATUS_UNSPECIFIED",
                    "INSPECTION_STATUS_IN_PROGRESS",
                    "INSPECTION_STATUS_COMPLETED",
                    "INSPECTION_STATUS_DELETED"
                ],
                "default": "INSPECTION_STATUS_UNSPECIFIED",
                "description": "- INSPECTION_STATUS_UNSPECIFIED: The status of the inspection is unspecified\n - INSPECTION_STATUS_IN_PROGRESS: The status of the inspection is 'In Progress'\n - INSPECTION_STATUS_COMPLETED: The status of the inspection is 'Completed'\n - INSPECTION_STATUS_DELETED: The status of the inspection is 'Deleted'",
                "title": "The status of the linked inspection"
            },
            "s12.tasks.v1.Item": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the item."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the item"
                    },
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "Whether or not the item must be filled before submission"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Item.ItemType"
                    },
                    "question_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Question"
                    },
                    "is_disabled": {
                        "type": "boolean",
                        "title": "Whether or not the item is disabled and hidden from submission"
                    }
                },
                "title": "Item for a given category/incident"
            },
            "s12.tasks.v1.Item.ItemType": {
                "type": "string",
                "enum": [
                    "ITEM_TYPE_UNSPECIFIED",
                    "ITEM_TYPE_TITLE",
                    "ITEM_TYPE_DESCRIPTION",
                    "ITEM_TYPE_SITE",
                    "ITEM_TYPE_MEDIA",
                    "ITEM_TYPE_LOCATION",
                    "ITEM_TYPE_QUESTION",
                    "ITEM_TYPE_OCCURRED_AT"
                ],
                "default": "ITEM_TYPE_UNSPECIFIED",
                "description": "- ITEM_TYPE_UNSPECIFIED: The item type is unspecified",
                "title": "The types of items"
            },
            "s12.tasks.v1.MapFieldToTaskTypeResponse": {
                "type": "object",
                "description": "The parameters for `MapFieldToTaskTypeResponse`",
                "title": "MapFieldToTaskTypeResponse"
            },
            "s12.tasks.v1.MetricType": {
                "type": "string",
                "enum": [
                    "TEMPERATURE",
                    "HUMIDITY",
                    "BATTERY",
                    "SIGNAL",
                    "AIR_QUALITY_PM25",
                    "AIR_QUALITY_PM10",
                    "TEMPERATURE_2",
                    "DIFFERENTIAL_AIR_PRESSURE",
                    "CO",
                    "DOOR_OPEN_CLOSED",
                    "BATTERY_VOLTAGE",
                    "WEATHER",
                    "WIND_SPEED",
                    "WIND_DIRECTION",
                    "WIND_GUST",
                    "CO2"
                ],
                "default": "UNKNOWN_TYPE",
                "description": "- TEMPERATURE: Temperature metric\n - HUMIDITY: Humidity metric\n - BATTERY: Battery level. Percentage based i.e. 0 - 100\n - SIGNAL: Signal strength metric\n - AIR_QUALITY_PM25: Air quality for particulate matter less than 2.5 microns\n - AIR_QUALITY_PM10: Air quality for particulate matter less than 10 microns\n - TEMPERATURE_2: Alternative temperature (Some hardware i.e. Avem Quirks do have 2 probes\nand are sending 2 temperatures)\n - DIFFERENTIAL_AIR_PRESSURE: Differential air pressure\n - CO: Carbon monoxide\n - DOOR_OPEN_CLOSED: Door open/closed boolean metric\n - BATTERY_VOLTAGE: Battery voltage metric\n - WEATHER: Weather (e.g. sunny, thunderstorms)\n - WIND_SPEED: Wind speed\n - WIND_DIRECTION: Wind direction\n - WIND_GUST: Wind gust\n - CO2: Carbon dioxide",
                "title": "Metric type represents a type of received metric"
            },
            "s12.tasks.v1.MultipleChoiceOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the multiple choice option."
                    },
                    "text": {
                        "type": "string",
                        "description": "The text of the multiple choice option. This does not use the new `validator.string` option as question processing\nlogic fails when symbols are substituted for similar-looking symbols."
                    }
                },
                "description": "MultipleChoiceOption represents a possible answer for a multiple choice question."
            },
            "s12.tasks.v1.MultipleChoiceOptions": {
                "type": "object",
                "properties": {
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.MultipleChoiceOption"
                        }
                    }
                },
                "description": "MultipleChoiceOptions is an explicit message for a set of MultipleChoiceOption's to use in a oneof field below."
            },
            "s12.tasks.v1.Question": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the question."
                    },
                    "text": {
                        "type": "string",
                        "description": "The text of the question being asked (e.g. \"How many eggs are in a dozen?\"). This does not use the new\n`validator.string` option as question processing logic fails when symbols are substituted for similar-looking\nsymbols."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Question.QuestionType"
                    },
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "Whether the question is mandatory or not"
                    },
                    "multiple_choice_options": {
                        "$ref": "#/components/schemas/s12.tasks.v1.MultipleChoiceOptions"
                    }
                },
                "description": "Question represents the question structure for a custom question."
            },
            "s12.tasks.v1.Question.QuestionType": {
                "type": "string",
                "enum": [
                    "QUESTION_TYPE_UNSPECIFIED",
                    "QUESTION_TYPE_TEXT",
                    "QUESTION_TYPE_MULTIPLE_CHOICE"
                ],
                "default": "QUESTION_TYPE_UNSPECIFIED",
                "description": "- QUESTION_TYPE_UNSPECIFIED: The question type is unspecified. This generally should not happen.\n - QUESTION_TYPE_TEXT: The question is text type. This question accepts freetext answers.\n - QUESTION_TYPE_MULTIPLE_CHOICE: The question is multiple choice. This question provides a list of options to choose from.",
                "title": "The types of questions"
            },
            "s12.tasks.v1.QuestionAndAnswers": {
                "type": "object",
                "properties": {
                    "question": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Question"
                    },
                    "is_answered": {
                        "type": "boolean",
                        "description": "Whether the question has been answered at least once."
                    },
                    "answer_set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Answer"
                        },
                        "description": "The set of answers that is associated with the question."
                    }
                },
                "description": "QuestionAndAnswers represents the list of answers associated with a single\nquestion. This is a 1:N relationship of Question to Answers, meaning a\nquestion may have multiple answers."
            },
            "s12.tasks.v1.QuestionAnswer": {
                "type": "object",
                "properties": {
                    "question_id": {
                        "type": "string",
                        "description": "The ID of the question being answered."
                    },
                    "answer_text": {
                        "$ref": "#/components/schemas/s12.tasks.v1.AnswerText"
                    },
                    "answer_multiple_choice": {
                        "$ref": "#/components/schemas/s12.tasks.v1.MultipleChoiceOption"
                    }
                },
                "description": "QuestionAnswer contains data about a question configured for this issue's\ncategory, as well as the answer to that question."
            },
            "s12.tasks.v1.QuestionAnswers": {
                "type": "object",
                "properties": {
                    "question_id": {
                        "type": "string",
                        "title": "The ID of the question"
                    },
                    "answer_set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Answer"
                        },
                        "description": "The set of answers that is associated with the question."
                    }
                }
            },
            "s12.tasks.v1.ReferenceType": {
                "type": "string",
                "enum": [
                    "SENSOR",
                    "SENSOR_ALERT",
                    "INSPECTION",
                    "INCIDENT",
                    "SCHEDULE",
                    "ACTION",
                    "LINKED_INSPECTION",
                    "ASSET_MAINTENANCE_PLAN"
                ],
                "default": "REFERENCE_TYPE_NOT_SET",
                "description": "Reference type. The idea here is to list all the \"external\" types that would\nbe used as a reference when creating actions."
            },
            "s12.tasks.v1.RenameCustomFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The ID of the custom field renamed"
                    }
                },
                "description": "The parameters for `RenameCustomFieldResponse`",
                "title": "RenameCustomFieldResponse"
            },
            "s12.tasks.v1.RenameTaskTypeResponse": {
                "type": "object",
                "description": "Result returned from `RenameTaskType`",
                "title": "RenameTaskTypeResponse"
            },
            "s12.tasks.v1.RevokeActionSharedLinkResponse": {
                "type": "object",
                "title": "RevokeActionSharedLinkResponse is an empty response"
            },
            "s12.tasks.v1.SharedLinkService.GenerateForWebReportBody": {
                "type": "object",
                "properties": {
                    "path_prefix": {
                        "type": "string",
                        "description": "@deprecated: This was a field used to specify part of the generated URL.\nThis is no longer used as the URL is now fixed."
                    }
                },
                "title": "GenerateRequest represents the parameters to `GenerateWebReportSharedLink`"
            },
            "s12.tasks.v1.SubmitIncidentRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Optional. The unique identifier of the incident\nIf not provided, UUID will be generated server side"
                    },
                    "title": {
                        "type": "string",
                        "title": "Required. Title of the incident\nTitle is limited to only 255 characters max"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Optional. Date and time this incident was created"
                    },
                    "category_id": {
                        "type": "string",
                        "title": "Optional. ID of the incident's category\nIf not set, this incident will be stored with the default category(None)"
                    },
                    "answered_questions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional. An array of all, if any, custom questions that have been answered\nby the contributor\n@deprecated: Use `QuestionAnswer` instead. This was a field used for string\ncustom questions. We've since moved to structured custom questions in the\n`QuestionAnswer` field."
                    },
                    "email": {
                        "type": "string",
                        "title": "Optional. The email address of the contributor"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "Optional. Array of media items to be linked to the incident."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "Optional. ID of the site to associate with the incident.\nIf not provided, no site will be associated with the incident."
                    },
                    "name": {
                        "type": "string",
                        "title": "Optional. The name of the contributor"
                    },
                    "contact": {
                        "type": "string",
                        "title": "Optional. The contact details of the contributor"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressLocation"
                    },
                    "access_token": {
                        "type": "string",
                        "description": "Optional. The access token used to authenticate the request. This field\nshould be set when following the contributor flow. Otherwise, authenticate\nvia normal means."
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional. Description of the issue (maximum 500 characters)."
                    },
                    "questions_and_answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.SubmitIncidentRequest.QuestionAnswer"
                        },
                        "description": "Optional. An array of all, if any, custom questions that have been answered\nfor this issue."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Item"
                        },
                        "description": "Optional. The category fields and questions that applied to this incident\nwhen it was created."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Optional. Date and time this incident occurred at"
                    }
                },
                "title": "SubmitIncidentRequest represents the incident submitted by a contributor",
                "required": [
                    "title"
                ]
            },
            "s12.tasks.v1.SubmitIncidentRequest.QuestionAnswer": {
                "type": "object",
                "properties": {
                    "question_id": {
                        "type": "string",
                        "description": "The ID of the question being answered."
                    },
                    "answer_text": {
                        "$ref": "#/components/schemas/s12.tasks.v1.AnswerText"
                    },
                    "answer_multiple_choice": {
                        "$ref": "#/components/schemas/s12.tasks.v1.MultipleChoiceOption"
                    }
                },
                "description": "QuestionAnswer contains data about a question configured for this issue's\ncategory, as well as the answer to that question."
            },
            "s12.tasks.v1.SubmitIncidentResponse": {
                "type": "object",
                "properties": {
                    "incident_id": {
                        "type": "string",
                        "description": "The UUID of the incident that was created."
                    },
                    "unique_id": {
                        "type": "string",
                        "description": "The unique id of the incident that was created. Formatted like: IS-1234."
                    }
                },
                "title": "SubmitIncidentResponse represents the result of `SubmitIncident`"
            },
            "s12.tasks.v1.Task": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "An ID uniquely identifying this task message.\nFor example: 'aa70d8a6-af37-44f4-8768d8899fe274c5'"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of this task"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of this task"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this task was created"
                    },
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this task is due"
                    },
                    "priority_id": {
                        "type": "string",
                        "title": "Priority ID of this task"
                    },
                    "status_id": {
                        "type": "string",
                        "description": "Status ID of this task\n@deprecated. For task type of action use status instead.\nIn use by task type of incident."
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "title": "Collaborators of this task"
                    },
                    "template_id": {
                        "type": "string",
                        "title": "Template ID of the inspection the action belongs to"
                    },
                    "inspection": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Inspection"
                    },
                    "inspection_item": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.InspectionItem"
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Site"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this task was last modified"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Reference"
                        },
                        "description": "References on this task."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this task was completed at"
                    },
                    "template_name": {
                        "type": "string",
                        "title": "Template name of the inspection the action belongs to"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Status"
                    },
                    "asset_id": {
                        "type": "string",
                        "title": "@deprecated Asset ID of this task"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Asset"
                    },
                    "action_label": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.ActionLabel"
                        },
                        "title": "Label of a task"
                    },
                    "unique_id": {
                        "type": "string",
                        "title": "The human readable unique ID of the task"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskType"
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time this task occurred at"
                    },
                    "task_templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.TaskTemplate"
                        },
                        "description": "The list of templates linked to the action."
                    }
                },
                "title": "Task represents a stand-alone task that has been created"
            },
            "s12.tasks.v1.Task.ActionContext": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title of the action"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the action"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Status"
                    },
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time the action is due"
                    },
                    "priority_id": {
                        "type": "string",
                        "title": "Priority ID of the action"
                    },
                    "unique_id": {
                        "type": "string",
                        "title": "The human readable unique ID of the action"
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "title": "The collaborators of the action"
                    },
                    "inspection": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Inspection"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Type"
                    }
                },
                "title": "context of an action associated with the incident"
            },
            "s12.tasks.v1.Task.AddressAnswer": {
                "type": "object",
                "properties": {
                    "location_text": {
                        "type": "string",
                        "title": "Location text"
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressLocation"
                    }
                },
                "title": "Answer returned for AddressItem"
            },
            "s12.tasks.v1.Task.AddressLocation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the task's location."
                    },
                    "thoroughfare": {
                        "type": "string",
                        "description": "The thoroughfare of the location."
                    },
                    "sub_thoroughfare": {
                        "type": "string",
                        "title": "The sub_thoroughfare of the location,"
                    },
                    "locality": {
                        "type": "string",
                        "title": "The locality of the location"
                    },
                    "sub_locality": {
                        "type": "string",
                        "title": "The sub_locality of the location"
                    },
                    "administrative_area": {
                        "type": "string",
                        "title": "The administrative_area of the location"
                    },
                    "sub_administrative_area": {
                        "type": "string",
                        "title": "The sub_administrative_area of the location"
                    },
                    "postal_code": {
                        "type": "string",
                        "title": "The postal_code of the location"
                    },
                    "country": {
                        "type": "string",
                        "title": "The country of the location"
                    },
                    "iso_country_code": {
                        "type": "string",
                        "title": "The iso_country_code of the location"
                    },
                    "geo_position": {
                        "$ref": "#/components/schemas/s12.common.GeoPosition"
                    }
                },
                "description": "The location of the task.\nThe latitude and longitude in the `geo_position` object are required.\nAll other fields are optional, but add extra context to the location on\nplatform."
            },
            "s12.tasks.v1.Task.Asset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the asset associated with this task."
                    },
                    "code": {
                        "type": "string",
                        "description": "The code of the asset associated with this task."
                    },
                    "type_id": {
                        "type": "string",
                        "description": "The id of the asset type associated with this task."
                    }
                }
            },
            "s12.tasks.v1.Task.AssetMaintenancePlan": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the maintenance plan."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the maintenance plan."
                    },
                    "state": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AssetMaintenancePlan.AssetMaintenancePlanState"
                    }
                },
                "description": "AssetMaintenancePlan represents the maintenance plan associated with the\naction."
            },
            "s12.tasks.v1.Task.AssetMaintenancePlan.AssetMaintenancePlanState": {
                "type": "string",
                "enum": [
                    "ASSET_MAINTENANCE_PLAN_STATE_UNSPECIFIED",
                    "ASSET_MAINTENANCE_PLAN_STATE_ACTIVE",
                    "ASSET_MAINTENANCE_PLAN_STATE_DELETED"
                ],
                "default": "ASSET_MAINTENANCE_PLAN_STATE_UNSPECIFIED",
                "description": " - ASSET_MAINTENANCE_PLAN_STATE_UNSPECIFIED: ASSET_MAINTENANCE_PLAN_STATE_UNSPECIFIED is an unknown maintenance plan state.\n - ASSET_MAINTENANCE_PLAN_STATE_ACTIVE: ASSET_MAINTENANCE_PLAN_STATE_ACTIVE is a maintenance plan state that is active.\n - ASSET_MAINTENANCE_PLAN_STATE_DELETED: ASSET_MAINTENANCE_PLAN_STATE_DELETED is a maintenance plan state that is deleted."
            },
            "s12.tasks.v1.Task.AssetMaintenancePlanContext": {
                "type": "object",
                "properties": {
                    "maintenance_plan": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AssetMaintenancePlan"
                    },
                    "maintenance_program": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AssetMaintenanceProgram"
                    }
                },
                "title": "AssetMaintenancePlanContext is the context of the maintenance plan associated\nwith the action"
            },
            "s12.tasks.v1.Task.AssetMaintenanceProgram": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the maintenance program."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the maintenance program."
                    },
                    "state": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AssetMaintenanceProgram.AssetMaintenanceProgramState"
                    }
                },
                "description": "AssetMaintenanceProgram represents the maintenance program where the\nmaintenance plan belongs."
            },
            "s12.tasks.v1.Task.AssetMaintenanceProgram.AssetMaintenanceProgramState": {
                "type": "string",
                "enum": [
                    "ASSET_MAINTENANCE_PROGRAM_STATE_UNSPECIFIED",
                    "ASSET_MAINTENANCE_PROGRAM_STATE_ACTIVE",
                    "ASSET_MAINTENANCE_PROGRAM_STATE_DELETED"
                ],
                "default": "ASSET_MAINTENANCE_PROGRAM_STATE_UNSPECIFIED",
                "description": " - ASSET_MAINTENANCE_PROGRAM_STATE_UNSPECIFIED: ASSET_MAINTENANCE_PROGRAM_STATE_UNSPECIFIED is an unknown maintenance program state.\n - ASSET_MAINTENANCE_PROGRAM_STATE_ACTIVE: ASSET_MAINTENANCE_PROGRAM_STATE_ACTIVE is a maintenance program state that is active.\n - ASSET_MAINTENANCE_PROGRAM_STATE_DELETED: ASSET_MAINTENANCE_PROGRAM_STATE_DELETED is a maintenance program state that is deleted."
            },
            "s12.tasks.v1.Task.Attachments": {
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string",
                        "title": "Note inside Attachments of inspectionItem Answer"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "title": "images or pdf inside Attachments of inspectionItem Answer"
                    }
                },
                "title": "Attachments of inspectionItem Answer"
            },
            "s12.tasks.v1.Task.CheckboxAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "boolean",
                        "title": "answer content for CheckboxAnswer"
                    }
                },
                "title": "Answer returned for CheckboxItem"
            },
            "s12.tasks.v1.Task.Collaborator": {
                "type": "object",
                "properties": {
                    "collaborator_id": {
                        "type": "string",
                        "description": "A UUID uniquely identifying this collaborator."
                    },
                    "collaborator_type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.CollaboratorType"
                    },
                    "assigned_role": {
                        "$ref": "#/components/schemas/s12.tasks.v1.CollaboratorRole"
                    },
                    "user": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                    },
                    "group": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Group"
                    },
                    "external_user": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.ExternalUser"
                    },
                    "contributor": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Contributor"
                    }
                },
                "description": "A collaborator is somebody who is involved with the task.\nThey have either created the task, or are assigned to it."
            },
            "s12.tasks.v1.Task.Contributor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "The UUID uniquely identifying this contributor"
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional. The contributor's name."
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional. The contributor's email address."
                    },
                    "contact": {
                        "type": "string",
                        "description": "Optional. The contributor's (freetext) contact details."
                    }
                },
                "title": "The contributor that raised the issue"
            },
            "s12.tasks.v1.Task.DateTimeAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "string",
                        "format": "date-time",
                        "title": "answer content for DateTimeItem"
                    },
                    "enable_date": {
                        "type": "boolean",
                        "title": "Enable date turns on input for date values"
                    },
                    "enable_time": {
                        "type": "boolean",
                        "title": "Enable date turns on input for time values"
                    }
                },
                "title": "Answer returned for DateTimeItem"
            },
            "s12.tasks.v1.Task.DrawingAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    }
                },
                "title": "Answer returned for DrawingItem"
            },
            "s12.tasks.v1.Task.ExternalUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID uniquely identifying this external user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the external user."
                    }
                },
                "description": "The external user that is assigned to a task."
            },
            "s12.tasks.v1.Task.Group": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "type": "string",
                        "description": "The UUID of this group."
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the group"
                    }
                },
                "description": "The group that is assigned to a task."
            },
            "s12.tasks.v1.Task.IncidentContext": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title of the incident"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the incident"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                    },
                    "status_id": {
                        "type": "string",
                        "title": "Status ID of the incident"
                    },
                    "category_id": {
                        "type": "string",
                        "title": "Category of the incident"
                    },
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date/time the incident is due"
                    },
                    "priority_id": {
                        "type": "string",
                        "title": "Priority ID of the incident"
                    },
                    "unique_id": {
                        "type": "string",
                        "title": "The human readable unique ID of the incident"
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "title": "The collaborators of the incident"
                    }
                },
                "title": "context of an incident associated with the action"
            },
            "s12.tasks.v1.Task.Inspection": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "ID of the inspection the action belongs to"
                    },
                    "inspection_name": {
                        "type": "string",
                        "title": "The name of the inspection the action belongs to"
                    }
                },
                "title": "The inspection data of this task"
            },
            "s12.tasks.v1.Task.InspectionContext": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "ID of the inspection associated with the action"
                    },
                    "inspection_name": {
                        "type": "string",
                        "title": "name of the inspection associated with the action"
                    },
                    "inspection_item_id": {
                        "type": "string",
                        "title": "ID of the inspectionItem associated with the action"
                    },
                    "inspection_item_name": {
                        "type": "string",
                        "title": "name of the inspectionItem associated with the action"
                    },
                    "inspection_item_type": {
                        "type": "string",
                        "title": "@deprecated The type of the inspectionItem associated with the action"
                    },
                    "inspection_item_path": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The path(breadcrumbs) of the inspectionItem associated with the action"
                    },
                    "inspection_item_attachments": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Attachments"
                    },
                    "list_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.ListAnswer"
                    },
                    "text_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.TextAnswer"
                    },
                    "checkbox_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.CheckboxAnswer"
                    },
                    "media_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.MediaAnswer"
                    },
                    "signature_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.SignatureAnswer"
                    },
                    "drawing_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.DrawingAnswer"
                    },
                    "slider_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.SliderAnswer"
                    },
                    "datetime_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.DateTimeAnswer"
                    },
                    "address_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressAnswer"
                    },
                    "switch_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.SwitchAnswer"
                    },
                    "temperature_answer": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.TemperatureAnswer"
                    },
                    "inspection_deleted": {
                        "type": "boolean",
                        "title": "Flag indicated whether the inspection has been deleted"
                    }
                },
                "title": "context of inspection associated with the action"
            },
            "s12.tasks.v1.Task.InspectionItem": {
                "type": "object",
                "properties": {
                    "inspection_item_id": {
                        "type": "string",
                        "title": "ID of the item in the inspection associated with the action"
                    },
                    "inspection_item_name": {
                        "type": "string",
                        "title": "The name of the item in the inspection associated with the action"
                    },
                    "inspection_item_type": {
                        "type": "string",
                        "title": "The type of the item in the inspection associated with the action"
                    },
                    "inspection_item_response_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "The labels of the responses"
                    }
                },
                "title": "The inspection item data of this task"
            },
            "s12.tasks.v1.Task.LinkedInspectionContext": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "description": "ID of the inspection associated with the action."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "ID of the template this inspection was created from."
                    },
                    "inspection_name": {
                        "type": "string",
                        "description": "Name of the inspection linked to the action."
                    },
                    "is_complete": {
                        "type": "boolean",
                        "description": "Flag to indicate the inspection is marked as complete."
                    },
                    "is_access_denied": {
                        "type": "boolean",
                        "description": "Flag to indicate the access for the inspection is denied."
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "description": "Flag to indicate whether the inspection is deleted or not."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the inspection was created."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the inspection was completed."
                    },
                    "template_name": {
                        "type": "string",
                        "description": "Name of the template this inspection was created from."
                    }
                },
                "description": "Context of an inspection started from a template associated with the action."
            },
            "s12.tasks.v1.Task.ListAnswer": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.ListResponse"
                        },
                        "title": "Responses of inspection item"
                    }
                },
                "title": "Answer returned for ListItem"
            },
            "s12.tasks.v1.Task.ListResponse": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "title": "Label for the response"
                    },
                    "color": {
                        "$ref": "#/components/schemas/s12.common.Color"
                    }
                },
                "title": "Response of List type InspectionItem"
            },
            "s12.tasks.v1.Task.MediaAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "title": "answer content of MediaItem"
                    }
                },
                "title": "Answer returned for MediaItem"
            },
            "s12.tasks.v1.Task.NumberComparison": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "description": "Used to compare values against a single number."
            },
            "s12.tasks.v1.Task.RangeComparison": {
                "type": "object",
                "properties": {
                    "lower": {
                        "type": "number",
                        "format": "double",
                        "description": "Represents the lower value of the range."
                    },
                    "upper": {
                        "type": "number",
                        "format": "double",
                        "description": "Represents the upper value of the range."
                    }
                },
                "description": "Used to compare values within a range."
            },
            "s12.tasks.v1.Task.Reference": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.ReferenceType"
                    },
                    "id": {
                        "type": "string",
                        "description": "Required. Reference ID."
                    },
                    "inspection_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.InspectionContext"
                    },
                    "sensor_alert_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.SensorAlertContext"
                    },
                    "sensor_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.SensorContext"
                    },
                    "incident_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.IncidentContext"
                    },
                    "action_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.ActionContext"
                    },
                    "linked_inspection_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.LinkedInspectionContext"
                    },
                    "asset_maintenance_plan_context": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AssetMaintenancePlanContext"
                    }
                },
                "title": "Reference is a type/id pair defined as:"
            },
            "s12.tasks.v1.Task.SensorAlertContext": {
                "type": "object",
                "properties": {
                    "sensor_alert_id": {
                        "type": "string",
                        "title": "ID of sensor alert context associated with the action"
                    },
                    "level": {
                        "$ref": "#/components/schemas/s12.tasks.v1.AlertEventLevel"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the alert event was created/updated."
                    },
                    "detected_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the first alert event was detected."
                    },
                    "sensor_id": {
                        "type": "string",
                        "title": "Sensor asset ID for which the event happened"
                    },
                    "site_name": {
                        "type": "string",
                        "title": "Name of the site at a time of event"
                    },
                    "metric_type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.MetricType"
                    },
                    "sensor_name": {
                        "type": "string",
                        "title": "Name of the sensor at a time of event"
                    },
                    "reading_type": {
                        "type": "string",
                        "title": "Sensor reading type"
                    },
                    "reading_name": {
                        "type": "string",
                        "title": "Sensor reading name"
                    }
                },
                "title": "context of sensor alert associated with the action"
            },
            "s12.tasks.v1.Task.SensorContext": {
                "type": "object",
                "title": "context of sensor associated with the action"
            },
            "s12.tasks.v1.Task.SignatureAnswer": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "name": {
                        "type": "string",
                        "title": "name on the signature"
                    },
                    "signed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp for when the signature answer was last updated"
                    }
                },
                "title": "Signature item stores user name and an image with signature"
            },
            "s12.tasks.v1.Task.Site": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the site associated with this task."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the site associated with this task."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the site associated with the task."
                    },
                    "area": {
                        "type": "string",
                        "title": "The area of the site associated with the task"
                    }
                },
                "description": "The folder (site) data of this task."
            },
            "s12.tasks.v1.Task.SliderAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "number",
                        "format": "double",
                        "title": "number of sliderAnswer"
                    },
                    "max": {
                        "type": "number",
                        "format": "double",
                        "description": "A double representing the maximum value allowed for this item. Negatives\nare allowed."
                    },
                    "min": {
                        "type": "number",
                        "format": "double",
                        "description": "A double representing the minimum value allowed for this item. Negatives\nare allowed."
                    }
                },
                "title": "Answer returned for SliderItem"
            },
            "s12.tasks.v1.Task.Status": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "title": "An ID uniquely identifying this task status message.\nFor example: 'aa70d8a6-af37-44f4-8768d8899fe274c5'"
                    },
                    "key": {
                        "type": "string",
                        "title": "A pre-defined value that the system can use to handle\nthe particular label e.g. analytics, filter based on it\nA key may look like: \"to do\" | \"In progress\" | \"Done\" | \"Can't do\""
                    },
                    "label": {
                        "type": "string",
                        "title": "A label associated with the key, typically for display purposes"
                    },
                    "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Used to order this status when displaying a list of statuses"
                    }
                },
                "title": "The task status"
            },
            "s12.tasks.v1.Task.SwitchAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "boolean",
                        "title": "Answer content for SwitchItem"
                    }
                },
                "description": "Answer returned for SwitchItem, exists in old inspections\nUsers can’t change answer to them & can’t attach actions to them either."
            },
            "s12.tasks.v1.Task.TemperatureAnswer": {
                "type": "object",
                "properties": {
                    "temperature": {
                        "type": "number",
                        "format": "double",
                        "title": "@deprecated. Use answer instead"
                    },
                    "display_unit": {
                        "$ref": "#/components/schemas/s12.common.TemperatureUnit"
                    },
                    "between": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.RangeComparison"
                    },
                    "above": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.NumberComparison"
                    },
                    "below": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.NumberComparison"
                    },
                    "answer": {
                        "type": "number",
                        "format": "double",
                        "title": "answer of TemperatureAnswer"
                    }
                },
                "title": "Answer returned for temperatureItem"
            },
            "s12.tasks.v1.Task.TextAnswer": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "string",
                        "title": "Text answer content"
                    },
                    "unit_symbol": {
                        "$ref": "#/components/schemas/s12.common.MeasurementUnitSymbol"
                    },
                    "format": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TextAnswerFormat"
                    }
                },
                "title": "Answer returned for TextItem, TextSingleItem, ScannerItem type"
            },
            "s12.tasks.v1.Task.User": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The UUID of this user."
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user."
                    }
                },
                "description": "The user associated to the task. They could be a creator or assignee."
            },
            "s12.tasks.v1.TaskCustomFieldAndValue": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Field"
                    },
                    "field_value": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValue"
                    }
                },
                "description": "TaskCustomFieldAndValue is a composite message containing the Field and FieldValue type from the typefield service\nField contains information about the field itself (e.g. name) while FieldValue contains the value that was inputted\ninto the instance of the Action this message is attached to."
            },
            "s12.tasks.v1.TaskFilter": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.StatusID"
                    },
                    "priority_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.PriorityID"
                    },
                    "site_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.SiteID"
                    },
                    "template_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.TemplateID"
                    },
                    "inspection_item_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.InspectionItemID"
                    },
                    "inspection_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.InspectionID"
                    },
                    "creator_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.CreatorID"
                    },
                    "reference": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Reference"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Duration"
                    },
                    "modified_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Duration"
                    },
                    "collaborators": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Collaborator"
                    },
                    "due_at": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Duration"
                    },
                    "title": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Search"
                    },
                    "description": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.Search"
                    },
                    "asset_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.AssetID"
                    },
                    "label_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.LabelID"
                    },
                    "task_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.TaskID"
                    },
                    "references": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.References"
                    },
                    "type_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.TypeID"
                    },
                    "asset_type_id": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.AssetTypeID"
                    }
                },
                "title": "TaskFilter represents a filter object which contains the filters\nfor listing actions and action summary"
            },
            "s12.tasks.v1.TaskFilter.AssetID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the asset_id should be one of the value provided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the asset_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.AssetTypeID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the asset_type_id should be one of the value provided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the asset_type_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.Collaborator": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "OR relation, represents the assignee_id should be one of the value\nprovided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the assignee_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.CreatorID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the creator_id should be\none of the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the creator_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.Duration": {
                "type": "object",
                "properties": {
                    "from": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.TimeFrom"
                    },
                    "to": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.TimeTo"
                    }
                },
                "description": "time duration filter."
            },
            "s12.tasks.v1.TaskFilter.FilterOperator": {
                "type": "string",
                "enum": [
                    "FILTER_OPERATOR_EQ",
                    "FILTER_OPERATOR_IN",
                    "FILTER_OPERATOR_NOT_IN"
                ],
                "title": "- FILTER_OPERATOR_EQ: field value = given value\n - FILTER_OPERATOR_IN: field value in given values\n - FILTER_OPERATOR_NOT_IN: field value ≠ given values"
            },
            "s12.tasks.v1.TaskFilter.InspectionID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the inspection_id should be\none of the value provided."
                    }
                },
                "description": "Operator: Can be FILTER_OPERATOR_IN OR FILTER_OPERATOR_NOT_IN.\nValue: OR relation, represents the inspection_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.InspectionItemID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the inspection_item_id should be\none of the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the inspection_item_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.LabelID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the label_id should be one of the value provided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the label_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.PriorityID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the priority_id should be one of the value\nprovided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the priority_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.References": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the reference_id should be\none of the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the reference_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.Search": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string",
                        "description": "`term` represents the text to search for."
                    }
                },
                "description": "text search filter."
            },
            "s12.tasks.v1.TaskFilter.SiteID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the site_id should be one of the value provided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the site_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.StatusID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "OR relation, represents the status_id should be one of the value\nprovided"
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the status_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.TaskID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the task_id should be\none of the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the task_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.TemplateID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "OR relation, represents the template_id should be one of the value\nprovided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: OR relation, represents the template_id should be one of the value provided."
            },
            "s12.tasks.v1.TaskFilter.TimeFrom": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "represents the time should be\nafter the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_EQ.\nValue: represents the time should be after the value provided."
            },
            "s12.tasks.v1.TaskFilter.TimeTo": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "represents the time should be\nbefore the value provided."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_EQ.\nValue: represents the time should be before the value provided."
            },
            "s12.tasks.v1.TaskFilter.TypeID": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskFilter.FilterOperator"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of type ids to be filtered on."
                    }
                },
                "description": "Operator: Should only be FILTER_OPERATOR_IN.\nValue: The list of type ids to be filtered on."
            },
            "s12.tasks.v1.TaskTemplate": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "description": "The unique identifier of the template."
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom defined template name."
                    },
                    "is_deleted": {
                        "type": "boolean"
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "is_access_denied": {
                        "type": "boolean"
                    },
                    "owner_id": {
                        "type": "string",
                        "title": "The id of the owner of the template"
                    }
                },
                "description": "Metadata related to the template associated with this action."
            },
            "s12.tasks.v1.TaskType": {
                "type": "string",
                "enum": [
                    "TASK_TYPE_ACTION",
                    "TASK_TYPE_CUSTOM"
                ],
                "description": "- TASK_TYPE_ACTION: Indicates this task is of type Action.\n - TASK_TYPE_CUSTOM: Indicates this task is of a custom type.",
                "title": "Type is the type of the current task"
            },
            "s12.tasks.v1.TasksService.UpdateTaskCustomFieldBody": {
                "type": "object",
                "properties": {
                    "field_value": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValue"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional. Date and time this modification occurred.\nMust be sent in the Internet Date-Time format.\nMore information about the type is available here:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp."
                    }
                },
                "description": "UpdateTaskCustomFieldRequest represents the parameters to update a custom\nfield linked to an action."
            },
            "s12.tasks.v1.TextAnswerFormat": {
                "type": "string",
                "enum": [
                    "TEXT",
                    "NUMBER"
                ],
                "default": "UNKNOWN_FORMAT",
                "description": "- TEXT: Normal textsingle item\n - NUMBER: Textsingle item with number format",
                "title": "Represents the format of a Textsingle item for the inspection context"
            },
            "s12.tasks.v1.TimelineItem": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "title": "The UUID of the timeline item"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "The UUID of the task this timeline is associated with."
                    },
                    "creator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC Timestamp for the timeline item."
                    },
                    "item_type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.Type"
                    },
                    "task_created_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskCreatedMessageData"
                    },
                    "task_assignee_added_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskAssigneeAddedMessageData"
                    },
                    "task_due_at_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskDueAtUpdatedMessageData"
                    },
                    "task_status_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskStatusUpdatedMessageData"
                    },
                    "task_priority_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskPriorityUpdatedMessageData"
                    },
                    "task_comment_added_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskCommentAddedMessageData"
                    },
                    "task_image_uploaded_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskImageUploadedMessageData"
                    },
                    "task_site_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskSiteUpdatedMessageData"
                    },
                    "task_category_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskCategoryUpdatedMessageData"
                    },
                    "incident_created_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.IncidentCreatedMessageData"
                    },
                    "task_notification_sent_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskNotificationSentMessageData"
                    },
                    "task_media_uploaded_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskMediaUploadedMessageData"
                    },
                    "task_assignee_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskAssigneeUpdatedMessageData"
                    },
                    "task_location_added_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskLocationAddedMessageData"
                    },
                    "task_inspection_completed_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskInspectionCompletedMessageData"
                    },
                    "task_inspection_deleted_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskInspectionDeletedMessageData"
                    },
                    "task_inspection_added_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskInspectionAddedMessageData"
                    },
                    "task_answer_added_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskAnswerAddedMessageData"
                    },
                    "task_asset_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskAssetUpdatedMessageData"
                    },
                    "task_labels_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskLabelsUpdatedMessageData"
                    },
                    "task_schedule_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskScheduleUpdatedMessageData"
                    },
                    "task_custom_field_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskCustomFieldUpdatedMessageData"
                    },
                    "task_occurred_at_updated_data": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.TaskOccurredAtUpdatedMessageData"
                    },
                    "activity_creator": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.ActivityCreator"
                    }
                },
                "description": "TimelineItem contains information about each item in the timeline."
            },
            "s12.tasks.v1.TimelineItem.ActivityCreator": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The UUID of the individual who created this timeline item."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the individual who created this timeline item."
                    },
                    "creator_type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TimelineItem.ActivityCreatorType"
                    }
                },
                "description": "Creator of the timeline item."
            },
            "s12.tasks.v1.TimelineItem.ActivityCreatorType": {
                "type": "string",
                "enum": [
                    "TYPE_NOT_SET",
                    "INTERNAL_USER",
                    "EXTERNAL_USER"
                ],
                "default": "TYPE_NOT_SET",
                "description": "The type of individual who has created this timeline item.\n\n - TYPE_NOT_SET: An unknown type of creator.\n - INTERNAL_USER: The creator is an authenticated user within the organisation.\n - EXTERNAL_USER: The creator is an unauthenticated user who has been given external access\nto the task."
            },
            "s12.tasks.v1.TimelineItem.IncidentCreatedMessageData": {
                "type": "object",
                "properties": {
                    "incident": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Incident"
                    }
                },
                "description": "Data about when an issue was created."
            },
            "s12.tasks.v1.TimelineItem.TaskAnswerAddedMessageData": {
                "type": "object",
                "properties": {
                    "question_text": {
                        "type": "string",
                        "description": "The text of the question that was answered."
                    },
                    "answer_text": {
                        "type": "string",
                        "description": "The text of the answer that was provided."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Question.QuestionType"
                    }
                },
                "description": "Data about when a custom question was answered on this issue."
            },
            "s12.tasks.v1.TimelineItem.TaskAssetUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "asset_id": {
                        "type": "string",
                        "title": "The UUID of an Asset assigned to a task"
                    },
                    "asset_code": {
                        "type": "string",
                        "title": "Asset code"
                    }
                },
                "description": "Data about when the asset of this task was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskAssigneeAddedMessageData": {
                "type": "object",
                "properties": {
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "Data about the people assigned to the task."
                    }
                },
                "description": "Data about when an assignee was added to the task."
            },
            "s12.tasks.v1.TimelineItem.TaskAssigneeUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Collaborator"
                        },
                        "description": "Assignees of the task that was updated."
                    }
                },
                "description": "Data about when an assignee was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskCategoryUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "category_id": {
                        "type": "string",
                        "description": "@deprecated. Use category instead.\nID of the category of the task that was updated.\nThe field has been deprecated, as more information about the category is\nin the `category` field."
                    },
                    "category": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Category"
                    }
                },
                "description": "Data about when an issue's category was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskCommentAddedMessageData": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "The text value of the comment."
                    }
                },
                "description": "Data about when a comment is added to a task."
            },
            "s12.tasks.v1.TimelineItem.TaskCreatedMessageData": {
                "type": "object",
                "properties": {
                    "task": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task"
                    }
                },
                "description": "Data about when an action was created."
            },
            "s12.tasks.v1.TimelineItem.TaskCustomFieldUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "title": "The ID of the field that was updated"
                    },
                    "field_name": {
                        "type": "string",
                        "title": "The name of the field that was updated"
                    }
                },
                "title": "Data about when a custom field was updated"
            },
            "s12.tasks.v1.TimelineItem.TaskDueAtUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The new due date of the task."
                    }
                },
                "description": "Data about when the due date of a task was changed."
            },
            "s12.tasks.v1.TimelineItem.TaskImageUploadedMessageData": {
                "type": "object",
                "properties": {
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    }
                },
                "description": "Data about when an image was added to a task. @deprecated\nThis has been deprecated in favour of media messages.\nThis is because the media messages allow videos and PDF as well as images."
            },
            "s12.tasks.v1.TimelineItem.TaskInspectionAddedMessageData": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "title": "ID of the inspection that is being added"
                    },
                    "template_title": {
                        "type": "string",
                        "title": "Title of template being added"
                    }
                },
                "description": "Data about when an inspection is linked to this issue."
            },
            "s12.tasks.v1.TimelineItem.TaskInspectionCompletedMessageData": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "description": "ID of the completed inspection."
                    },
                    "template_title": {
                        "type": "string",
                        "description": "The title of the template this inspection was created from."
                    }
                },
                "description": "Data about when an inspection linked to this issue is completed."
            },
            "s12.tasks.v1.TimelineItem.TaskInspectionDeletedMessageData": {
                "type": "object",
                "properties": {
                    "inspection_id": {
                        "type": "string",
                        "description": "ID of the deleted inspection."
                    },
                    "template_title": {
                        "type": "string",
                        "description": "The title of the template this inspection was created from."
                    }
                },
                "description": "Data about when an inspection linked to this issue was deleted."
            },
            "s12.tasks.v1.TimelineItem.TaskLabelsUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "label_texts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The texts of the labels that were updated. If empty, any assigned labels\nwere cleared."
                    }
                },
                "description": "Data about when labels were updated on this action."
            },
            "s12.tasks.v1.TimelineItem.TaskLocationAddedMessageData": {
                "type": "object",
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.AddressLocation"
                    }
                },
                "description": "Data about when a location is added to a task."
            },
            "s12.tasks.v1.TimelineItem.TaskMediaUploadedMessageData": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "Data about the media that were added at this time.\nUsers can add multiple pieces of media at once, so this may contain data\nabout multiple pieces of media."
                    }
                },
                "description": "Data about when media files were added to the task."
            },
            "s12.tasks.v1.TimelineItem.TaskNotificationSentMessageData": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UUIDs for any groups that received a notification in this timeline item.\nIDs that belong to the task's specific category. This is deprecated in\nfavour of the `groups` field."
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Group"
                        },
                        "description": "Data about any groups who received a notification in this timeline item."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.User"
                        },
                        "description": "Data about any individual users who received a notification in this\ntimeline item."
                    },
                    "external_users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.ExternalUser"
                        },
                        "description": "Data about any external users who received a notification in this\ntimeline item."
                    },
                    "site_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Group"
                        },
                        "description": "Groups that received a notification due to site based notification\nconfiguration."
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Site"
                    },
                    "is_critical": {
                        "type": "boolean",
                        "title": "Whether or not the notifications were sent as critical"
                    }
                },
                "description": "Data about when a notification is sent about a task."
            },
            "s12.tasks.v1.TimelineItem.TaskOccurredAtUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The new occurred at date of the task."
                    }
                },
                "description": "Data about when the occurred at date of the task was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskPriorityUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "priority_id": {
                        "type": "string",
                        "description": "The new priority UUID of the task."
                    }
                },
                "description": "Data about when the priority of a task was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskScheduleUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "title": "The ID of the schedule that was updated"
                    }
                },
                "title": "Data about when a schedule was updated"
            },
            "s12.tasks.v1.TimelineItem.TaskSiteUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "site": {
                        "$ref": "#/components/schemas/s12.tasks.v1.Task.Site"
                    },
                    "site_hierarchy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.tasks.v1.Task.Site"
                        },
                        "description": "Information about the hierarchy of the site.\nThis is ordered in ascending order, ie: Site -> Area -> Region -> State\n-> Country."
                    }
                },
                "description": "Data about when the folder (site) of this task was updated."
            },
            "s12.tasks.v1.TimelineItem.TaskStatusUpdatedMessageData": {
                "type": "object",
                "properties": {
                    "status_id": {
                        "type": "string",
                        "description": "The new status UUID of the task."
                    }
                },
                "description": "Data about when the status of a task was updated."
            },
            "s12.tasks.v1.TimelineItem.Type": {
                "type": "string",
                "enum": [
                    "TIMELINE_ITEM_UNKNOWN",
                    "TASK_CREATED",
                    "TASK_TITLE_UPDATED",
                    "TASK_DESCRIPTION_UPDATED",
                    "TASK_ASSIGNEE_ADDED",
                    "TASK_ASSIGNEE_REMOVED",
                    "TASK_DUE_AT_UPDATED",
                    "TASK_STATUS_UPDATED",
                    "TASK_PRIORITY_UPDATED",
                    "TASK_COMMENT_ADDED",
                    "TASK_IMAGE_UPLOADED",
                    "TASK_SITE_UPDATED",
                    "TASK_DELETED",
                    "TASK_CATEGORY_UPDATED",
                    "INCIDENT_CREATED",
                    "TASK_NOTIFICATION_SENT",
                    "TASK_MEDIA_UPLOADED",
                    "TASK_ASSIGNEE_UPDATED",
                    "TASK_LOCATION_ADDED",
                    "TASK_INSPECTION_COMPLETED",
                    "TASK_INSPECTION_DELETED",
                    "TASK_INSPECTION_ADDED",
                    "TASK_ANSWER_ADDED",
                    "TASK_ASSET_UPDATED",
                    "TASK_LABELS_UPDATED",
                    "TASK_SCHEDULE_UPDATED",
                    "INCIDENT_CHILD_CREATED",
                    "TASK_CUSTOM_FIELD_UPDATED",
                    "TASK_OCCURRED_AT_UPDATED"
                ],
                "default": "TIMELINE_ITEM_UNKNOWN",
                "description": "The type of the timeline item.\n\n - TIMELINE_ITEM_UNKNOWN: Removed fields related to the cancelled actions/issues integration\nAn unknown type of timeline item.\n - TASK_CREATED: A timeline item for the creation of an action.\n - TASK_TITLE_UPDATED: A timeline item indicating that the title of the task has been updated.\n - TASK_DESCRIPTION_UPDATED: A timeline item indicating that the task's description has been updated.\n - TASK_ASSIGNEE_ADDED: A timeline item indicating that an assignee has been added to the task.\n - TASK_ASSIGNEE_REMOVED: A timeline item indicating that an assignee has been removed from the\ntask.\n - TASK_DUE_AT_UPDATED: A timeline item indicating that the due date of the task has been\nupdated.\n - TASK_STATUS_UPDATED: A timeline item indicating that the status of the task has been updated.\n - TASK_PRIORITY_UPDATED: A timeline item indicating that the priority of the task has been\nupdated.\n - TASK_COMMENT_ADDED: A timeline item indicating that a comment has been added to the task.\n - TASK_IMAGE_UPLOADED: A timeline item indicating that an image was added to the task.\nThis field is deprecated, and was replaced by the `TASK_MEDIA_ADDED`\ntype. It is kept here to maintain backwards compatibility.\n\n@deprecated use TASK_MEDIA_UPLOADED instead\n - TASK_SITE_UPDATED: A timeline item indicating that the folder (site) of the task has been\nupdated.\n - TASK_DELETED: A timeline item indicating that this task has been deleted.\n - TASK_CATEGORY_UPDATED: A timeline item indicating that the category of this task has been\nupdated. This type is only relevant to issues.\n - INCIDENT_CREATED: A timeline item for the creation of an issue.\n - TASK_NOTIFICATION_SENT: A timeline item indicating that a notification about this task has been\nsent.\n - TASK_MEDIA_UPLOADED: A timeline item indicating that media has been added to this task.\n - TASK_ASSIGNEE_UPDATED: reserved 17, 18, 19;\n17 - 19 reserved for the cancelled actions/issues integration feature.\nA timeline item indicating that the assignee of this task has been\nupdated.\n - TASK_LOCATION_ADDED: A timeline item indicating the geolocation of this issue.\nThis type is only relevant to issues.\n - TASK_INSPECTION_COMPLETED: A timeline item indicating that an inspection that has been linked to an\nissue has been completed. This type is only relevant to issues.\n - TASK_INSPECTION_DELETED: A timeline item indicating that an inspection that has been linked to an\nissue has been deleted. This type is only relevant to issues.\n - TASK_INSPECTION_ADDED: A timeline item indicating that an inspection has been linked to an\nissue. This type is only relevant to issues.\n - TASK_ANSWER_ADDED: A timeline item indicating that an issue's custom question has been\nanswered. This type is only relevant to issues.\n - TASK_ASSET_UPDATED: A timeline item indicating that an action has an asset updated\n - TASK_LABELS_UPDATED: A timeline item indicating that an action has labels updated\n - TASK_SCHEDULE_UPDATED: A timeline item indicating that the schedule that created this action was\nupdated.\n - INCIDENT_CHILD_CREATED: A timeline item indicating that an action has been created from an issue\n - TASK_CUSTOM_FIELD_UPDATED: A timeline item indicating that a custom field on this task was updated.\n - TASK_OCCURRED_AT_UPDATED: A timeline item indicating that occurred at date for the task has been\nupdated."
            },
            "s12.tasks.v1.Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/s12.tasks.v1.TaskType"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of a type."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a type."
                    }
                },
                "description": "The type associated with an action."
            },
            "s12.tasks.v1.UnmapFieldFromTaskTypeResponse": {
                "type": "object",
                "description": "The parameters for `UnmapFieldFromTaskTypeResponse`",
                "title": "UnmapFieldFromTaskTypeResponse"
            },
            "s12.tasks.v1.UpdateActionLabelsResponse": {
                "type": "object",
                "title": "UpdateActionLabelsResponse is an empty response"
            },
            "s12.tasks.v1.UpdateAssetResponse": {
                "type": "object"
            },
            "s12.tasks.v1.UpdateAssigneesResponse": {
                "type": "object",
                "title": "UpdateAssigneesResponse represents the response for `UpdateAssignees`"
            },
            "s12.tasks.v1.UpdateOccurredAtResponse": {
                "type": "object",
                "title": "UpdateOccurredAtResponse represents the response of the\nUpdateOccurredAt call"
            },
            "s12.tasks.v1.UpdateSiteResponse": {
                "type": "object"
            },
            "s12.tasks.v1.UpdateTaskCustomFieldResponse": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "string"
                    }
                },
                "description": "UpdateTaskCustomFieldResponse is the response for updating a custom field\nlinked to an action for `UpdateTaskCustomField`."
            },
            "s12.tasks.v1.UpsertActionLabelRequest": {
                "type": "object",
                "properties": {
                    "label": {
                        "$ref": "#/components/schemas/s12.tasks.v1.ActionLabel"
                    }
                },
                "description": "UpsertActionLabelRequest represents the request to create or update an action label in your organization."
            },
            "s12.tasks.v1.UpsertActionLabelResponse": {
                "type": "object",
                "description": "UpsertActionLabelResponse is the response to a request to create or update an action label."
            },
            "s12.templates.v1.AddressTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Address define template items with location data"
            },
            "s12.templates.v1.ArchiveTemplateResponse": {
                "type": "object",
                "title": "Result returned from ArchiveTemplate"
            },
            "s12.templates.v1.AssetTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "asset_type_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of asset types selected for this item"
                    },
                    "reading_configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.AssetTemplateItem.ReadingConfig"
                        },
                        "title": "List of reading configs mapped to number format items"
                    }
                },
                "title": "Asset item represents item for an asset"
            },
            "s12.templates.v1.AssetTemplateItem.ReadingConfig": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "title": "ID of the number format item linked to the reading config"
                    },
                    "reading_config_id": {
                        "type": "string",
                        "title": "ID of the reading config"
                    }
                }
            },
            "s12.templates.v1.CalculationData": {
                "type": "object",
                "properties": {
                    "formula": {
                        "type": "string",
                        "title": "the calculation expression"
                    },
                    "autofill_item_id": {
                        "type": "string",
                        "title": "optional. Used only for autofill UI\nUUID of item that is the source of the autofill"
                    }
                },
                "title": "CalculationData has information of the formula which will be using in"
            },
            "s12.templates.v1.CategoryTemplateItem": {
                "type": "object",
                "title": "Category item is a container that can contain other item types\nCategories are always found within a section and there can be\nmultiple category items within a section"
            },
            "s12.templates.v1.CheckboxTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Checkbox items define question with boolean answer value type - Yes/No\n(True/False)"
            },
            "s12.templates.v1.CompanyTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "allowed_company_type": {
                        "$ref": "#/components/schemas/s12.templates.v1.CompanyTemplateItem.CompanyTypes"
                    }
                },
                "title": "Company item represents the template item for a company"
            },
            "s12.templates.v1.CompanyTemplateItem.CompanyTypes": {
                "type": "object",
                "properties": {
                    "all": {
                        "type": "boolean",
                        "title": "Include all company types within this org"
                    },
                    "company_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.CompanyType"
                        }
                    }
                },
                "title": "Represents a collection of company types"
            },
            "s12.templates.v1.CompanyType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the company type"
                    }
                },
                "title": "CompanyType represents the type of a company"
            },
            "s12.templates.v1.DateTimeTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "enable_date": {
                        "type": "boolean",
                        "title": "Enable date turns on input for date values"
                    },
                    "enable_time": {
                        "type": "boolean",
                        "title": "Enable date turns on input for time values"
                    }
                },
                "title": "Date Time define template items with date and(or) time"
            },
            "s12.templates.v1.DeleteTemplateByIDResponse": {
                "type": "object",
                "title": "Result returned from DeleteTemplate"
            },
            "s12.templates.v1.DrawingTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    }
                },
                "title": "Drawing define template items with user annotated images"
            },
            "s12.templates.v1.DynamicTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Dynamic item (repeated section) define template items used to wrap other item\ntypes with ability to multiply the inner item"
            },
            "s12.templates.v1.GetTemplateByIDResponse": {
                "type": "object",
                "properties": {
                    "template": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template"
                    }
                },
                "title": "Result of `GetTemplateByID` method"
            },
            "s12.templates.v1.GetTemplateByInspectionIDResponse": {
                "type": "object",
                "properties": {
                    "template": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template"
                    }
                },
                "title": "Result of `GetTemplateByInspectionID` method"
            },
            "s12.templates.v1.InstructionTemplateItem": {
                "type": "object",
                "properties": {
                    "text": {
                        "$ref": "#/components/schemas/s12.templates.v1.InstructionTemplateItem.TextInstruction"
                    },
                    "media": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "link": {
                        "$ref": "#/components/schemas/s12.templates.v1.InstructionTemplateItem.LinkInstruction"
                    }
                }
            },
            "s12.templates.v1.InstructionTemplateItem.LinkInstruction": {
                "type": "object",
                "properties": {
                    "link": {
                        "type": "string",
                        "title": "Weblink for the link instruction item"
                    }
                }
            },
            "s12.templates.v1.InstructionTemplateItem.TextInstruction": {
                "type": "object"
            },
            "s12.templates.v1.InvalidTemplateItem": {
                "type": "object",
                "title": "Invalid items define template items that are corrupted"
            },
            "s12.templates.v1.ListTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "failed_responses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "failed responses store list of ID's of list values engine will use to mark\nquestion as failed"
                    },
                    "response_set_id": {
                        "type": "string",
                        "title": "response set ID is uuid value used to reference response set from response\nset's collection (Template.response_sets or Template.global_response_sets)"
                    },
                    "multiple_selection": {
                        "type": "boolean",
                        "title": "multiple selection defines if question supports multiple values to be\nselected or not (false by default)"
                    },
                    "calculation_data": {
                        "$ref": "#/components/schemas/s12.templates.v1.CalculationData"
                    }
                },
                "title": "List items define template items with pre-defined list of values\nThis type supports multiple values as an answer"
            },
            "s12.templates.v1.LogicfieldTemplateItem": {
                "type": "object",
                "properties": {
                    "text_equal": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Text"
                    },
                    "text_not_equal": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Text"
                    },
                    "checkbox_checked": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Checkbox"
                    },
                    "checkbox_unchecked": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Checkbox"
                    },
                    "response_is_selected": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "response_is_not_selected": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "response_is": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "response_is_not": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "response_is_in": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "response_is_not_in": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Response"
                    },
                    "temperature_passes": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Temperature"
                    },
                    "temperature_fails": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Temperature"
                    },
                    "response_is_less_than": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_less_than_or_equal_to": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_equal_to": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_not_equal_to": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_greater_than": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_greater_than_or_equal_to": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "response_is_between": {
                        "$ref": "#/components/schemas/s12.templates.v1.RangeComparison"
                    },
                    "response_is_not_between": {
                        "$ref": "#/components/schemas/s12.templates.v1.RangeComparison"
                    },
                    "switch_is_on": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Switch"
                    },
                    "switch_is_off": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Switch"
                    },
                    "signature_exist": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Signature"
                    },
                    "signature_not_exist": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem.Signature"
                    },
                    "require_note": {
                        "type": "boolean"
                    },
                    "require_media": {
                        "type": "boolean"
                    },
                    "require_action": {
                        "type": "boolean"
                    }
                },
                "title": "Logicfield items"
            },
            "s12.templates.v1.LogicfieldTemplateItem.Checkbox": {
                "type": "object",
                "description": "CheckboxLogicField has information about whether the field was evaluated\nas true/false."
            },
            "s12.templates.v1.LogicfieldTemplateItem.Response": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "ListField/QuestionField holds the responses to compare against.\nEven when only one response can be selected for the field (Question),\nWe still convert that into an array when comparing in order to\nreuse the same comparing logic."
            },
            "s12.templates.v1.LogicfieldTemplateItem.Signature": {
                "type": "object",
                "description": "SignatureLogicField has information about whether the field was evaluated\nas true/false."
            },
            "s12.templates.v1.LogicfieldTemplateItem.Switch": {
                "type": "object",
                "description": "SwitchLogicField has information about whether the field was evaluated\nas true/false."
            },
            "s12.templates.v1.LogicfieldTemplateItem.Temperature": {
                "type": "object",
                "title": "TemperatureLogicField has information about whether\nthe recorded temperature passes or fails compared to the criteria"
            },
            "s12.templates.v1.LogicfieldTemplateItem.Text": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "description": "TextLogicField holds the value to compare against."
            },
            "s12.templates.v1.MediaTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Media items define template items that give user ability to attach images"
            },
            "s12.templates.v1.NumberComparison": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "description": "Used to compare values against a single number."
            },
            "s12.templates.v1.QuestionTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "failed_responses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "failed responses store list of ID's of list values engine will use to mark\nquestion as failed"
                    },
                    "response_set_id": {
                        "type": "string",
                        "title": "response set ID is uuid value used to reference response set from response\nset's collection (Template.response_sets or Template.global_response_sets)"
                    },
                    "calculation_data": {
                        "$ref": "#/components/schemas/s12.templates.v1.CalculationData"
                    }
                },
                "title": "Question items define template items with pre-defined list of values\nThis type does not support multiple answers"
            },
            "s12.templates.v1.RangeComparison": {
                "type": "object",
                "properties": {
                    "lower": {
                        "type": "number",
                        "format": "double",
                        "description": "Represents the lower value of the range."
                    },
                    "upper": {
                        "type": "number",
                        "format": "double",
                        "description": "Represents the upper value of the range."
                    }
                },
                "description": "Used to compare values within a range."
            },
            "s12.templates.v1.ResponseSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.ResponseSet.Response"
                        }
                    },
                    "is_grs": {
                        "type": "boolean",
                        "title": "is_grs is true if this responset set is global response set"
                    }
                },
                "title": "Response sets represent a collection of values used across template fields\n(list items, question items...)"
            },
            "s12.templates.v1.ResponseSet.Response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Response ID in format of UUID or a legacy long id. For ex.:\n'060ace00-1f61-468e-9c42-918fa93badcf' or\n'56341C6E-35A7-4C97-9C5E-7AC79673EAB2-539-000001F95B327819'"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label of given response option"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score represents a value added to inspection score when given response\nselected from the response set"
                    },
                    "color": {
                        "type": "string",
                        "title": "Color represents a color representation of given option and is decimal\nrepresentation of RGB. For example 'red' would be '(204,0,0)'"
                    },
                    "score_enabled": {
                        "type": "boolean",
                        "title": "Score enabled represents a boolean value, whether the response score\nshould count towards the total score of the inspection"
                    }
                }
            },
            "s12.templates.v1.RestoreArchivedTemplateRequest": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "title": "The unique identifier for the template"
                    }
                },
                "title": "The parameter body to `RestoreArchivedTemplate`",
                "required": [
                    "template_id"
                ]
            },
            "s12.templates.v1.RestoreArchivedTemplateResponse": {
                "type": "object",
                "title": "Result returned from RestoreArchivedTemplate"
            },
            "s12.templates.v1.ScannerTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Scanner items are legacy item which define question with text answer value\ntype -"
            },
            "s12.templates.v1.SectionTemplateItem": {
                "type": "object",
                "properties": {
                    "approvers": {
                        "$ref": "#/components/schemas/s12.templates.v1.SectionTemplateItem.Approvers"
                    },
                    "user_defined_approvers": {
                        "type": "boolean",
                        "title": "Whether the approvers are user defined"
                    }
                },
                "title": "Section items define template items used to wrap other item types"
            },
            "s12.templates.v1.SectionTemplateItem.Approvers": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "IDs of individual users who can edit the approval page"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "IDs of the groups which can edit the approval page"
                    },
                    "site_intersection_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "IDs of the groups which will be used to create the intersection with the selected site"
                    }
                },
                "title": "IDs of the users/groups/site_intersections that can approve the Approval Page"
            },
            "s12.templates.v1.SignatureTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Signature items represent an input with image containing user signature"
            },
            "s12.templates.v1.SiteTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Site item represents item for a site"
            },
            "s12.templates.v1.SliderTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "max": {
                        "type": "number",
                        "format": "double",
                        "description": "A double representing the maximum value allowed for this item. Negatives\nare allowed."
                    },
                    "min": {
                        "type": "number",
                        "format": "double",
                        "description": "A double representing the minimum value allowed for this item. Negatives\nare allowed."
                    },
                    "increment": {
                        "type": "number",
                        "format": "double",
                        "description": "A double representing how much a value can jump in either direction.\nThis is always a positive value."
                    }
                },
                "description": "Slider item represents a number item that is bounded by an upper (max) and\nlower (min) value."
            },
            "s12.templates.v1.SwitchTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Switch items are legacy item which define question with boolean answer value\ntype - Yes/No, data structure is same as checkbox (True/False)"
            },
            "s12.templates.v1.TemperatureTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "display_unit": {
                        "$ref": "#/components/schemas/s12.common.TemperatureUnit"
                    },
                    "between": {
                        "$ref": "#/components/schemas/s12.templates.v1.RangeComparison"
                    },
                    "above": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    },
                    "below": {
                        "$ref": "#/components/schemas/s12.templates.v1.NumberComparison"
                    }
                },
                "title": "Temperature items represent a number item,\nthat can have the option to be connected to a bluetooth thermometer"
            },
            "s12.templates.v1.Template": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID is unique alphanumeric value"
                    },
                    "revision_id": {
                        "type": "string",
                        "title": "Revisions are unique between templates with same ID and identify templates\nstate"
                    },
                    "name": {
                        "type": "string",
                        "title": "Custom defined template name"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplatePermissions"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplateItem"
                        },
                        "title": "List of root level sections defined for given template revision"
                    },
                    "response_sets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.ResponseSet"
                        },
                        "title": "List of response sets defined for given template revision"
                    },
                    "global_response_sets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of global response set ids linked to list items in given template"
                    },
                    "title_rules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of item ids, the values of which are combined to generate the\ninspection title"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "/ All the media linked to the template. this information is repeated in\nindividual items."
                    },
                    "mandatory_mark_as_complete": {
                        "type": "boolean",
                        "title": "Should the inspections be mandatory to mark as complete"
                    },
                    "description": {
                        "type": "string",
                        "title": "Custom defined template description"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "template creation timestamp"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "template last modification timestamp"
                    },
                    "author": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template.Author"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template.Owner"
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "whether or not the template is archived"
                    },
                    "metadata_image": {
                        "$ref": "#/components/schemas/s12.common.Media"
                    },
                    "access_level": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template.AccessLevel"
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date this template was last used to create an inspection"
                    },
                    "added_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date the template was added to the users account. If its from the public\nlibrary this will be download date otherwise it will be the created date"
                    },
                    "revision_key": {
                        "type": "string",
                        "title": "Revision key from the template document"
                    },
                    "support_site_as_question_type": {
                        "type": "boolean"
                    },
                    "date_draft_modified": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Datetime when the draft version was last modified"
                    },
                    "draft_author_name": {
                        "type": "string",
                        "title": "Author who last modified the draft"
                    },
                    "origin_information": {
                        "$ref": "#/components/schemas/s12.templates.v1.Template.OriginInformation"
                    },
                    "translation_id": {
                        "type": "string",
                        "title": "Translation set ID"
                    },
                    "is_locked_from_shared_library": {
                        "type": "boolean",
                        "title": "Whether or not the template is restricted from the shared library"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateSettings"
                    }
                },
                "title": "Template message define Template instance"
            },
            "s12.templates.v1.Template.AccessLevel": {
                "type": "string",
                "enum": [
                    "ACCESS_LEVEL_UNKNOWN",
                    "ACCESS_LEVEL_VIEW",
                    "ACCESS_LEVEL_EDIT",
                    "ACCESS_LEVEL_DELETE"
                ],
                "default": "ACCESS_LEVEL_UNKNOWN"
            },
            "s12.templates.v1.Template.Author": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "user id of the author"
                    },
                    "name": {
                        "type": "string",
                        "title": "name of the author"
                    }
                }
            },
            "s12.templates.v1.Template.OriginInformation": {
                "type": "object",
                "properties": {
                    "origin": {
                        "type": "string",
                        "title": "where the template originated from"
                    },
                    "origin_id": {
                        "type": "string",
                        "title": "the ID of the original template"
                    }
                }
            },
            "s12.templates.v1.Template.Owner": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "user id of the owner"
                    },
                    "name": {
                        "type": "string",
                        "title": "name of the author"
                    }
                }
            },
            "s12.templates.v1.TemplateItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "id of given item"
                    },
                    "label": {
                        "type": "string",
                        "title": "label of given item"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplateItem"
                        },
                        "title": "child items of given field"
                    },
                    "section": {
                        "$ref": "#/components/schemas/s12.templates.v1.SectionTemplateItem"
                    },
                    "text": {
                        "$ref": "#/components/schemas/s12.templates.v1.TextTemplateItem"
                    },
                    "list": {
                        "$ref": "#/components/schemas/s12.templates.v1.ListTemplateItem"
                    },
                    "question": {
                        "$ref": "#/components/schemas/s12.templates.v1.QuestionTemplateItem"
                    },
                    "checkbox": {
                        "$ref": "#/components/schemas/s12.templates.v1.CheckboxTemplateItem"
                    },
                    "logicfield": {
                        "$ref": "#/components/schemas/s12.templates.v1.LogicfieldTemplateItem"
                    },
                    "dynamicfield": {
                        "$ref": "#/components/schemas/s12.templates.v1.DynamicTemplateItem"
                    },
                    "media": {
                        "$ref": "#/components/schemas/s12.templates.v1.MediaTemplateItem"
                    },
                    "address": {
                        "$ref": "#/components/schemas/s12.templates.v1.AddressTemplateItem"
                    },
                    "datetime": {
                        "$ref": "#/components/schemas/s12.templates.v1.DateTimeTemplateItem"
                    },
                    "textsingle": {
                        "$ref": "#/components/schemas/s12.templates.v1.TextSingleTemplateItem"
                    },
                    "drawing": {
                        "$ref": "#/components/schemas/s12.templates.v1.DrawingTemplateItem"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/s12.templates.v1.SignatureTemplateItem"
                    },
                    "category": {
                        "$ref": "#/components/schemas/s12.templates.v1.CategoryTemplateItem"
                    },
                    "temperature": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemperatureTemplateItem"
                    },
                    "slider": {
                        "$ref": "#/components/schemas/s12.templates.v1.SliderTemplateItem"
                    },
                    "instruction": {
                        "$ref": "#/components/schemas/s12.templates.v1.InstructionTemplateItem"
                    },
                    "switch": {
                        "$ref": "#/components/schemas/s12.templates.v1.SwitchTemplateItem"
                    },
                    "scanner": {
                        "$ref": "#/components/schemas/s12.templates.v1.ScannerTemplateItem"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/s12.templates.v1.AssetTemplateItem"
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.templates.v1.SiteTemplateItem"
                    },
                    "company": {
                        "$ref": "#/components/schemas/s12.templates.v1.CompanyTemplateItem"
                    },
                    "table": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItem.TableDefinition"
                    },
                    "unsupported": {
                        "$ref": "#/components/schemas/s12.templates.v1.UnsupportedTemplateItem"
                    },
                    "invalid": {
                        "$ref": "#/components/schemas/s12.templates.v1.InvalidTemplateItem"
                    }
                },
                "title": "Wrapper for template items collection"
            },
            "s12.templates.v1.TemplateItem.TableDefinition": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "max_lines": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum number of lines allowed in the table"
                    }
                },
                "title": "Table item define template items to collect information in a\ntabular format"
            },
            "s12.templates.v1.TemplateItemOptions": {
                "type": "object",
                "properties": {
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "is_mandatory defines if user required to provide field value"
                    },
                    "weighting": {
                        "type": "number",
                        "format": "double",
                        "title": "weighting represents value used to calculate inspection score"
                    }
                },
                "title": "Common template item options"
            },
            "s12.templates.v1.TemplatePermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission.Type"
                    }
                },
                "title": "Template permission represent permission entity - user or role"
            },
            "s12.templates.v1.TemplatePermission.Type": {
                "type": "string",
                "enum": [
                    "USER",
                    "ROLE"
                ],
                "default": "USER",
                "description": "- USER: `USER` types for user based permissions\n - ROLE: `ROLE` types for role based permissions",
                "title": "Type of templates permission"
            },
            "s12.templates.v1.TemplatePermissions": {
                "type": "object",
                "properties": {
                    "edit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission"
                        }
                    },
                    "view": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission"
                        }
                    },
                    "owner": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission"
                        }
                    },
                    "delete": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission"
                        }
                    },
                    "context": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.templates.v1.TemplatePermission"
                        }
                    }
                },
                "title": "Template permissions represent a set's of user/role ID's in desired\npermission set's"
            },
            "s12.templates.v1.TemplateSettings": {
                "type": "object",
                "properties": {
                    "is_add_note_disabled": {
                        "type": "boolean",
                        "description": "Whether or not you can add notes to a template.\nBy default, notes can be added.\nWhen disabled via this setting, notes can still be added via logic."
                    },
                    "is_attach_media_disabled": {
                        "type": "boolean",
                        "description": "Whether or not you can attach media to a template.\nBy default, media can be attached.\nWhen disabled via this setting, media can still be attached via logic."
                    },
                    "is_create_action_disabled": {
                        "type": "boolean",
                        "description": "Whether or not you can create actions to a template.\nBy default, actions can be created.\nWhen disabled via this setting, actions can still be created via logic."
                    }
                },
                "title": "Settings related to the template"
            },
            "s12.templates.v1.TemplatesService.ArchiveTemplateBody": {
                "type": "object",
                "title": "The parameter body to `ArchiveTemplate`"
            },
            "s12.templates.v1.TextSingleTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    },
                    "text_format": {
                        "$ref": "#/components/schemas/s12.templates.v1.TextSingleTemplateItem.TextFormat"
                    },
                    "calculation_data": {
                        "$ref": "#/components/schemas/s12.templates.v1.CalculationData"
                    },
                    "reading_config_id": {
                        "type": "string",
                        "title": "ID of the reading config linked to this item"
                    }
                },
                "title": "Text Single items define template items used as single line text input"
            },
            "s12.templates.v1.TextSingleTemplateItem.TextFormat": {
                "type": "string",
                "enum": [
                    "TEXT",
                    "NUMBER",
                    "EMAIL",
                    "PHONENUMBER",
                    "PEOPLE"
                ],
                "default": "TEXT"
            },
            "s12.templates.v1.TextTemplateItem": {
                "type": "object",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/s12.templates.v1.TemplateItemOptions"
                    }
                },
                "title": "Text items define template items used as multiline text input"
            },
            "s12.templates.v1.UnsupportedTemplateItem": {
                "type": "object",
                "title": "Unsupported items define template items that are not supported in the\ninspections experience"
            },
            "s12.thepub.v1.AddNewUserToGroupResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user IDs in the group."
                    }
                },
                "description": "Result returned from `AddNewUserToGroup`",
                "title": "AddNewUserToGroupResponse"
            },
            "s12.thepub.v1.AddUserRequest": {
                "type": "object",
                "properties": {
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user."
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the user."
                    },
                    "message": {
                        "type": "string",
                        "description": "Message passed to the newly created user."
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubSeatType"
                    }
                },
                "description": "The parameters for `AddUser`",
                "title": "AddUserRequest",
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "password"
                ]
            },
            "s12.thepub.v1.AddUserResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/s12.thepub.v1.AddUserResponse.UserResponse"
                    }
                },
                "description": "Result returned from `AddUser`",
                "title": "AddUserResponse"
            },
            "s12.thepub.v1.AddUserResponse.UserResponse": {
                "type": "object",
                "properties": {
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the created user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the created user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the created user."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "The id of the created user."
                    }
                },
                "title": "User response"
            },
            "s12.thepub.v1.CreateGRSResponseResponse": {
                "type": "object",
                "properties": {
                    "response": {
                        "$ref": "#/components/schemas/s12.thepub.v1.GetGRSResponse"
                    }
                },
                "description": "Result returned from `CreateGRSResponse`",
                "title": "CreateGRSResponseResponse"
            },
            "s12.thepub.v1.CreateGlobalResponseSetRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the global response set."
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateGRSResponse"
                        },
                        "description": "The responses to add to the global response set."
                    }
                },
                "description": "The parameters for `CreateGlobalResponseSet`",
                "title": "CreateGlobalResponseSetRequest"
            },
            "s12.thepub.v1.CreateGlobalResponseSetResponse": {
                "type": "object",
                "properties": {
                    "responseset_id": {
                        "type": "string",
                        "description": "The id of the global response set."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the global response set."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the global response set was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the global response set was last updated."
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.GetGRSResponse"
                        },
                        "description": "The responses in the global response set."
                    }
                },
                "description": "Result returned from `CreateGlobalResponseSet`",
                "title": "CreateGlobalResponseSetResponse"
            },
            "s12.thepub.v1.CreateGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the group to be created."
                    }
                },
                "description": "The parameters for `CreateGroup`",
                "title": "CreateGroupRequest",
                "required": [
                    "name"
                ]
            },
            "s12.thepub.v1.CreateGroupResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the group."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the group."
                    }
                },
                "description": "Result returned from `CreateGroup`",
                "title": "CreateGroupResponse"
            },
            "s12.thepub.v1.DeleteGRSResponseResponse": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "description": "If the response was deleted."
                    }
                },
                "description": "Result returned from `DeleteGRSResponse`",
                "title": "DeleteGRSResponseResponse"
            },
            "s12.thepub.v1.DeleteGlobalResponseSetResponse": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "description": "If the global response set was deleted."
                    }
                },
                "description": "Result returned from `DeleteGlobalResponseSet`",
                "title": "DeleteGlobalResponseSetResponse"
            },
            "s12.thepub.v1.DeleteInspectionWebReportLinkResponse": {
                "type": "object",
                "description": "Result returned from `DeleteInspectionWebReportLink`",
                "title": "DeleteInspectionWebReportLinkResponse"
            },
            "s12.thepub.v1.FeedActionAssigneesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedActionAssigneesResponse.FeedActionAssignee"
                        },
                        "description": "The action assignees."
                    }
                },
                "description": "The response for `FeedActionAssignees`",
                "title": "FeedActionAssigneesResponse"
            },
            "s12.thepub.v1.FeedActionAssigneesResponse.FeedActionAssignee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique action assignee ID."
                    },
                    "action_id": {
                        "type": "string",
                        "description": "ID of the action."
                    },
                    "assignee_id": {
                        "type": "string",
                        "description": "ID of the assignee."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the assignee."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "Organisation that owns this action."
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of assignee."
                    }
                },
                "description": "An action assignee returned from `FeedActionAssignees`",
                "title": "FeedActionAssignee"
            },
            "s12.thepub.v1.FeedActionTimelineItemsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedActionTimelineItemsResponse.FeedActionTimelineItem"
                        },
                        "description": "The action timeline items."
                    }
                },
                "description": "The response for `FeedActionTimelineItems`",
                "title": "FeedActionTimelineItemsResponse"
            },
            "s12.thepub.v1.FeedActionTimelineItemsResponse.FeedActionTimelineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the timeline item."
                    },
                    "task_id": {
                        "type": "string",
                        "description": "ID of the action."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the SafetyCulture organization."
                    },
                    "task_creator_id": {
                        "type": "string",
                        "description": "ID of the timeline item's action creator."
                    },
                    "task_creator_name": {
                        "type": "string",
                        "description": "Name of the timeline item's action creator."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time a timeline item was created in Coordinated Universal Time (UTC)."
                    },
                    "creator_id": {
                        "type": "string",
                        "description": "ID of the timeline item's creator."
                    },
                    "creator_name": {
                        "type": "string",
                        "description": "Name of the timeline item's creator."
                    },
                    "item_type": {
                        "type": "string",
                        "description": "Type of a timeline item."
                    },
                    "item_data": {
                        "type": "string",
                        "description": "Data of a timeline item."
                    }
                },
                "description": "An action timeline item returned from `FeedActionTimelineItems`",
                "title": "FeedActionTimelineItem"
            },
            "s12.thepub.v1.FeedActionsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedActionsResponse.FeedAction"
                        },
                        "description": "The actions returned."
                    }
                },
                "description": "The response for `FeedActions`",
                "title": "FeedActionsResponse"
            },
            "s12.thepub.v1.FeedActionsResponse.FeedAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the action."
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the action."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "Site ID associated with the action."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the action."
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the action."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the action."
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Due date of the action."
                    },
                    "creator_user_id": {
                        "type": "string",
                        "description": "User ID of the user who created this action."
                    },
                    "creator_user_name": {
                        "type": "string",
                        "description": "Name of the user who created this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this action was created."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this action was last modified."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "ID of the template this action was created against."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation that owns this action."
                    },
                    "audit_id": {
                        "type": "string",
                        "description": "ID of the inspection this action was created against."
                    },
                    "audit_title": {
                        "type": "string",
                        "description": "Title of the inspection this action was created against."
                    },
                    "audit_item_id": {
                        "type": "string",
                        "description": "ID of the item this action was created against."
                    },
                    "audit_item_label": {
                        "type": "string",
                        "description": "Label of the item this action was created against."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this action was completed."
                    },
                    "action_label": {
                        "type": "string",
                        "description": "Action label associated with the action."
                    }
                },
                "description": "An action returned from `FeedActions`",
                "title": "FeedAction"
            },
            "s12.thepub.v1.FeedActivityLogEventsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedActivityLogEventsResponse.FeedActivityLogEvent"
                        },
                        "description": "The activity log event."
                    }
                }
            },
            "s12.thepub.v1.FeedActivityLogEventsResponse.FeedActivityLogEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique event ID."
                    },
                    "event_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this event was captured."
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of event."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User who initiated the event."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "Organisation where this event took place."
                    },
                    "client_class": {
                        "type": "string",
                        "description": "Type of client that initiated this event (web, mobile, etc)."
                    },
                    "agent": {
                        "type": "string",
                        "description": "User agent that initiated this event."
                    },
                    "metadata": {
                        "type": "string",
                        "description": "Associated event metadata."
                    },
                    "remote_ip": {
                        "type": "string",
                        "description": "IP that this event originated from if available."
                    },
                    "initiator": {
                        "type": "string",
                        "description": "Type of event, user, system, etc."
                    }
                }
            },
            "s12.thepub.v1.FeedAssetsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedAssetsResponse.FeedAsset"
                        },
                        "description": "The issue timeline items."
                    }
                },
                "description": "The response for `FeedAssets`",
                "title": "FeedAssetsResponse"
            },
            "s12.thepub.v1.FeedAssetsResponse.FeedAsset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the asset."
                    },
                    "code": {
                        "type": "string",
                        "description": "User-defined ID of the asset."
                    },
                    "type_id": {
                        "type": "string",
                        "description": "Type ID of the asset."
                    },
                    "type_name": {
                        "type": "string",
                        "description": "Type name of the asset."
                    },
                    "fields": {
                        "type": "string",
                        "description": "Fields associated to the asset type."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the asset was created in Coordinated Universal Time (UTC)."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the asset was modified in Coordinated Universal Time (UTC)."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "ID of the site associated with the asset."
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of the asset."
                    }
                },
                "description": "An asset returned from `FeedAssets`",
                "title": "FeedAsset"
            },
            "s12.thepub.v1.FeedGroupUsersResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedGroupUsersResponse.FeedGroupUser"
                        },
                        "description": "The group users returned."
                    }
                },
                "description": "The response for `FeedGroupUsers`",
                "title": "FeedGroupUsersResponse"
            },
            "s12.thepub.v1.FeedGroupUsersResponse.FeedGroupUser": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "ID of the user."
                    },
                    "group_id": {
                        "type": "string",
                        "description": "ID of the group."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    }
                },
                "description": "A group user returned from `FeedGroupUsers`",
                "title": "FeedGroupUser"
            },
            "s12.thepub.v1.FeedGroupsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedGroupsResponse.FeedGroup"
                        },
                        "description": "The groups returned."
                    }
                },
                "description": "The response for `FeedGroups`",
                "title": "FeedGroupsResponse"
            },
            "s12.thepub.v1.FeedGroupsResponse.FeedGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the group."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of group."
                    }
                },
                "description": "A group returned from `FeedGroups`",
                "title": "FeedGroup"
            },
            "s12.thepub.v1.FeedInspectionItemsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedInspectionItemsResponse.FeedInspectionItem"
                        },
                        "description": "The inspection items returned."
                    }
                },
                "description": "The response for `FeedInspectionItems`",
                "title": "FeedInspectionItemsResponse"
            },
            "s12.thepub.v1.FeedInspectionItemsResponse.FeedInspectionItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Combined inspection item ID."
                    },
                    "item_id": {
                        "type": "string",
                        "description": "Item ID."
                    },
                    "audit_id": {
                        "type": "string",
                        "description": "Inspection ID."
                    },
                    "item_index": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Index of item in the inspection."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template ID."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent Item ID."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "Organization that owns this inspection."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Created date for the inspection."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Created date for the inspection."
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of question."
                    },
                    "category": {
                        "type": "string",
                        "description": "Name of the section this falls under."
                    },
                    "category_id": {
                        "type": "string",
                        "description": "ID of the section this falls under."
                    },
                    "parent_ids": {
                        "type": "string",
                        "description": "All parent IDs for this item."
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of the item."
                    },
                    "response": {
                        "type": "string",
                        "description": "Response for the item."
                    },
                    "response_id": {
                        "type": "string",
                        "description": "ID of the response in the response set."
                    },
                    "response_set_id": {
                        "type": "string",
                        "description": "ID of the response set used for this item."
                    },
                    "is_failed_response": {
                        "type": "boolean",
                        "description": "If the response indicates a failure."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Notes for the item."
                    },
                    "media_files": {
                        "type": "string",
                        "description": "Names of media files associated with this item."
                    },
                    "media_ids": {
                        "type": "string",
                        "description": "IDs of media files associated with this item."
                    },
                    "media_hypertext_reference": {
                        "type": "string",
                        "description": "URLs of media files associated with this item."
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "Score for this item, where this item has children it will be the combined score of those children."
                    },
                    "max_score": {
                        "type": "number",
                        "format": "double",
                        "description": "Max score for this item, where this item has children it will be the combined score of those children."
                    },
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "Score perscentrage for this item, where this item has children it will be the combined score of those children."
                    },
                    "combined_score": {
                        "type": "number",
                        "format": "double",
                        "description": "Where this item has children it will be the combined score of those children, otherwise null."
                    },
                    "combined_max_score": {
                        "type": "number",
                        "format": "double",
                        "description": "Where this item has children it will be the combined max score of those children, otherwise null."
                    },
                    "combined_score_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "Where this item has children it will be the combined score percentage of those children, otherwise null."
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Item mandatory requirement."
                    },
                    "inactive": {
                        "type": "boolean",
                        "description": "Item visibility."
                    },
                    "location_latitude": {
                        "type": "number",
                        "format": "double",
                        "description": "The latitude this inspection was conducted at."
                    },
                    "location_longitude": {
                        "type": "number",
                        "format": "double",
                        "description": "The longitude this inspection was conducted at."
                    },
                    "primeelement_id": {
                        "type": "string",
                        "description": "For repeated sections/dynamic fields. This ID will be consistent for every item under a repeated section."
                    },
                    "primeelement_index": {
                        "type": "integer",
                        "format": "int64",
                        "description": "For repeated sections/dynamic fields. This will be the element count indexed from 0."
                    }
                },
                "description": "An inspection item returned from `FeedInspectionItems`",
                "title": "FeedInspectionItem"
            },
            "s12.thepub.v1.FeedInspectionsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedInspectionsResponse.FeedInspection"
                        },
                        "description": "The inspections returned."
                    }
                },
                "description": "The response for `FeedInspections`",
                "title": "FeedInspectionsResponse"
            },
            "s12.thepub.v1.FeedInspectionsResponse.FeedInspection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this inspection."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this inspection."
                    },
                    "archived": {
                        "type": "boolean",
                        "description": "If this inspection is archived."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "The organisation this inspection belongs to."
                    },
                    "owner_name": {
                        "type": "string",
                        "description": "The name of the user who created this inspection."
                    },
                    "owner_id": {
                        "type": "string",
                        "description": "The ID of the user who created this inspection."
                    },
                    "author_name": {
                        "type": "string",
                        "description": "The name of the user who last updated this inspection."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "The ID of the user who last updated this inspection."
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "The score of this inspection."
                    },
                    "max_score": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum score of this inspection."
                    },
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "The percentage of the inspection score."
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The duration of this inspection."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The site this inspection was conducted at."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "The ID of the template this inspection was conducted from."
                    },
                    "template_name": {
                        "type": "string",
                        "description": "The name of the template this inspection was conducted from."
                    },
                    "template_author": {
                        "type": "string",
                        "description": "The author of the template."
                    },
                    "date_started": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was started."
                    },
                    "date_completed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was completed."
                    },
                    "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was last updated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was created on the server."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was last updated on the server."
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "description": "The latitude this inspection was conducted at."
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "description": "The longitude this inspection was conducted at."
                    },
                    "document_no": {
                        "type": "string",
                        "description": "The document number of this inspection."
                    },
                    "prepared_by": {
                        "type": "string",
                        "description": "The user who created this inspection."
                    },
                    "location": {
                        "type": "string",
                        "description": "The location this inspection was conducted at."
                    },
                    "conducted_on": {
                        "type": "string",
                        "description": "The date this inspection was conducted."
                    },
                    "personnel": {
                        "type": "string",
                        "description": "The people involved in this inspection."
                    },
                    "client_site": {
                        "type": "string",
                        "description": "The site this inspection was conducted at."
                    },
                    "web_report_link": {
                        "type": "string",
                        "description": "The URL to the web report for this inspection."
                    }
                },
                "description": "A inspection returned from `FeedInspections`",
                "title": "FeedInspection"
            },
            "s12.thepub.v1.FeedIssueAssigneesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueAssigneesResponse.FeedIssueAssignee"
                        },
                        "title": "The actions returned"
                    }
                },
                "description": "The parameters for `FeedIssueAssigneesResponse`",
                "title": "FeedIssueAssigneesResponse"
            },
            "s12.thepub.v1.FeedIssueAssigneesResponse.FeedIssueAssignee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique Issue assignee ID."
                    },
                    "issue_id": {
                        "type": "string",
                        "description": "ID of the issue."
                    },
                    "assignee_id": {
                        "type": "string",
                        "description": "ID of the assignee."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the assignee."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "Organisation that owns this action."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this assignee was modified."
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of assignee."
                    }
                },
                "description": "An issue assignee returned from `FeedIssueAssignee`",
                "title": "FeedIssueAssignee"
            },
            "s12.thepub.v1.FeedIssueRelationshipsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.common.v1.FeedMetadataSimple"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueRelationshipsResponse.FeedIssueRelationshipsResponseItem"
                        },
                        "description": "List of issue relation items returned."
                    }
                }
            },
            "s12.thepub.v1.FeedIssueRelationshipsResponse.FeedIssueRelationshipsResponseItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the issue relationship item."
                    },
                    "from_id": {
                        "type": "string",
                        "description": "Issue ID which is the source object here in the relationship."
                    },
                    "rel_type": {
                        "type": "string",
                        "title": "Type of relation. Possible values may include: \"ISSUE-INSPECTION\" , \"ISSUE-ACTION\""
                    },
                    "rel_created_at": {
                        "type": "string",
                        "description": "Timestamp of when the relationship was created."
                    },
                    "to_id": {
                        "type": "string",
                        "description": "ID of the target object that the issue is linked with, such as inspection, asset, or action."
                    }
                }
            },
            "s12.thepub.v1.FeedIssueTimelineItemsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedIssueTimelineItemsResponse.FeedIssueTimelineItem"
                        },
                        "description": "The issue timeline items."
                    }
                },
                "description": "The response for `FeedIssueTimelineItemsResponse`",
                "title": "FeedIssueTimelineItemsResponse"
            },
            "s12.thepub.v1.FeedIssueTimelineItemsResponse.FeedIssueTimelineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the timeline item."
                    },
                    "task_id": {
                        "type": "string",
                        "description": "ID of the issue."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the SafetyCulture organization."
                    },
                    "task_creator_id": {
                        "type": "string",
                        "description": "ID of the timeline item's issue creator."
                    },
                    "task_creator_name": {
                        "type": "string",
                        "description": "Name of the timeline item's issue creator."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time a timeline item was created in Coordinated Universal Time (UTC)."
                    },
                    "creator_id": {
                        "type": "string",
                        "description": "ID of the timeline item's creator."
                    },
                    "creator_name": {
                        "type": "string",
                        "description": "Name of the timeline item's creator."
                    },
                    "item_type": {
                        "type": "string",
                        "description": "Type of a timeline item."
                    },
                    "item_data": {
                        "type": "string",
                        "description": "Data of a timeline item."
                    }
                },
                "description": "An issue timeline item returned from `FeedIssueTimelineItems`",
                "title": "FeedIssueTimelineItem"
            },
            "s12.thepub.v1.FeedIssuesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedIssuesResponse.FeedIssue"
                        },
                        "description": "The issues returned."
                    }
                }
            },
            "s12.thepub.v1.FeedIssuesResponse.FeedIssue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the issue."
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the issue."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the issue."
                    },
                    "creator_id": {
                        "type": "string",
                        "description": "User ID of the user who created this issue."
                    },
                    "creator_user_name": {
                        "type": "string",
                        "description": "Name of the user who created this issue."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this issue was created."
                    },
                    "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Due date of the issue."
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the issue."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the issue."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "ID of the template this issue was created against."
                    },
                    "inspection_id": {
                        "type": "string",
                        "description": "ID of the inspection this issue was created against."
                    },
                    "inspection_name": {
                        "type": "string",
                        "description": "Title of the inspection this issue was created against."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "Site ID associated with the issue."
                    },
                    "site_name": {
                        "type": "string",
                        "description": "Site Name associated with the issue."
                    },
                    "location_name": {
                        "type": "string"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Issue category ID."
                    },
                    "category_label": {
                        "type": "string",
                        "description": "Issue category label."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this issue was last modified."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date this issue was completed."
                    },
                    "unique_id": {
                        "type": "string",
                        "description": "Unique ID for the Issue."
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The configurable date that indicates when the issue occurred."
                    }
                }
            },
            "s12.thepub.v1.FeedMetadata": {
                "type": "object",
                "properties": {
                    "next_page": {
                        "type": "string",
                        "description": "The path to fetch the next page on."
                    },
                    "remaining_records": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Estimated remaining records."
                    }
                },
                "description": "The metadata returned on a feed",
                "title": "FeedMetadata"
            },
            "s12.thepub.v1.FeedScheduleAssigneesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedScheduleAssigneesResponse.FeedScheduleAssignee"
                        },
                        "description": "The schedule assgineees returned."
                    }
                },
                "description": "The response for `FeedScheduleAssignees`",
                "title": "FeedScheduleAssigneesResponse"
            },
            "s12.thepub.v1.FeedScheduleAssigneesResponse.FeedScheduleAssignee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the schedule and assignee"
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule."
                    },
                    "assignee_id": {
                        "type": "string",
                        "description": "ID of the assignee."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedScheduleAssigneesResponse.FeedScheduleAssignee.AssigneeType"
                    },
                    "name": {
                        "type": "string",
                        "description": "Assignee name."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    }
                },
                "description": "A schedule assignee returned from `FeedScheduleAssignees`",
                "title": "FeedScheduleAssignee"
            },
            "s12.thepub.v1.FeedScheduleAssigneesResponse.FeedScheduleAssignee.AssigneeType": {
                "type": "string",
                "enum": [
                    "unknown",
                    "user",
                    "email"
                ],
                "default": "unknown",
                "title": "- unknown: Unknown\n - user: User\n - email: Email"
            },
            "s12.thepub.v1.FeedScheduleOccurrencesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedScheduleOccurrencesResponse.FeedScheduleOccurrence"
                        },
                        "description": "The schedule occurrences returned."
                    }
                },
                "description": "The response for `FeedScheduleOccurrences`",
                "title": "FeedScheduleOccurrencesResponse"
            },
            "s12.thepub.v1.FeedScheduleOccurrencesResponse.FeedScheduleOccurrence": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique schedule occurrence ID."
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "Schedule ID."
                    },
                    "occurrence_id": {
                        "type": "string",
                        "description": "Occurrence ID."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template ID."
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the occurrence."
                    },
                    "miss_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Miss time of the occurrence."
                    },
                    "due_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Due time of the occurrence."
                    },
                    "occurrence_status": {
                        "type": "string",
                        "description": "Status of the occurrence."
                    },
                    "audit_id": {
                        "type": "string",
                        "description": "Inspection ID associated with the occurrence."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time the occurrence was completed."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User ID assigned to this occurrence."
                    },
                    "assignee_status": {
                        "type": "string",
                        "description": "Status of the user assigned to this occurrence."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "Organisation ID that owns this occurrence."
                    },
                    "note": {
                        "type": "string",
                        "description": "Notes for the occurrence."
                    }
                },
                "description": "A schedule occurrence returned from `FeedScheduleOccurrences`",
                "title": "FeedScheduleOccurrence"
            },
            "s12.thepub.v1.FeedSchedulesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedSchedulesResponse.FeedSchedule"
                        },
                        "description": "The schedules returned."
                    }
                },
                "description": "The response for `FeedSchedules`",
                "title": "FeedSchedulesResponse"
            },
            "s12.thepub.v1.FeedSchedulesResponse.FeedSchedule": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the schedule."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description."
                    },
                    "recurrence": {
                        "type": "string",
                        "description": "Recurrence pattern."
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the schedule."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    },
                    "from_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date."
                    },
                    "to_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date.\n\nOptional"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modified date."
                    },
                    "start_time_hour": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Schedule start hour."
                    },
                    "start_time_minute": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Schedule start minute."
                    },
                    "all_must_complete": {
                        "type": "boolean",
                        "description": "All must complete."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedSchedulesResponse.FeedSchedule.ScheduleStatus"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone."
                    },
                    "can_late_submit": {
                        "type": "boolean",
                        "description": "Allow inspections to be submitted after the due date."
                    },
                    "site_id": {
                        "type": "string",
                        "description": "ID of the site."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "ID of the template."
                    },
                    "creator_user_id": {
                        "type": "string",
                        "description": "ID of the creator user."
                    }
                },
                "description": "A schedule returned from `FeedSchedules`",
                "title": "FeedSchedule"
            },
            "s12.thepub.v1.FeedSchedulesResponse.FeedSchedule.ScheduleStatus": {
                "type": "string",
                "enum": [
                    "UNKNOWN",
                    "ACTIVE",
                    "PAUSED",
                    "FINISHED"
                ],
                "default": "UNKNOWN"
            },
            "s12.thepub.v1.FeedSiteMembersResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedSiteMembersResponse.FeedSiteMember"
                        },
                        "description": "The site members returned."
                    }
                },
                "description": "The response for `FeedSiteMembers`",
                "title": "FeedSiteMembersResponse"
            },
            "s12.thepub.v1.FeedSiteMembersResponse.FeedSiteMember": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "ID of the Site."
                    },
                    "member_id": {
                        "type": "string",
                        "description": "ID of the member."
                    }
                },
                "description": "A site returned from `FeedSiteMembers`",
                "title": "FeedSiteMember"
            },
            "s12.thepub.v1.FeedSitesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedSitesResponse.FeedSite"
                        },
                        "description": "The sites returned."
                    }
                },
                "description": "The response for `FeedSites`",
                "title": "FeedSitesResponse"
            },
            "s12.thepub.v1.FeedSitesResponse.FeedSite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the Site."
                    },
                    "site_uuid": {
                        "type": "string",
                        "description": "UUID of the Site."
                    },
                    "name": {
                        "type": "string",
                        "description": "Site name."
                    },
                    "creator_id": {
                        "type": "string",
                        "description": "ID of the site creator."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Indicates if the site is deleted or not."
                    },
                    "meta_label": {
                        "type": "string",
                        "description": "Type of site (location, area, region, state, country)."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "ID of the parent of this site."
                    }
                },
                "description": "A site returned from `FeedSites`",
                "title": "FeedSite"
            },
            "s12.thepub.v1.FeedTemplatePermissionsResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission"
                        },
                        "description": "The template permissions returned."
                    }
                },
                "description": "The response for `FeedTemplatePermissions`",
                "title": "FeedTemplatePermissionsResponse"
            },
            "s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of template permission."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "ID of template."
                    },
                    "permission": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission.Permission"
                    },
                    "assignee_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission.AssigneeType"
                    },
                    "assignee_id": {
                        "type": "string",
                        "description": "ID of the assignee."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    }
                },
                "description": "A template permission returned from `FeedTemplatePermissions`",
                "title": "FeedTemplatePermission"
            },
            "s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission.AssigneeType": {
                "type": "string",
                "enum": [
                    "user",
                    "role"
                ],
                "default": "user",
                "title": "- user: User\n - role: Role"
            },
            "s12.thepub.v1.FeedTemplatePermissionsResponse.FeedTemplatePermission.Permission": {
                "type": "string",
                "enum": [
                    "unknown",
                    "view",
                    "edit",
                    "delete"
                ],
                "default": "unknown",
                "description": " - unknown: Unknown\n - view: Can View.\n - edit: Can Edit.\n - delete: Can Delete."
            },
            "s12.thepub.v1.FeedTemplatesResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedTemplatesResponse.FeedTemplate"
                        },
                        "description": "The templates returned."
                    }
                },
                "description": "The response for `FeedTemplates`",
                "title": "FeedTemplatesResponse"
            },
            "s12.thepub.v1.FeedTemplatesResponse.FeedTemplate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Template ID."
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "Indicates if the template is archived or not"
                    },
                    "name": {
                        "type": "string",
                        "description": "Template name."
                    },
                    "owner_name": {
                        "type": "string",
                        "description": "Owner name."
                    },
                    "owner_id": {
                        "type": "string",
                        "description": "ID of the owner."
                    },
                    "author_name": {
                        "type": "string",
                        "description": "Author name."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "ID of the author."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date Time when was created."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date Time when was modified."
                    }
                },
                "description": "A template returned from `FeedTemplates`",
                "title": "FeedTemplate"
            },
            "s12.thepub.v1.FeedUsersResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.FeedMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.FeedUsersResponse.FeedUser"
                        },
                        "description": "The users returned."
                    }
                },
                "description": "The response for `FeedUsers`",
                "title": "FeedUsersResponse"
            },
            "s12.thepub.v1.FeedUsersResponse.FeedUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the user."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "ID of the organisation."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user."
                    },
                    "firstname": {
                        "type": "string",
                        "description": "First name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "Last name of the user."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Indicates if the user is active or not."
                    },
                    "last_seen_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when user was last seen."
                    },
                    "seat_type": {
                        "type": "string",
                        "description": "Seat type."
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Created date for the user."
                    }
                },
                "description": "A user returned from `FeedUsers`",
                "title": "FeedUser"
            },
            "s12.thepub.v1.GetGRSResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the response."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the response."
                    },
                    "short_label": {
                        "type": "string",
                        "description": "The short label of the response."
                    }
                },
                "description": "A global response set response used for getting a GRS",
                "title": "GetGRSResponse"
            },
            "s12.thepub.v1.GetGlobalResponseSetResponse": {
                "type": "object",
                "properties": {
                    "responseset_id": {
                        "type": "string",
                        "description": "The id of the global response set."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the global response set."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the global response set was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the global response set was last updated."
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.GetGRSResponse"
                        },
                        "description": "The responses in the global response set."
                    }
                },
                "description": "Result returned from `GetGlobalResponseSet`",
                "title": "GetGlobalResponseSetResponse"
            },
            "s12.thepub.v1.GetInspectionDeepLinkResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The deep link for the inspection."
                    }
                },
                "description": "Result returned from `GetInspectionDeepLink`",
                "title": "GetInspectionDeepLinkResponse"
            },
            "s12.thepub.v1.GetInspectionMediaResponse": {
                "type": "object",
                "description": "Result returned from `GetInspectionMedia`",
                "title": "GetInspectionMediaResponse"
            },
            "s12.thepub.v1.GetInspectionWebReportLinkResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The web report link for the inspection."
                    }
                },
                "description": "Result returned from `GetInspectionWebReportLink`",
                "title": "GetInspectionWebReportLinkResponse"
            },
            "s12.thepub.v1.GetUserGroupsResponse": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.GetUserGroupsResponse.Group"
                        },
                        "description": "The groups that the user is a member of."
                    }
                },
                "description": "Result returned from `GetUserGroups`",
                "title": "GetUserGroupsResponse"
            },
            "s12.thepub.v1.GetUserGroupsResponse.Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the group."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the group."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.GetUserGroupsResponse.Group.Type"
                    }
                },
                "description": "A group returned from `GetUserGroups`",
                "title": "GetUserGroupsResponseGroup"
            },
            "s12.thepub.v1.GetUserGroupsResponse.Group.Type": {
                "type": "string",
                "enum": [
                    "group",
                    "organisation"
                ],
                "default": "group",
                "title": "- group: Group\n - organisation: Organisation"
            },
            "s12.thepub.v1.GetUserResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The id of the user."
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubUserStatus"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubSeatType"
                    }
                },
                "description": "Result returned from `GetUser`",
                "title": "GetUserResponse"
            },
            "s12.thepub.v1.Inspection": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "description": "The template this inspection was conducted from."
                    },
                    "audit_id": {
                        "type": "string",
                        "description": "The id of this inspection."
                    },
                    "archived": {
                        "type": "boolean",
                        "description": "If this inspection is archived."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was created on the server."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date this inspection was last updated on the server."
                    },
                    "audit_data": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.AuditData"
                    },
                    "template_data": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.TemplateData"
                    },
                    "header_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item"
                        },
                        "description": "The title page items of the inspection."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item"
                        },
                        "description": "The items of the inspection."
                    }
                }
            },
            "s12.thepub.v1.Inspection.AuditData": {
                "type": "object",
                "properties": {
                    "score": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The score of the inspection."
                    },
                    "total_score": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total possible score of the inspection."
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The percentage of the inspection score."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the inspection."
                    },
                    "duration": {
                        "type": "string",
                        "format": "int64",
                        "description": "The duration of the inspection."
                    },
                    "authorship": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Authorship"
                    },
                    "date_completed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the inspection was completed."
                    },
                    "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the inspection was last modified."
                    },
                    "date_started": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the inspection was started."
                    },
                    "site": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.AuditData.Site"
                    }
                }
            },
            "s12.thepub.v1.Inspection.AuditData.Site": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the site this inspection was conducted at."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Authorship": {
                "type": "object",
                "properties": {
                    "device_id": {
                        "type": "string",
                        "description": "The ID of the device that this was last modified on."
                    },
                    "owner": {
                        "type": "string",
                        "description": "The name of the user who created this document."
                    },
                    "owner_id": {
                        "type": "string",
                        "description": "The id of the user who created this document."
                    },
                    "author": {
                        "type": "string",
                        "description": "The name of the user who last modified this document."
                    },
                    "author_id": {
                        "type": "string",
                        "description": "The id of the user who last modified this document."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Item": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "description": "The id of the item."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the item."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the item."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The child items of the item."
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "The parent item of the item."
                    },
                    "responses": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item.Responses"
                    }
                }
            },
            "s12.thepub.v1.Inspection.Item.Responses": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text response."
                    },
                    "value": {
                        "type": "string",
                        "description": "Value response. Used for sliders, checkboxes, and switches."
                    },
                    "name": {
                        "type": "string",
                        "description": "Someone's Name. Used with signature, location and weather items."
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of action. Used only with barcode and signature items."
                    },
                    "location_text": {
                        "type": "string",
                        "description": "Location represented as text (address or coordinates)."
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item.Responses.Location"
                    },
                    "selected": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Response"
                        },
                        "description": "The selected items from an response set."
                    },
                    "failed": {
                        "type": "boolean",
                        "description": "If the response is considered failed."
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Media"
                        },
                        "description": "The media of the response."
                    },
                    "image": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Media"
                    },
                    "scoring": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item.Responses.Scoring"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Notes added to the response."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Item.Responses.Location": {
                "type": "object",
                "properties": {
                    "administrative_area": {
                        "type": "string",
                        "description": "The administrative area of the location."
                    },
                    "country": {
                        "type": "string",
                        "description": "The country of the location."
                    },
                    "formatted_address": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The formatted address of the location."
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Item.Responses.Location.Geometry"
                    },
                    "iso_country_code": {
                        "type": "string",
                        "description": "The ISO Country Code of the location."
                    },
                    "locality": {
                        "type": "string",
                        "description": "The locality of the location."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location."
                    },
                    "postal_code": {
                        "type": "string",
                        "description": "The postal code of the location."
                    },
                    "sub_administrative_area": {
                        "type": "string",
                        "description": "The sub administrative area of the location."
                    },
                    "sub_locality": {
                        "type": "string",
                        "description": "The sub locality of the location."
                    },
                    "sub_thoroughfare": {
                        "type": "string",
                        "description": "The sub thoroughfare of the location."
                    },
                    "thoroughfare": {
                        "type": "string",
                        "description": "The thoroughfare of the location."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Item.Responses.Location.Geometry": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of geometry."
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "The coordinates that define the geometry."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Item.Responses.Scoring": {
                "type": "object",
                "properties": {
                    "combined_score": {
                        "type": "number",
                        "format": "double",
                        "description": "The combined score of the category."
                    },
                    "combined_max_score": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The combined maximum score of the category."
                    },
                    "combined_score_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "The combined score percentage of the category."
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "The score of the item."
                    },
                    "max_score": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The maximum score of the category."
                    },
                    "score_percentage": {
                        "type": "number",
                        "format": "double",
                        "description": "The score percentage of the category."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Media": {
                "type": "object",
                "properties": {
                    "date_created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the media was created."
                    },
                    "file_ext": {
                        "type": "string",
                        "description": "The file extension of the media."
                    },
                    "media_id": {
                        "type": "string",
                        "description": "The id of the media."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the media."
                    },
                    "href": {
                        "type": "string",
                        "description": "The url to retrieve the media."
                    }
                }
            },
            "s12.thepub.v1.Inspection.Response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the response."
                    },
                    "colour": {
                        "type": "string",
                        "description": "The colour of the response."
                    },
                    "enable_score": {
                        "type": "boolean",
                        "description": "If scoring is enabled for the response."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the response."
                    },
                    "score": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The score of the response."
                    },
                    "short_label": {
                        "type": "string",
                        "description": "The short label of the response."
                    },
                    "type": {
                        "type": "string",
                        "title": "The type of the response. `question` or `list`"
                    }
                }
            },
            "s12.thepub.v1.Inspection.TemplateData": {
                "type": "object",
                "properties": {
                    "authorship": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Authorship"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/s12.thepub.v1.Inspection.TemplateData.Metadata"
                    },
                    "response_sets": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.TemplateData.ResponseSet"
                        },
                        "description": "Response sets used in the template."
                    }
                }
            },
            "s12.thepub.v1.Inspection.TemplateData.Metadata": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the template."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the template."
                    }
                }
            },
            "s12.thepub.v1.Inspection.TemplateData.ResponseSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the response set."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the response set."
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.Inspection.Response"
                        },
                        "description": "The responses of the response set."
                    }
                }
            },
            "s12.thepub.v1.ListAllGlobalResponseSetsResponse": {
                "type": "object",
                "properties": {
                    "response_sets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.ListAllGlobalResponseSetsResponse.GlobalResponseSet"
                        },
                        "description": "The global response sets."
                    }
                },
                "description": "Result returned from `ListAllGlobalResponseSets`",
                "title": "ListAllGlobalResponseSetsResponse"
            },
            "s12.thepub.v1.ListAllGlobalResponseSetsResponse.GlobalResponseSet": {
                "type": "object",
                "properties": {
                    "responseset_id": {
                        "type": "string",
                        "description": "The id of the global response set."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the global response set."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the global response set was created."
                    }
                },
                "description": "A global response set",
                "title": "GlobalResponseSet"
            },
            "s12.thepub.v1.ListGroupsResponse": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.ListGroupsResponse.Group"
                        },
                        "description": "The groups returned by the request."
                    }
                },
                "description": "Result returned from `ListGroups`",
                "title": "ListGroupsResponse"
            },
            "s12.thepub.v1.ListGroupsResponse.Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the group."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the group."
                    }
                },
                "description": "A group returned by `ListGroups`",
                "title": "Group"
            },
            "s12.thepub.v1.ListUsersInGroupResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users in the group."
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The offset of the request."
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The limit of the request."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.ListUsersInGroupResponse.User"
                        },
                        "description": "The users in the group."
                    }
                },
                "description": "Result returned from `ListUsersInGroup`",
                "title": "ListUsersInGroupResponse"
            },
            "s12.thepub.v1.ListUsersInGroupResponse.User": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The id of the user."
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubUserStatus"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubSeatType"
                    }
                },
                "description": "User returned for list operations."
            },
            "s12.thepub.v1.RemoveUserResponse": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "description": "If the user was removed from the group."
                    }
                },
                "description": "Result returned from `RemoveUser`",
                "title": "RemoveUserResponse"
            },
            "s12.thepub.v1.SearchInspectionsResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results returned."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of results available."
                    },
                    "audits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.SearchInspectionsResponse.SearchInspectionsInspection"
                        },
                        "description": "The results returned."
                    }
                },
                "description": "Result returned from `SearchInspections`",
                "title": "SearchInspectionsResponse"
            },
            "s12.thepub.v1.SearchInspectionsResponse.SearchInspectionsInspection": {
                "type": "object",
                "properties": {
                    "audit_id": {
                        "type": "string",
                        "description": "The inspection ID."
                    },
                    "template_id": {
                        "type": "string",
                        "description": "The ID of the template this inspection was conducted from."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the inspection was last modified."
                    }
                },
                "description": "The inspection returned from `SearchInspections`",
                "title": "SearchInspectionsInspection"
            },
            "s12.thepub.v1.SearchTemplatesResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results returned."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of results available."
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.SearchTemplatesResponse.SearchTemplatesTemplate"
                        },
                        "description": "The results returned."
                    }
                },
                "description": "Result returned from `SearchTemplates`",
                "title": "SearchTemplatesResponse"
            },
            "s12.thepub.v1.SearchTemplatesResponse.SearchTemplatesTemplate": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "description": "The ID of the template."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the template."
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the template was last modified."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the template was created."
                    }
                },
                "description": "The template returned from `SearchTemplates`",
                "title": "SearchTemplatesTemplate"
            },
            "s12.thepub.v1.SearchUsersRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Emails to filter by. Required."
                    }
                },
                "description": "The parameters for `SearchUsers`",
                "title": "SearchUsersRequest",
                "required": [
                    "email"
                ]
            },
            "s12.thepub.v1.SearchUsersResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.SearchUsersResponse.User"
                        },
                        "description": "The users that match the search criteria."
                    }
                },
                "description": "Result returned from `SearchUsers`",
                "title": "SearchUsersResponse"
            },
            "s12.thepub.v1.SearchUsersResponse.User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the user."
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubUserStatus"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubSeatType"
                    }
                },
                "description": "User returned for search  operations."
            },
            "s12.thepub.v1.ShareInspectionRequest.Share": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the user or group to share with."
                    },
                    "permission": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ShareInspectionRequest.Share.Permissions"
                    }
                },
                "description": "The share used in `SearchInspections`",
                "title": "ShareInspectionShare",
                "required": [
                    "id",
                    "permission"
                ]
            },
            "s12.thepub.v1.ShareInspectionRequest.Share.Permissions": {
                "type": "string",
                "enum": [
                    "view",
                    "edit",
                    "delete"
                ],
                "default": "view",
                "description": " - view: The user can view the inspection.\n - edit: The user can edit the inspection.\n - delete: The user can delete the inspection."
            },
            "s12.thepub.v1.StartInspectionRequest": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": "string",
                        "description": "ID of the template to start an inspection from."
                    },
                    "header_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem"
                        },
                        "description": "The title page items of the inspection."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem"
                        },
                        "description": "The items of the inspection."
                    }
                },
                "description": "The parameters for `StartInspection`",
                "title": "StartInspectionRequest",
                "required": [
                    "template_id"
                ]
            },
            "s12.thepub.v1.ThePubSeatType": {
                "type": "string",
                "enum": [
                    "full",
                    "free",
                    "lite"
                ],
                "default": "full",
                "title": "- full: Full seat\n - free: Free seat\n - lite: Lite seat"
            },
            "s12.thepub.v1.ThePubService.AddNewUserToGroupBody": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The id of the user to be added to the group."
                    }
                },
                "description": "The parameters for `AddNewUserToGroup`",
                "title": "AddNewUserToGroupRequest",
                "required": [
                    "user_id"
                ]
            },
            "s12.thepub.v1.ThePubService.ShareInspectionBody": {
                "type": "object",
                "properties": {
                    "shares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.ShareInspectionRequest.Share"
                        },
                        "description": "The users and groups to share with."
                    }
                },
                "description": "The parameters for `ShareInspection`",
                "title": "ShareInspectionRequest"
            },
            "s12.thepub.v1.ThePubService.UpdateGlobalResponseSetBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the global response set."
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateGRSResponse"
                        },
                        "description": "The responses to add to the global response set."
                    }
                },
                "description": "The parameters for `UpdateGlobalResponseSet`",
                "title": "UpdateGlobalResponseSetRequest"
            },
            "s12.thepub.v1.ThePubService.UpdateInspectionBody": {
                "type": "object",
                "properties": {
                    "archived": {
                        "type": "boolean",
                        "title": "Boolean indicating if you want to archive or un-archive the inspection"
                    },
                    "header_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem"
                        },
                        "description": "The title page items of the inspection."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem"
                        },
                        "description": "The items of the inspection."
                    }
                },
                "description": "The parameters for `UpdateInspection`",
                "title": "UpdateInspectionRequest"
            },
            "s12.thepub.v1.ThePubService.UpdateUserBody": {
                "type": "object",
                "properties": {
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user.\n\nOptional"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user.\n\nOptional"
                    },
                    "new_email": {
                        "type": "string",
                        "description": "The email address of the user.\n\nOptional"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubUserStatus"
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.ThePubSeatType"
                    }
                },
                "description": "The parameters for `UpdateUser`",
                "title": "UpdateUserRequest"
            },
            "s12.thepub.v1.ThePubUserStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive"
                ],
                "default": "active",
                "description": "- active: Active user.\n - inactive: Inactive User",
                "title": "ThePubUserStatus"
            },
            "s12.thepub.v1.UpdateGRSResponse": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The label of the response."
                    },
                    "short_label": {
                        "type": "string",
                        "description": "The short label of the response."
                    }
                },
                "description": "A global response set response used for updating/creating",
                "title": "UpdateGRSResponse",
                "required": [
                    "label",
                    "short_label"
                ]
            },
            "s12.thepub.v1.UpdateGRSResponseResponse": {
                "type": "object",
                "properties": {
                    "response": {
                        "$ref": "#/components/schemas/s12.thepub.v1.GetGRSResponse"
                    }
                },
                "description": "Result returned from `UpdateGRSResponse`",
                "title": "UpdateGRSResponseResponse"
            },
            "s12.thepub.v1.UpdateGlobalResponseSetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the global response set."
                    },
                    "ok": {
                        "type": "boolean",
                        "description": "If the global response set was updated."
                    }
                },
                "description": "Result returned from `UpdateGlobalResponseSet`",
                "title": "UpdateGlobalResponseSetResponse"
            },
            "s12.thepub.v1.UpdateInspectionItem": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "description": "The id of the item."
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem.ItemType"
                    },
                    "responses": {
                        "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem.Responses"
                    }
                }
            },
            "s12.thepub.v1.UpdateInspectionItem.ItemType": {
                "type": "string",
                "enum": [
                    "text",
                    "textsingle",
                    "address",
                    "datetime",
                    "question",
                    "list",
                    "checkbox",
                    "slider",
                    "switch"
                ],
                "default": "text"
            },
            "s12.thepub.v1.UpdateInspectionItem.Responses": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text response."
                    },
                    "value": {
                        "type": "string",
                        "description": "Value response. Used for sliders, checkboxes, and switches."
                    },
                    "name": {
                        "type": "string",
                        "description": "Someone's Name. Used with signature, location and weather items."
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of action. Used only with barcode and signature items."
                    },
                    "location_text": {
                        "type": "string",
                        "description": "Location represented as text (address or coordinates)."
                    },
                    "location": {
                        "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem.Responses.Location"
                    },
                    "selected": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem.Responses.Response"
                        },
                        "description": "The selected items from an response set."
                    },
                    "note": {
                        "type": "string",
                        "title": "Note added to the response. Detailed information available [here](ref:add-notes-to-inspection-questions)"
                    }
                }
            },
            "s12.thepub.v1.UpdateInspectionItem.Responses.Location": {
                "type": "object",
                "properties": {
                    "administrative_area": {
                        "type": "string",
                        "description": "The administrative area of the location."
                    },
                    "country": {
                        "type": "string",
                        "description": "The country of the location."
                    },
                    "formatted_address": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The formatted address of the location."
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/s12.thepub.v1.UpdateInspectionItem.Responses.Location.Geometry"
                    },
                    "iso_country_code": {
                        "type": "string",
                        "description": "The ISO Country Code of the location."
                    },
                    "locality": {
                        "type": "string",
                        "description": "The locality of the location."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location."
                    },
                    "postal_code": {
                        "type": "string",
                        "description": "The postal code of the location."
                    },
                    "sub_administrative_area": {
                        "type": "string",
                        "description": "The sub administrative area of the location."
                    },
                    "sub_locality": {
                        "type": "string",
                        "description": "The sub locality of the location."
                    },
                    "sub_thoroughfare": {
                        "type": "string",
                        "description": "The sub thoroughfare of the location."
                    },
                    "thoroughfare": {
                        "type": "string",
                        "description": "The thoroughfare of the location."
                    }
                }
            },
            "s12.thepub.v1.UpdateInspectionItem.Responses.Location.Geometry": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of geometry."
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "The coordinates that define the geometry."
                    }
                }
            },
            "s12.thepub.v1.UpdateInspectionItem.Responses.Response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the response."
                    }
                }
            },
            "s12.thepub.v1.UpdateUserResponse": {
                "type": "object",
                "description": "Result returned from `UpdateUser`",
                "title": "UpdateUserResponse"
            },
            "s12.training.analytics.v1.AnswerDefinition": {
                "type": "object",
                "properties": {
                    "answer_definition_id": {
                        "type": "string",
                        "title": "ID of the answer definition"
                    },
                    "answer_content": {
                        "type": "string",
                        "title": "Content within the answer"
                    }
                },
                "title": "Response type within SurveyQuestionDefinition"
            },
            "s12.training.analytics.v1.CourseStatistics": {
                "type": "object",
                "properties": {
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "total_users": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total users assigned to the course"
                    },
                    "completed_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total completions of the course"
                    },
                    "opened_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total opens of the course"
                    }
                },
                "title": "Response type within GetCourseStatisticsResponse"
            },
            "s12.training.analytics.v1.GetCourseStatisticsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of course statistics matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.CourseStatistics"
                        },
                        "title": "List of course statistics"
                    }
                },
                "title": "Response to GetCourseStatistics"
            },
            "s12.training.analytics.v1.GetLessonAttemptsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of lesson attempts matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.LessonAttempt"
                        },
                        "title": "List of lesson attempts"
                    }
                },
                "title": "Response to GetLessonAttempts"
            },
            "s12.training.analytics.v1.GetLessonProgressEventsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of lesson progress events matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.LessonProgressEvent"
                        },
                        "title": "List of lesson progress events"
                    }
                },
                "title": "Response to GetLessonProgressEvents"
            },
            "s12.training.analytics.v1.GetLessonStatisticsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of lesson statistics matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.LessonStatistics"
                        },
                        "title": "List of lesson statistics"
                    }
                },
                "title": "Response to GetLessonStatistics"
            },
            "s12.training.analytics.v1.GetRapidRefreshAnswersResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of rapid refresh answers matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.RapidRefreshAnswer"
                        },
                        "title": "List of rapid refresh answers"
                    }
                },
                "title": "Response to GetRapidRefreshAnswers"
            },
            "s12.training.analytics.v1.GetSlideStatisticsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of slide statistics matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.SlideStatistics"
                        },
                        "title": "List of slide statistics"
                    }
                },
                "title": "Response to GetSlideStatistics"
            },
            "s12.training.analytics.v1.GetSlideUserStatisticsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of slide user statistics matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.SlideUserStatistics"
                        },
                        "title": "List of slide user statistics"
                    }
                },
                "title": "Response to GetSlideUserStatistics"
            },
            "s12.training.analytics.v1.GetSurveyAnswersResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of survey answers matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.SurveyAnswer"
                        },
                        "title": "List of survey answers"
                    }
                },
                "title": "Response to GetSurveyAnswers"
            },
            "s12.training.analytics.v1.GetSurveyQuestionDefinitionsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of survey question definitions matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.SurveyQuestionDefinition"
                        },
                        "title": "List of survey question definitions"
                    }
                },
                "title": "Response to GetSurveyQuestionDefinitions"
            },
            "s12.training.analytics.v1.GetUserLessonProgressEventsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of user lesson progress events matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.LessonProgressEvent"
                        },
                        "title": "List of user lesson progress events"
                    }
                },
                "title": "Response to GetUserLessonProgressEvents"
            },
            "s12.training.analytics.v1.GetUserLessonProgressResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of user lesson progress matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.LessonProgress"
                        },
                        "title": "List of user lesson progress"
                    }
                },
                "title": "Response to GetUserLessonProgress"
            },
            "s12.training.analytics.v1.LessonAttempt": {
                "type": "object",
                "properties": {
                    "attempt_id": {
                        "type": "string",
                        "title": "Unique identifier of the lesson attempt"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "ID of the attempting user"
                    },
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course attempted"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course attempted"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson attempted"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson attempted"
                    },
                    "started_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start date time of the attempt"
                    },
                    "completed_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End date time of the attempt"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score achieved within attempt"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Flag indicating if the attempt was successful"
                    }
                },
                "title": "Response type within GetLessonAttemptsResponse"
            },
            "s12.training.analytics.v1.LessonProgress": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "Email of the user"
                    },
                    "user_firstname": {
                        "type": "string",
                        "title": "First name of the user"
                    },
                    "user_lastname": {
                        "type": "string",
                        "title": "Last name of the user"
                    },
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "course_title": {
                        "type": "string",
                        "title": "Title of the course"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "lesson_title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    },
                    "lesson_opened": {
                        "type": "boolean",
                        "title": "Flag indicating if the user has opened the lesson"
                    },
                    "lesson_opened_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date time in which the user opened the lesson"
                    },
                    "lesson_completed": {
                        "type": "boolean",
                        "title": "Flag indicating if the user has completed the lesson"
                    },
                    "lesson_completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date time in which the user completed the lesson"
                    },
                    "lesson_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score achieved by the user during lesson"
                    }
                },
                "title": "Response type within GetUserLessonProgressResponse"
            },
            "s12.training.analytics.v1.LessonProgressEvent": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "Email of the user"
                    },
                    "user_firstname": {
                        "type": "string",
                        "title": "First name of the user"
                    },
                    "user_lastname": {
                        "type": "string",
                        "title": "Last name of the user"
                    },
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "course_title": {
                        "type": "string",
                        "title": "Title of the course"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "lesson_title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    },
                    "event_name": {
                        "type": "string",
                        "title": "Lesson progress event name (LessonAttempted, LessonCompleted, LessonOpened, LessonUnlocked, LessonReset)"
                    },
                    "event_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date when event occurred"
                    },
                    "lesson_score": {
                        "type": "number",
                        "format": "double",
                        "title": "Score achieved within event"
                    }
                },
                "title": "Response type within GetLessonProgressEventsResponse"
            },
            "s12.training.analytics.v1.LessonStatistics": {
                "type": "object",
                "properties": {
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "opened_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total opens of lesson"
                    },
                    "completed_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total completions of lesson"
                    }
                },
                "title": "Response type within GetLessonStatisticsResponse"
            },
            "s12.training.analytics.v1.RapidRefreshAnswer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the answer"
                    },
                    "rapid_refresh_id": {
                        "type": "string",
                        "title": "ID of the rapid refresh"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user"
                    },
                    "question_id": {
                        "type": "string",
                        "title": "ID of the question"
                    },
                    "event_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date time the user answered"
                    },
                    "correct": {
                        "type": "boolean",
                        "title": "Flag indicating the answer was correct"
                    },
                    "time_spent_ms": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Time spent in milliseconds for the user to answer"
                    },
                    "score_weight": {
                        "type": "number",
                        "format": "double",
                        "title": "Weighting of the answer"
                    },
                    "total_attempts": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total attempts to answer"
                    },
                    "selected_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.RapidRefreshAnswerOption"
                        },
                        "title": "Options within the answer"
                    }
                },
                "title": "Response type within GetRapidRefreshAnswersResponse"
            },
            "s12.training.analytics.v1.RapidRefreshAnswerOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the answer"
                    },
                    "answer_number": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of the answer"
                    },
                    "answer_text": {
                        "type": "string",
                        "title": "Text of the answer"
                    },
                    "correct": {
                        "type": "boolean",
                        "title": "Flag indicating the answer was correct"
                    }
                },
                "title": "Response type within RapidRefreshAnswer"
            },
            "s12.training.analytics.v1.SlideStatistics": {
                "type": "object",
                "properties": {
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "slide_id": {
                        "type": "string",
                        "title": "ID of the slide"
                    },
                    "lesson_title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "question": {
                        "type": "string",
                        "title": "Question in the slide"
                    },
                    "average_duration_ms": {
                        "type": "number",
                        "format": "double",
                        "title": "Average duration in milliseconds taken to attempt the slide"
                    },
                    "average_attempts": {
                        "type": "number",
                        "format": "double",
                        "title": "Average number of slide attempts"
                    },
                    "total_attempts": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of slide attempts"
                    },
                    "total_correct": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of correct attempts"
                    },
                    "total_incorrect": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of incorrect attempts"
                    },
                    "slide_type": {
                        "type": "string",
                        "title": "Type of slide"
                    },
                    "slide_answers": {
                        "type": "string",
                        "title": "Answers within slide"
                    },
                    "course_status": {
                        "type": "string",
                        "title": "Status of the course"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    }
                },
                "title": "Response type within GetSlideStatisticsResponse"
            },
            "s12.training.analytics.v1.SlideUserStatistics": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "ID of the user"
                    },
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "slide_id": {
                        "type": "string",
                        "title": "ID of the slide"
                    },
                    "lesson_title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "question": {
                        "type": "string",
                        "title": "Question in the slide"
                    },
                    "total_duration_ms": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total duration in milliseconds taken to attempt slide"
                    },
                    "attempt_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of times the slide was attempted"
                    },
                    "attempt_correct_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of times the slide was successfully attempted"
                    },
                    "total_correct": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total correct"
                    },
                    "attempt_incorrect_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total incorrect attempts"
                    },
                    "slide_type": {
                        "type": "string",
                        "title": "Type of the slide"
                    },
                    "first_answer": {
                        "type": "string",
                        "title": "Users first answer to the slide"
                    },
                    "latest_answer": {
                        "type": "string",
                        "title": "Users latest answer to the slide"
                    },
                    "course_status": {
                        "type": "string",
                        "title": "Status of the course"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    }
                },
                "title": "Response type within GetSlideUserStatisticsResponse"
            },
            "s12.training.analytics.v1.SurveyAnswer": {
                "type": "object",
                "properties": {
                    "user_external_id": {
                        "type": "string",
                        "title": "External ID of the user"
                    },
                    "attempt_id": {
                        "type": "string",
                        "title": "ID of the attempt"
                    },
                    "question_id": {
                        "type": "string",
                        "title": "ID of the question"
                    },
                    "question_content": {
                        "type": "string",
                        "title": "Content within the question"
                    },
                    "answer_definition_id": {
                        "type": "string",
                        "title": "ID of the answer definition"
                    },
                    "answer_content": {
                        "type": "string",
                        "title": "Content within the answer"
                    },
                    "answer_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date time the user answered"
                    }
                },
                "title": "Response type within GetSurveyAnswersResponse"
            },
            "s12.training.analytics.v1.SurveyQuestionDefinition": {
                "type": "object",
                "properties": {
                    "course_id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "course_external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "course_title": {
                        "type": "string",
                        "title": "Title of the course"
                    },
                    "lesson_id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "lesson_external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    },
                    "lesson_title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "slide_id": {
                        "type": "string",
                        "title": "ID of the slide"
                    },
                    "question_id": {
                        "type": "string",
                        "title": "ID of the question"
                    },
                    "question_content": {
                        "type": "string",
                        "title": "Content within the question"
                    },
                    "answerDefinitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.analytics.v1.AnswerDefinition"
                        },
                        "title": "Answers to the question"
                    }
                },
                "title": "Response type within GetSurveyQuestionDefinitionsResponse"
            },
            "s12.training.collections.v1.Course": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the course"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the course"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status of the course (published, draft)"
                    },
                    "locale": {
                        "type": "string",
                        "title": "Locale of the course"
                    },
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "Flag indicating if the course is mandatory"
                    },
                    "due_by": {
                        "type": "string",
                        "title": "Due by type of the course (notSpecified, static, relative)"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Duration of the course in seconds"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "title": "URL of the thumbnail image for the course"
                    },
                    "created_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date the course was created"
                    },
                    "modified_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date the course was last modified"
                    },
                    "TranslationOriginalCourse": {
                        "$ref": "#/components/schemas/s12.training.collections.v1.TranslationOriginalCourse"
                    }
                },
                "title": "Response type within GetCoursesByCourseCollectionIdResponse"
            },
            "s12.training.collections.v1.CourseCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the collection"
                    },
                    "created_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date the collection was created"
                    },
                    "modified_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date the collection was last modified"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the collection"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the collection"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "title": "URL of the thumbnail image for the collection"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the collection"
                    },
                    "number_of_courses": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of courses in the collection"
                    },
                    "status": {
                        "type": "string",
                        "title": "The status of the collection (published, draft)"
                    }
                },
                "title": "Response type within GetCourseCollectionsResponse"
            },
            "s12.training.collections.v1.GetCourseCollectionsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of collections matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.collections.v1.CourseCollection"
                        },
                        "title": "List of collections"
                    }
                },
                "title": "Response to GetCourseCollections"
            },
            "s12.training.collections.v1.GetCoursesByCourseCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of courses matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.collections.v1.Course"
                        },
                        "title": "List of courses"
                    }
                },
                "title": "Response to GetCoursesByCourseCollectionId"
            },
            "s12.training.collections.v1.TranslationOriginalCourse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the original course"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the original course"
                    }
                },
                "title": "Response type within GetCoursesByCourseCollectionIdResponse"
            },
            "s12.training.courses.v1.Course": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the course"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the course"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the course"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the course"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status of the course (Draft, Scheduled, Published, Archived)"
                    },
                    "locale": {
                        "type": "string",
                        "title": "Locale of the course"
                    },
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "Flag to indicate if the course is mandatory to take for users"
                    },
                    "due_by": {
                        "type": "string",
                        "title": "Due by type of the course (notSpecified, static, relative)"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Duration of the course in seconds"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "title": "URL of the thumbnail image for the course"
                    },
                    "created_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created date of the course"
                    },
                    "modified_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Modified date of the course"
                    },
                    "TranslationOriginalCourse": {
                        "$ref": "#/components/schemas/s12.training.courses.v1.TranslationOriginalCourse"
                    },
                    "logo_url": {
                        "type": "string",
                        "title": "Logo URL of the course"
                    },
                    "branding_image_url": {
                        "type": "string",
                        "title": "Branding image URL of the course"
                    },
                    "is_published": {
                        "type": "boolean",
                        "title": "Flag indicating if the course is published"
                    },
                    "lesson_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of lessons in the course"
                    }
                },
                "title": "Response type with GetCoursesResponse"
            },
            "s12.training.courses.v1.GetCoursesResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of courses matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.courses.v1.Course"
                        },
                        "title": "List of courses"
                    }
                },
                "title": "Response to GetCourses"
            },
            "s12.training.courses.v1.GetLessonsByCourseIdResponse": {
                "type": "object",
                "properties": {
                    "lessons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.courses.v1.Lesson"
                        },
                        "title": "List of lessons"
                    }
                },
                "title": "Response to GetLessonsByCourseId"
            },
            "s12.training.courses.v1.Lesson": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the lesson"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the lesson"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the lesson"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the lesson"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status of the lesson (published, draft)"
                    },
                    "minimum_score": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Minimum score required to pass the lesson"
                    }
                },
                "title": "Response type within GetLessonsByCourseIdResponse"
            },
            "s12.training.courses.v1.TrainingCoursesService.UpdateCourseAssignmentsBody": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.courses.v1.UpdateCourseAssignmentsRequest.Assignment"
                        },
                        "title": "List of assignment changes for the course"
                    },
                    "universal_access": {
                        "type": "boolean",
                        "title": "Assign course to all Training users within the orginzation"
                    },
                    "clear_all_users": {
                        "type": "boolean",
                        "title": "Remove all course user assignments"
                    },
                    "clear_all_groups": {
                        "type": "boolean",
                        "title": "Remove all course group assignments"
                    },
                    "clear_all_sites": {
                        "type": "boolean",
                        "title": "Remove all course site assignments"
                    }
                },
                "title": "Unified request for saving assignments for a course"
            },
            "s12.training.courses.v1.TranslationOriginalCourse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the original course"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External ID of the original course"
                    }
                },
                "title": "Response type within Course type"
            },
            "s12.training.courses.v1.UpdateCourseAssignmentsRequest.Assignment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id of the type getting assigned.\n(ie. if type=ASSIGNMENT_TYPE_USER then id should be a user Id)"
                    },
                    "type": {
                        "$ref": "#/components/schemas/s12.training.courses.v1.UpdateCourseAssignmentsRequest.AssignmentType"
                    },
                    "is_assigned": {
                        "type": "boolean",
                        "title": "The assignment state of the entity"
                    }
                },
                "title": "An assignment change for an entity to a course"
            },
            "s12.training.courses.v1.UpdateCourseAssignmentsRequest.AssignmentType": {
                "type": "string",
                "enum": [
                    "ASSIGNMENT_TYPE_UNSPECIFIED",
                    "ASSIGNMENT_TYPE_USER",
                    "ASSIGNMENT_TYPE_GROUP",
                    "ASSIGNMENT_TYPE_SITE"
                ],
                "default": "ASSIGNMENT_TYPE_UNSPECIFIED",
                "title": "- ASSIGNMENT_TYPE_UNSPECIFIED: Invalid default assignment type\n - ASSIGNMENT_TYPE_USER: The assignment should reflect a user being assigned the course\n - ASSIGNMENT_TYPE_GROUP: The assignment should reflect a group being assigned the course\n - ASSIGNMENT_TYPE_SITE: The assignment should reflect a site being assigned the course"
            },
            "s12.training.courses.v1.UpdateCourseAssignmentsResponse": {
                "type": "object",
                "properties": {
                    "users_updated": {
                        "type": "integer",
                        "format": "int32",
                        "title": "How many user assignment were updated in the request"
                    },
                    "groups_updated": {
                        "type": "integer",
                        "format": "int32",
                        "title": "How many group assignments were updated in the request"
                    },
                    "sites_updated": {
                        "type": "integer",
                        "format": "int32",
                        "title": "How man site assignments were updated in the request"
                    }
                },
                "title": "Response from the unified update request"
            },
            "s12.training.feed.v1.FeedCourseProgress": {
                "type": "object",
                "properties": {
                    "opened_at": {
                        "type": "string"
                    },
                    "completed_at": {
                        "type": "string"
                    },
                    "total_lessons": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "completed_lessons": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "course_id": {
                        "type": "string"
                    },
                    "course_external_id": {
                        "type": "string"
                    },
                    "course_title": {
                        "type": "string"
                    },
                    "user_email": {
                        "type": "string"
                    },
                    "user_first_name": {
                        "type": "string"
                    },
                    "user_last_name": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user_external_id": {
                        "type": "string"
                    },
                    "progress_percent": {
                        "type": "number",
                        "format": "float"
                    },
                    "score": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "due_at": {
                        "type": "string"
                    }
                },
                "title": "The progress of a course for a user"
            },
            "s12.training.feed.v1.FeedTrainingCourseProgressResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/s12.common.v1.FeedMetadataSimple"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.feed.v1.FeedCourseProgress"
                        }
                    }
                },
                "title": "Response of Feed for Course Progress"
            },
            "s12.training.individualleaderboards.v1.GetIndividualLeaderboardRankingsResponse": {
                "type": "object",
                "properties": {
                    "leaderboard_id": {
                        "type": "string",
                        "title": "ID of the individual leaderboard"
                    },
                    "leaderboard_name": {
                        "type": "string",
                        "title": "Name of the individual leaderboard"
                    },
                    "leaderboard_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start date of the individual leaderboard"
                    },
                    "leaderboard_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End date of the individual leaderboard"
                    },
                    "Rankings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.individualleaderboards.v1.Ranking"
                        },
                        "title": "Rankings for the individual leaderboard"
                    }
                },
                "title": "Response for GetIndividualLeaderboardRankings"
            },
            "s12.training.individualleaderboards.v1.GetIndividualLeaderboardsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total number of individual leaderboards matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.individualleaderboards.v1.IndividualLeaderboard"
                        },
                        "title": "List of individual leaderboards"
                    }
                },
                "title": "Response for GetIndividualLeaderboards"
            },
            "s12.training.individualleaderboards.v1.IndividualLeaderboard": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the individual leaderboard"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the individual leaderboard"
                    },
                    "learner_access": {
                        "type": "boolean",
                        "title": "Flag to indicate if the leaderboard is accessible to learners"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start date of the individual leaderboard"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End date of the individual leaderboard"
                    },
                    "participant_group_id": {
                        "type": "string",
                        "title": "The ID of the participant group"
                    }
                },
                "title": "Response type within GetIndividualLeaderboardRankingsResponse"
            },
            "s12.training.individualleaderboards.v1.Ranking": {
                "type": "object",
                "properties": {
                    "rank": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Ranking number"
                    },
                    "participant_id": {
                        "type": "string",
                        "title": "ID of the participant/user"
                    },
                    "participant_name": {
                        "type": "string",
                        "title": "Name of the participant/user"
                    },
                    "participant_avatar_url": {
                        "type": "string",
                        "title": "URL of the participant/user's avatar"
                    },
                    "total_score": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total score of the participant/user"
                    },
                    "is_not_attempted": {
                        "type": "boolean",
                        "title": "Flag to indicate if the participant/user has not attempted the individual leaderboard"
                    }
                },
                "title": "Response type within GetIndividualLeaderboardRankingsResponse"
            },
            "s12.training.paths.v1.GetPathByIdResponse": {
                "type": "object",
                "properties": {
                    "path": {
                        "$ref": "#/components/schemas/s12.training.paths.v1.Path"
                    }
                },
                "title": "Response to GetPathById"
            },
            "s12.training.paths.v1.GetPathsResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of paths matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.paths.v1.PathSummary"
                        },
                        "title": "List of paths"
                    }
                },
                "title": "Response to GetPaths"
            },
            "s12.training.paths.v1.Path": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the path"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the path"
                    },
                    "is_published": {
                        "type": "boolean",
                        "title": "Publication status of the path"
                    },
                    "path_type": {
                        "type": "string",
                        "title": "Type of path (Free, Sequential)"
                    },
                    "user_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Group IDs assigned to path"
                    }
                },
                "title": "Response type within GetPathByIdResponse"
            },
            "s12.training.paths.v1.PathSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the path"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the path"
                    },
                    "is_published": {
                        "type": "boolean",
                        "title": "Flag indicating of the path is published"
                    }
                },
                "title": "Response type within GetPathsResponse"
            },
            "s12.training.rapidrefresh.v1.GetRapidRefreshByIdResponse": {
                "type": "object",
                "properties": {
                    "rapid_refresh": {
                        "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.RapidRefresh"
                    }
                },
                "title": "Response to GetRapidRefreshById"
            },
            "s12.training.rapidrefresh.v1.GetRapidRefreshResponse": {
                "type": "object",
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The total number of rapid refreshes matching the request"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.RapidRefreshSummary"
                        },
                        "title": "List of rapid refreshes"
                    }
                },
                "title": "Response to GetRapidRefresh"
            },
            "s12.training.rapidrefresh.v1.Option": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the question"
                    },
                    "answer_number": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Answer number"
                    },
                    "answer_text": {
                        "type": "string",
                        "title": "Answer text"
                    },
                    "correct": {
                        "type": "boolean",
                        "title": "Flag indicating correct option"
                    }
                },
                "title": "Response type within Question"
            },
            "s12.training.rapidrefresh.v1.Question": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the question"
                    },
                    "question_number": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of the question"
                    },
                    "question_text": {
                        "type": "string",
                        "title": "Text of the question"
                    },
                    "followup_text": {
                        "type": "string",
                        "title": "Follow-up text of the question"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.Option"
                        },
                        "title": "List of question options"
                    }
                },
                "title": "Response type within RapidRefresh"
            },
            "s12.training.rapidrefresh.v1.RapidRefresh": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the rapid refresh"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the rapid refresh"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the rapid refresh"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start date of the rapid refresh"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End date of the rapid refresh"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status of the rapid refresh (all, draft, scheduled, in-progress, ended)"
                    },
                    "schedule": {
                        "type": "string",
                        "title": "Schedule of the rapid refresh (NotSpecified, Once, Daily, Weekly)"
                    },
                    "language": {
                        "type": "string",
                        "title": "Language of the rapid refresh"
                    },
                    "leaderboard_enabled": {
                        "type": "boolean",
                        "title": "Flag indicating leaderboards are enabled"
                    },
                    "retries_enabled": {
                        "type": "boolean",
                        "title": "Flag indicating retries are enabled"
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.training.rapidrefresh.v1.Question"
                        },
                        "title": "List of questions in the rapid refresh"
                    }
                },
                "title": "Response type within GetRapidRefreshByIdResponse"
            },
            "s12.training.rapidrefresh.v1.RapidRefreshSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID of the rapid refresh"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title of the rapid refresh"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description of the rapid refresh"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start date of the rapid refresh"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End date of the rapid refresh"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status of the rapid refresh (all, draft, scheduled, in-progress, ended)"
                    },
                    "schedule": {
                        "type": "string",
                        "title": "Schedule of the rapid refresh (NotSpecified, Once, Daily, Weekly)"
                    }
                },
                "title": "Response type within GetRapidRefreshResponse"
            },
            "s12.typefield.v1.CreateFieldAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Required. Name of the field."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the field."
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    },
                    "id": {
                        "type": "string",
                        "description": "Optional. ID of the field."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "Optional. The options of a field select."
                    }
                },
                "title": "CreateFieldAttributes defines the common criteria to create generic fields. These attributes should be domain agnostic"
            },
            "s12.typefield.v1.CreateTypeAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Required. Name of the type."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the type."
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the type."
                    }
                },
                "title": "CreateTypeAttributes defines the common criteria to create generic types. These attributes should be domain agnostic"
            },
            "s12.typefield.v1.Domain": {
                "type": "string",
                "enum": [
                    "DOMAIN_UNSPECIFIED",
                    "DOMAIN_GLOBAL",
                    "DOMAIN_ASSETS",
                    "DOMAIN_CONTRACTORS",
                    "DOMAIN_LICENSES_AND_CREDENTIALS",
                    "DOMAIN_TASKS",
                    "DOMAIN_USERS",
                    "DOMAIN_INVESTIGATIONS"
                ],
                "default": "DOMAIN_UNSPECIFIED",
                "description": "The domain is used to specify which domain the data is coming from.\nThis allows the shared generic type field service to keep track of which domain owns the data,\nand enforce any domain-specific access control rules.\n\n - DOMAIN_UNSPECIFIED: Domain Unspecified.\n - DOMAIN_GLOBAL: Owned and managed by system can be used by multiple domains\n - DOMAIN_ASSETS: Owned and created from Assets domain\n - DOMAIN_CONTRACTORS: Owned and created from Contractor Management domain\n - DOMAIN_LICENSES_AND_CREDENTIALS: Owned and created from the Licenses and Credentials domain\n - DOMAIN_TASKS: Owned and created from the Tasks domain\n - DOMAIN_USERS: Owned and created from the Users domain\n - DOMAIN_INVESTIGATIONS: Owned and created from the Investigations domain"
            },
            "s12.typefield.v1.Field": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A global unique identifier for a field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the field."
                    },
                    "field_category": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldCategory"
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    },
                    "domain": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Domain"
                    },
                    "field_state": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldState"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "description": "The options of a field select."
                    }
                },
                "description": "Describes the values of a field."
            },
            "s12.typefield.v1.FieldCategory": {
                "type": "string",
                "enum": [
                    "FIELD_CATEGORY_UNSPECIFIED",
                    "FIELD_CATEGORY_SYSTEM_FIELD",
                    "FIELD_CATEGORY_CUSTOM_FIELD"
                ],
                "default": "FIELD_CATEGORY_UNSPECIFIED",
                "description": "- FIELD_CATEGORY_UNSPECIFIED: Field category Unspecified.\n - FIELD_CATEGORY_SYSTEM_FIELD: Field category pre-defined.\n - FIELD_CATEGORY_CUSTOM_FIELD: Field category custom.",
                "title": "Category of Field"
            },
            "s12.typefield.v1.FieldMapping": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "description": "Required. Field identifier."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Optional. Defines if the field is required to be filled.\nWill be used to validate an instance of the type against the mapping."
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Optional. Additional metadata assigned to the mapping."
                    },
                    "field_name": {
                        "type": "string",
                        "title": "Readonly. specifies the field's name",
                        "readOnly": true
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    },
                    "field_description": {
                        "type": "string",
                        "title": "Readonly. specifies the field's description",
                        "readOnly": true
                    }
                },
                "title": "Defines a field association and mapping attributes"
            },
            "s12.typefield.v1.FieldOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of a field select option."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of a field select option."
                    }
                }
            },
            "s12.typefield.v1.FieldState": {
                "type": "string",
                "enum": [
                    "FIELD_STATE_UNSPECIFIED",
                    "FIELD_STATE_ACTIVE",
                    "FIELD_STATE_DELETED"
                ],
                "default": "FIELD_STATE_UNSPECIFIED",
                "description": "State of the field.\n\n - FIELD_STATE_UNSPECIFIED: Field state unspecified.\n - FIELD_STATE_ACTIVE: Field is active.\n - FIELD_STATE_DELETED: Field is deleted."
            },
            "s12.typefield.v1.FieldValue": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "description": "A global unique identifier for a field."
                    },
                    "string_value": {
                        "type": "string",
                        "description": "The string value of a field."
                    },
                    "money_value": {
                        "$ref": "#/components/schemas/s12.common.Money"
                    },
                    "timestamp_value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp value of a field."
                    }
                },
                "description": "Individual field value definition."
            },
            "s12.typefield.v1.FieldValueType": {
                "type": "string",
                "enum": [
                    "FIELD_VALUE_TYPE_UNSPECIFIED",
                    "FIELD_VALUE_TYPE_STRING",
                    "FIELD_VALUE_TYPE_MONEY",
                    "FIELD_VALUE_TYPE_TIMESTAMP",
                    "FIELD_VALUE_TYPE_USER_ID",
                    "FIELD_VALUE_TYPE_SELECT",
                    "FIELD_VALUE_TYPE_TEMPLATE_ID",
                    "FIELD_VALUE_TYPE_MULTI_SELECT",
                    "FIELD_VALUE_TYPE_SITE",
                    "FIELD_VALUE_TYPE_MULTI_SITE"
                ],
                "default": "FIELD_VALUE_TYPE_UNSPECIFIED",
                "description": "Type of FieldValue.\nDefaults to type String.\n\n - FIELD_VALUE_TYPE_UNSPECIFIED: Field value type unspecified.\n - FIELD_VALUE_TYPE_STRING: Field value type string.\n - FIELD_VALUE_TYPE_MONEY: Field value type money.\n - FIELD_VALUE_TYPE_TIMESTAMP: Field value type timestamp.\n - FIELD_VALUE_TYPE_USER_ID: Field value type user ID.\n - FIELD_VALUE_TYPE_SELECT: Field value type select\n - FIELD_VALUE_TYPE_TEMPLATE_ID: Field value type template ID.\n - FIELD_VALUE_TYPE_MULTI_SELECT: Field value type multi-select\n - FIELD_VALUE_TYPE_SITE: Field value type site\n - FIELD_VALUE_TYPE_MULTI_SITE: Field value type multi-site"
            },
            "s12.typefield.v1.ListTypesCriteria": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/s12.typefield.v1.ListTypesCriteria.Filter"
                    },
                    "sort_field": {
                        "$ref": "#/components/schemas/s12.typefield.v1.ListTypesCriteria.SortField"
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "include_stats": {
                        "type": "boolean",
                        "description": "Include stats associated with a type."
                    }
                },
                "title": "Criteria defines the common criteria to list generic types. This criteria should be domain agnostic"
            },
            "s12.typefield.v1.ListTypesCriteria.Filter": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "title": "Search on a Type's name"
                    },
                    "category": {
                        "$ref": "#/components/schemas/s12.typefield.v1.TypeCategory"
                    },
                    "type_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Search on type's ids"
                    },
                    "exclude_type_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Type ids to exclude for the response"
                    }
                }
            },
            "s12.typefield.v1.ListTypesCriteria.SortField": {
                "type": "string",
                "enum": [
                    "SORT_FIELD_UNSPECIFIED",
                    "SORT_FIELD_NAME"
                ],
                "default": "SORT_FIELD_UNSPECIFIED",
                "description": "The options available to sort returned types by.\n\n - SORT_FIELD_UNSPECIFIED: `SORT_FIELD_UNSPECIFIED` returns the default sort order.\n - SORT_FIELD_NAME: `SORT_FIELD_NAME` sorts document types by name."
            },
            "s12.typefield.v1.Type": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A global unique identifier for a type."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the type."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the type."
                    },
                    "type_category": {
                        "$ref": "#/components/schemas/s12.typefield.v1.TypeCategory"
                    },
                    "domain": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Domain"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/s12.typefield.v1.TypeStats"
                    }
                },
                "description": "Describes the values of a type."
            },
            "s12.typefield.v1.TypeCategory": {
                "type": "string",
                "enum": [
                    "TYPE_CATEGORY_UNSPECIFIED",
                    "TYPE_CATEGORY_SYSTEM",
                    "TYPE_CATEGORY_CUSTOM"
                ],
                "default": "TYPE_CATEGORY_UNSPECIFIED",
                "description": "- TYPE_CATEGORY_UNSPECIFIED: Type Unspecified.\n - TYPE_CATEGORY_SYSTEM: Type pre-defined.\n - TYPE_CATEGORY_CUSTOM: Type custom.",
                "title": "TypeCategory defines if it's system or user created type"
            },
            "s12.typefield.v1.TypeStats": {
                "type": "object",
                "properties": {
                    "mapping_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of mappings associated with a type."
                    }
                },
                "description": "Stats associated with a type."
            },
            "s12.userdocuments.v1.AddDocumentVersionForUserRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "Required. The user ID to add the credential to"
                    },
                    "document_type_id": {
                        "type": "string",
                        "title": "Required. The ID of the credential type"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Required. The ID of the credential."
                    },
                    "new_version_id": {
                        "type": "string",
                        "title": "Optional. The ID of the new credential version. This is an optional field, but if provided it will link the newly created credential to any recently uploaded media"
                    },
                    "document_version_attributes": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionAttributes"
                    }
                }
            },
            "s12.userdocuments.v1.AddDocumentVersionForUserResponse": {
                "type": "object",
                "properties": {
                    "version_id": {
                        "type": "string",
                        "title": "Required. The versionID of the version added"
                    }
                }
            },
            "s12.userdocuments.v1.CreateDocumentTypeRequest": {
                "type": "object",
                "properties": {
                    "document_category": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentCategory"
                    },
                    "type_attributes": {
                        "$ref": "#/components/schemas/s12.typefield.v1.CreateTypeAttributes"
                    }
                }
            },
            "s12.userdocuments.v1.CreateDocumentTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the created credential type."
                    }
                }
            },
            "s12.userdocuments.v1.DeleteAllMediaForDocumentVersionRequest": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "Required. The ID of the credential."
                    },
                    "version_id": {
                        "type": "string",
                        "description": "Required. The version ID of the credential."
                    },
                    "user_id": {
                        "type": "string",
                        "title": "Required. The user ID this credential is associated with"
                    }
                }
            },
            "s12.userdocuments.v1.DeleteAllMediaForDocumentVersionResponse": {
                "type": "object"
            },
            "s12.userdocuments.v1.DeleteDocumentForUserResponse": {
                "type": "object"
            },
            "s12.userdocuments.v1.DeleteDocumentTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the field."
                    }
                }
            },
            "s12.userdocuments.v1.DocumentApprovalStatus": {
                "type": "string",
                "enum": [
                    "DOCUMENT_APPROVAL_STATUS_PENDING",
                    "DOCUMENT_APPROVAL_STATUS_PENDING_RESUBMISSION",
                    "DOCUMENT_APPROVAL_STATUS_APPROVED"
                ],
                "description": "The approval status of a credential."
            },
            "s12.userdocuments.v1.DocumentCategory": {
                "type": "string",
                "enum": [
                    "DOCUMENT_CATEGORY_LICENSES_AND_CREDENTIALS"
                ],
                "description": "- DOCUMENT_CATEGORY_LICENSES_AND_CREDENTIALS: Licenses and credentials for users",
                "title": "DocumentCategory is used to specify the category of document"
            },
            "s12.userdocuments.v1.DocumentType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the document type."
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the type"
                    }
                },
                "title": "A type of document"
            },
            "s12.userdocuments.v1.DocumentVersion": {
                "type": "object",
                "properties": {
                    "subject_org_id": {
                        "type": "string",
                        "description": "The ID of the organization that a credential is stored in."
                    },
                    "subject_user_id": {
                        "type": "string",
                        "title": "@deprecated: use subject_user instead"
                    },
                    "document_type_id": {
                        "type": "string",
                        "title": "@deprecated: use document_type instead"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "The ID of a credential."
                    },
                    "document_version_id": {
                        "type": "string",
                        "description": "The ID of a credential version."
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionAttributes"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionMetadata"
                    },
                    "subject_user": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.User"
                    },
                    "document_type": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentType"
                    }
                },
                "description": "A version is the point-in-time snapshot of a credential. A credential can have multiple versions that are added and edited over time."
            },
            "s12.userdocuments.v1.DocumentVersionAttributes": {
                "type": "object",
                "properties": {
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.common.Media"
                        },
                        "description": "Media array to be associated with the document."
                    },
                    "expiry_period_start_date": {
                        "$ref": "#/components/schemas/google.type.Date"
                    },
                    "expiry_period_end_date": {
                        "$ref": "#/components/schemas/google.type.Date"
                    }
                },
                "description": "Intrinsic attributes associated with a credential version."
            },
            "s12.userdocuments.v1.DocumentVersionFilter": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.UserID"
                    },
                    "document_type_id": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.DocumentTypeID"
                    },
                    "user_status": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.UserStatusFilter"
                    },
                    "expiry_status": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.ExpiryStatusFilter"
                    },
                    "approval_status": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.ApprovalStatusFilter"
                    },
                    "groups": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.GroupsFilter"
                    },
                    "sites": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.SitesFilter"
                    },
                    "companies": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter.CompaniesFilter"
                    }
                },
                "description": "DocumentVersionFilter is used to filter document versions based on various criteria."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.ApprovalStatusFilter": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentApprovalStatus"
                        },
                        "description": "The approval status values."
                    }
                },
                "description": "ApprovalStatusFilter is the approval status of the document."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.CompaniesFilter": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Company UUIDs to filter for"
                    }
                },
                "description": "CompaniesFilter is used to query for documents based on the companies the associated user is assigned to."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.DocumentTypeID": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The UUID form of the document type ID."
                    }
                },
                "description": "DocumentTypeID is used to query for documents of a particular type."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.ExpiryStatusFilter": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.userdocuments.v1.ExpiryStatus"
                        },
                        "description": "The expiry status values."
                    }
                },
                "description": "ExpiryStatusFilter is the expiry status of the document."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.GroupsFilter": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Group UUIDs to filter for"
                    }
                },
                "description": "GroupsFilter is used to query for documents based on the groups they are assigned to."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.SitesFilter": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Site UUIDs to filter for"
                    }
                }
            },
            "s12.userdocuments.v1.DocumentVersionFilter.UserID": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The UUID form of the user ID."
                    }
                },
                "description": "UserID is a filter that can be used to request documents for a specific set of users."
            },
            "s12.userdocuments.v1.DocumentVersionFilter.UserStatusFilter": {
                "type": "object",
                "properties": {
                    "value": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.UserStatus"
                    }
                },
                "description": "UserStatus is used to query for documents based on user's activation status."
            },
            "s12.userdocuments.v1.DocumentVersionMetadata": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date of a credential version."
                    },
                    "created_by_user": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.User"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last modified date of a credential version."
                    },
                    "last_modified_by_user": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.User"
                    },
                    "expiry_status": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.ExpiryStatus"
                    }
                },
                "description": "Metadata associated with a credential version."
            },
            "s12.userdocuments.v1.DocumentVersionSortField": {
                "type": "string",
                "enum": [
                    "DOCUMENT_VERSION_SORT_FIELD_EXPIRY"
                ],
                "description": "DocumentVersionSortField is used to sort document versions based on various criteria.\n\n - DOCUMENT_VERSION_SORT_FIELD_EXPIRY: `DOCUMENT_VERSION_SORT_FIELD_EXPIRY` will sort credentials by expiry date."
            },
            "s12.userdocuments.v1.ExpiryStatus": {
                "type": "string",
                "enum": [
                    "EXPIRY_STATUS_VALID",
                    "EXPIRY_STATUS_EXPIRED",
                    "EXPIRY_STATUS_EXPIRING_SOON"
                ],
                "description": "The status of a credential based on its expiration period."
            },
            "s12.userdocuments.v1.GetDocumentHistoryRequest": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "Required. The ID of the credential."
                    }
                }
            },
            "s12.userdocuments.v1.GetDocumentHistoryResponse": {
                "type": "object",
                "properties": {
                    "document_versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersion"
                        },
                        "description": "The credential versions for this particular credential."
                    }
                }
            },
            "s12.userdocuments.v1.GetDocumentTypeResponse": {
                "type": "object",
                "properties": {
                    "document_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    }
                }
            },
            "s12.userdocuments.v1.GetDocumentVersionResponse": {
                "type": "object",
                "properties": {
                    "document_version": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersion"
                    }
                }
            },
            "s12.userdocuments.v1.GetDocumentsRequest": {
                "type": "object",
                "properties": {
                    "page_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of credentials to return in a single request. This defaults to 20."
                    },
                    "page_token": {
                        "type": "string",
                        "description": "If present, will fetch the next page of results. This must be the value of `next_page_token` from the response."
                    },
                    "sort_direction": {
                        "$ref": "#/components/schemas/s12.common.SortDirection"
                    },
                    "document_version_filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionFilter"
                        },
                        "description": "An array of filters that can be provided to request specific credentials."
                    },
                    "document_version_sort_field": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionSortField"
                    }
                }
            },
            "s12.userdocuments.v1.GetDocumentsResponse": {
                "type": "object",
                "properties": {
                    "next_page_token": {
                        "type": "string",
                        "description": "If there are more results available, this will be set. If this is unset, there are no more results.\nTo get the next set of results, call `GetDocuments` again with `page_token` set to this value."
                    },
                    "latest_document_versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersion"
                        },
                        "description": "The latest version of each credential returned by the query."
                    }
                }
            },
            "s12.userdocuments.v1.GetSettingsResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.UserDocumentsSettings"
                    }
                }
            },
            "s12.userdocuments.v1.ListDocumentTypesRequest": {
                "type": "object",
                "properties": {
                    "document_category": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentCategory"
                    },
                    "include_global": {
                        "type": "boolean",
                        "title": "Whether to include global types"
                    },
                    "type_criteria": {
                        "$ref": "#/components/schemas/s12.typefield.v1.ListTypesCriteria"
                    }
                }
            },
            "s12.userdocuments.v1.ListDocumentTypesResponse": {
                "type": "object",
                "properties": {
                    "next_page_token": {
                        "type": "string",
                        "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. If empty then there are no more results.\nTo get the next set of results, call this method again using the value of\n`next_page_token` as `page_token`."
                    },
                    "types_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.Type"
                        },
                        "description": "List of types that satisfy filters under current organization."
                    }
                }
            },
            "s12.userdocuments.v1.UpdateDocumentTypeRequest": {
                "type": "object",
                "properties": {
                    "update_mask": {
                        "type": "string",
                        "description": "The attributes (such as name etc.) you want to update for the type,\nspecified in the parameters. For example, the update_mask=name parameter\nindicates that only the name will be updated in a request, any other\nattributes provided in your request body will be ignored."
                    },
                    "document_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    }
                }
            },
            "s12.userdocuments.v1.UpdateDocumentTypeResponse": {
                "type": "object",
                "properties": {
                    "document_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.Type"
                    }
                }
            },
            "s12.userdocuments.v1.UpdateDocumentVersionForUserRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "Required. The user ID to add the credential to"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Required. The ID of the credential."
                    },
                    "version_id": {
                        "type": "string",
                        "description": "Required. The ID of the new credential version."
                    },
                    "document_version_attributes": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.DocumentVersionAttributes"
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "Required. The attributes (such as name etc.) you want to update for the credential version. The contents should reference fields of the DocumentVersionAttributes message.\nFor example, 'update_mask=media,expiry_period_start_date' indicates that only the media and expiry_period_start_date\nfields of the DocumentVersionAttributes message should be updated. Any other attributes provided in the DocumentVersionAttributes body will be ignored."
                    }
                }
            },
            "s12.userdocuments.v1.UpdateDocumentVersionForUserResponse": {
                "type": "object"
            },
            "s12.userdocuments.v1.UpdateSettingsRequest": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.UserDocumentsSettings"
                    }
                }
            },
            "s12.userdocuments.v1.UpdateSettingsResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/s12.userdocuments.v1.UserDocumentsSettings"
                    }
                }
            },
            "s12.userdocuments.v1.User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the user."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "The first name of the user."
                    },
                    "last_name": {
                        "type": "string",
                        "description": "The last name of the user."
                    }
                },
                "description": "Information about a SafetyCulture user."
            },
            "s12.userdocuments.v1.UserDocumentsSettings": {
                "type": "object",
                "properties": {
                    "optional_media": {
                        "type": "boolean",
                        "description": "optional_media denotes whether media is optional for credentials. If this is set to true, credentials can be created without media."
                    },
                    "approvals_enabled": {
                        "type": "boolean",
                        "description": "approvals_enabled denotes whether approvals are enabled for credentials. If this is set to true, credentials approval flow is taken into account."
                    }
                },
                "description": "UserDocumentsSettings represents the Credential settings for your organization."
            },
            "s12.userdocuments.v1.UserStatus": {
                "type": "string",
                "enum": [
                    "USER_STATUS_ACTIVE",
                    "USER_STATUS_DEACTIVATED"
                ],
                "description": "The status of a user with respect to the organization. A user can be active or deactivated.\n\n - USER_STATUS_ACTIVE: The user is active.\n - USER_STATUS_DEACTIVATED: The user is deactivated."
            },
            "s12.users.userattribute.v1.Attribute": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "string",
                        "title": "Required. The field UUID"
                    },
                    "attribute_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.userattribute.v1.AttributeValue"
                        },
                        "title": "The list of values if field supports multiple values"
                    },
                    "field_name": {
                        "type": "string",
                        "title": "Read only. The name of the field",
                        "readOnly": true
                    },
                    "value_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    }
                }
            },
            "s12.users.userattribute.v1.AttributeValue": {
                "type": "object",
                "properties": {
                    "string_value": {
                        "type": "string",
                        "description": "The string value of a field."
                    },
                    "timestamp_value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp value of a field."
                    },
                    "uuid_value": {
                        "type": "string",
                        "title": "The UUID value of a field"
                    }
                }
            },
            "s12.users.userattribute.v1.GetUserAttributesResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.userattribute.v1.Attribute"
                        },
                        "title": "The list of attributes for the user"
                    }
                }
            },
            "s12.users.userattribute.v1.SetUserAttributesResponse": {
                "type": "object"
            },
            "s12.users.userattribute.v1.UserAttributeService.SetUserAttributesBody": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.userattribute.v1.Attribute"
                        },
                        "title": "Required. The list of attributes to set"
                    }
                }
            },
            "s12.users.userfield.v1.CreateFieldRequest": {
                "type": "object",
                "properties": {
                    "data_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    },
                    "name": {
                        "type": "string",
                        "title": "Required. Attribute name"
                    },
                    "description": {
                        "type": "string",
                        "title": "The attribute description"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldSettings"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "title": "Field select options"
                    }
                }
            },
            "s12.users.userfield.v1.CreateFieldResponse": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.Field"
                    }
                }
            },
            "s12.users.userfield.v1.DeleteFieldResponse": {
                "type": "object"
            },
            "s12.users.userfield.v1.DisableFieldResponse": {
                "type": "object"
            },
            "s12.users.userfield.v1.Field": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Required. The field UUID"
                    },
                    "data_type": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                    },
                    "name": {
                        "type": "string",
                        "title": "Required. The attribute name"
                    },
                    "description": {
                        "type": "string",
                        "title": "The attribute description"
                    },
                    "has_attributes": {
                        "type": "boolean",
                        "title": "Required. Flag to specify if the field has associated populated attributes"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldStatus"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldSettings"
                    },
                    "category": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldCategory"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "title": "Field select options"
                    }
                }
            },
            "s12.users.userfield.v1.FieldSettings": {
                "type": "object",
                "properties": {
                    "show_on_profile": {
                        "type": "boolean",
                        "title": "Required. Flag to specify if the attribute is visible/configurable on the user profile"
                    },
                    "allow_self_update": {
                        "type": "boolean",
                        "title": "Required. Flag to specify if all users can update the attribute for their own account"
                    }
                }
            },
            "s12.users.userfield.v1.FieldStatus": {
                "type": "string",
                "enum": [
                    "FIELD_STATUS_UNSPECIFIED",
                    "FIELD_STATUS_ENABLED",
                    "FIELD_STATUS_DISABLED"
                ],
                "default": "FIELD_STATUS_UNSPECIFIED"
            },
            "s12.users.userfield.v1.ListFieldsRequest": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.ListFieldsRequest.FieldsFilter"
                    }
                }
            },
            "s12.users.userfield.v1.ListFieldsRequest.FieldsFilter": {
                "type": "object",
                "properties": {
                    "field_category": {
                        "$ref": "#/components/schemas/s12.typefield.v1.FieldCategory"
                    },
                    "data_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldValueType"
                        },
                        "description": "Data type for the attributes.\nProviding an empty data_types list will result in all data types being returned."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldStatus"
                    },
                    "query": {
                        "type": "string",
                        "title": "The attribute name to filter by"
                    }
                }
            },
            "s12.users.userfield.v1.ListFieldsResponse": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.userfield.v1.Field"
                        },
                        "title": "List of user fields that satisfy the filter condition sorted by System Fields, Custom Fields"
                    }
                }
            },
            "s12.users.userfield.v1.RestoreFieldResponse": {
                "type": "object"
            },
            "s12.users.userfield.v1.SetFieldSettingsResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldSettings"
                    }
                }
            },
            "s12.users.userfield.v1.UpdateFieldResponse": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.Field"
                    }
                }
            },
            "s12.users.userfield.v1.UserFieldService.DisableFieldBody": {
                "type": "object"
            },
            "s12.users.userfield.v1.UserFieldService.RestoreFieldBody": {
                "type": "object"
            },
            "s12.users.userfield.v1.UserFieldService.SetFieldSettingsBody": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/s12.users.userfield.v1.FieldSettings"
                    }
                }
            },
            "s12.users.userfield.v1.UserFieldService.UpdateFieldBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Attribute name"
                    },
                    "description": {
                        "type": "string",
                        "title": "The attribute description"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.typefield.v1.FieldOption"
                        },
                        "title": "Field select options"
                    },
                    "update_mask": {
                        "type": "string",
                        "description": "Required. The attributes (such as name etc.) you want to update for the field,\nspecified in the parameters. For example, the update_mask=name parameter\nindicates that only the name will be updated in a request, any other\nattributes provided in your request body will be ignored."
                    }
                }
            },
            "s12.users.v1.CancelCreateOrUpdateUsersJobResponse": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "string"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateAmbiguousReferenceError": {
                "type": "object",
                "properties": {
                    "possible_references": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                        },
                        "title": "Possible references that could be selected"
                    }
                },
                "title": "Error when a reference is ambiguous, as in there could be multiple possible selection options"
            },
            "s12.users.v1.CreateOrUpdateRequestUser": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "s12.users.v1.CreateOrUpdateResponseUser": {
                "type": "object",
                "properties": {
                    "operation": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Operation"
                    },
                    "user": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails"
                        },
                        "description": "Errors or warnings that occurred while attempting to add or update this user."
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateResponseUser.Action": {
                "type": "string",
                "enum": [
                    "ACTION_UNSPECIFIED",
                    "ACTION_CREATE",
                    "ACTION_UPDATE",
                    "ACTION_NO_CHANGE"
                ],
                "default": "ACTION_UNSPECIFIED",
                "title": "- ACTION_CREATE: User creation\n - ACTION_UPDATE: User update\n - ACTION_NO_CHANGE: No change to the user"
            },
            "s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails": {
                "type": "object",
                "properties": {
                    "reason": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Reason"
                    },
                    "field_hint": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Field"
                    },
                    "sub_field_reference": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                    },
                    "value_hint": {
                        "type": "string",
                        "description": "Optional value hint for the value that has issues, i.e. the username that is invalid."
                    },
                    "value_reference": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error details."
                    },
                    "level": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Level"
                    },
                    "details": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Details"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Details": {
                "type": "object",
                "properties": {
                    "ambiguous_reference": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateAmbiguousReferenceError"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Level": {
                "type": "string",
                "enum": [
                    "LEVEL_UNSPECIFIED",
                    "LEVEL_INFO",
                    "LEVEL_WARNING",
                    "LEVEL_ERROR",
                    "LEVEL_FATAL"
                ],
                "default": "LEVEL_UNSPECIFIED",
                "description": " - LEVEL_INFO: Indicates an error is only for informational purposes and can be safely ignored.\n\nEx: An ID was changed in formatting from S12ID to UUID (no functional change, just an FYI)\n - LEVEL_WARNING: Indicates an error can be ignored, but may have a different or unexpected outcome than requested.\n\nEx: Adding a user-site association for both parent and child sites (will only be added to the parent, but no\nuser intervention is needed)\n - LEVEL_ERROR: Indicates an error where there was no way to auto-resolve the issue, but processing of the remaining data was\nable to continue\n\nEx: A requested group does not exists in the organisation (stop processing this group, move on to the next)\n - LEVEL_FATAL: Indicates an error that caused the process to catastrophically fail and further data processing is not possible\n\nEx: Organisation has a negative number of seats used (we cannot recover from this 'impossible' state)"
            },
            "s12.users.v1.CreateOrUpdateResponseUser.ErrorDetails.Reason": {
                "type": "string",
                "enum": [
                    "REASON_UNSPECIFIED",
                    "REASON_INTERNAL",
                    "REASON_USER_EXISTS",
                    "REASON_USER_NOT_FOUND",
                    "REASON_DUPLICATE_ROW",
                    "REASON_DUPLICATE_USERNAME",
                    "REASON_MUST_HAVE_ID_OR_USERNAME",
                    "REASON_INVALID_ID_FORMAT",
                    "REASON_INVALID_USERNAME_FORMAT",
                    "REASON_ID_USERNAME_MISMATCH",
                    "REASON_FIELD_MANDATORY_FOR_CREATION",
                    "REASON_CANNOT_CREATE_DEACTIVATED_USERS",
                    "REASON_FIELD_CHANGE_NOT_ALLOWED_FOR_CALLER",
                    "REASON_INVALID_VALUE_GENERIC",
                    "REASON_INVALID_SEAT_PERMISSION_SET_COMBINATION",
                    "REASON_INVALID_VALUE_PASSWORD_TOO_WEAK",
                    "REASON_INVALID_VALUE_PASSWORD_CANNOT_UPDATE_USERS_PASSWORD",
                    "REASON_INVALID_VALUE_REFERENCE_NAME_DOES_NOT_FOUND",
                    "REASON_INVALID_VALUE_REFERENCE_ID_DOES_NOT_FOUND",
                    "REASON_PERMISSION_SET_PERMISSION_DENIED",
                    "REASON_PERMISSION_SET_USER_NOT_ACTIVE",
                    "REASON_PERMISSION_SET_NOT_FOUND",
                    "REASON_INVALID_PERMISSION_SET_FOR_ORGANISATION_TIER",
                    "REASON_USER_ATTRIBUTE_DUPLICATE_ATTRIBUTE",
                    "REASON_USER_ATTRIBUTE_NOT_FOUND",
                    "REASON_USER_ATTRIBUTE_INVALID_ATTRIBUTE_TYPE",
                    "REASON_USER_ATTRIBUTE_INVALID_SELECT_VALUE",
                    "REASON_USER_ATTRIBUTE_INVALID_USER_ID_VALUE",
                    "REASON_USER_ATTRIBUTE_INVALID_TIMESTAMP_VALUE",
                    "REASON_USER_ATTRIBUTE_INVALID_STRING_VALUE",
                    "REASON_INVALID_SEAT_TYPE_FOR_ORGANISATION_TIER",
                    "REASON_SEAT_LIMIT_REACHED",
                    "REASON_GROUP_NOT_FOUND",
                    "REASON_GROUP_DUPLICATE_ENTRY",
                    "REASON_GROUP_CANNOT_ASSIGN_TO_DEACTIVATED_USER",
                    "REASON_GROUP_INVALID_REMOVE_REFERENCE",
                    "REASON_GROUP_ASSOCIATION_LIMIT_REACHED",
                    "REASON_GROUP_REFERENCE_AMBIGUOUS",
                    "REASON_SITE_NOT_FOUND",
                    "REASON_SITE_DUPLICATE_ENTRY",
                    "REASON_SITE_CANNOT_ASSIGN_TO_DEACTIVATED_USER",
                    "REASON_USER_ALREADY_ASSIGNED_TO_ANCESTOR_SITE",
                    "REASON_SITE_INVALID_REMOVE_REFERENCE",
                    "REASON_SITE_ASSOCIATION_LIMIT_REACHED",
                    "REASON_SITE_REFERENCE_AMBIGUOUS",
                    "REASON_USER_ATTRIBUTE_DISABLED",
                    "REASON_LAST_ADMINISTRATOR",
                    "REASON_FIELD_VALUE_INVALID_MIN_LENGTH",
                    "REASON_FIELD_VALUE_INVALID_MAX_LENGTH",
                    "REASON_COMPANY_NOT_FOUND",
                    "REASON_COMPANY_DUPLICATE_ENTRY",
                    "REASON_COMPANY_CANNOT_ASSIGN_TO_DEACTIVATED_USER",
                    "REASON_COMPANY_INVALID_REMOVE_REFERENCE",
                    "REASON_COMPANY_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_CALLER",
                    "REASON_GROUP_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_DYNAMIC_GROUP",
                    "REASON_SITE_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_DYNAMIC_SITE"
                ],
                "default": "REASON_UNSPECIFIED",
                "title": "- REASON_UNSPECIFIED: Default failure value.\nAvoid using in favor of defining a specific failure case.\n - REASON_INTERNAL: Something went wrong but, we're not quite sure.\nAvoid using in favor of defining a specific failure case.\n - REASON_USER_EXISTS: User already exists with this username.\n - REASON_USER_NOT_FOUND: User ID was unable to be found.\n - REASON_DUPLICATE_ROW: Duplicate rows detected.\n - REASON_DUPLICATE_USERNAME: Duplicate username detected - Different to REASON_DUPLICATE_ROW, this is thrown if the user manages to get a username past our validation, but our internal system detects a duplicate.\n - REASON_MUST_HAVE_ID_OR_USERNAME: A record must have an ID or a username to support with updating.\n - REASON_INVALID_ID_FORMAT: ID is in an invalid format\n - REASON_INVALID_USERNAME_FORMAT: Username is in an invalid format\n - REASON_ID_USERNAME_MISMATCH: Username does not match existing username, username updates are currently not supported.\n - REASON_FIELD_MANDATORY_FOR_CREATION: The field referenced is mandatory for creation.\n - REASON_CANNOT_CREATE_DEACTIVATED_USERS: Cannot create deactivated users\n - REASON_FIELD_CHANGE_NOT_ALLOWED_FOR_CALLER: Caller does not have permission to change this field for this action type.\n - REASON_INVALID_VALUE_GENERIC: Generic invalid field value error.\nAvoid using in favor of defining a specific failure case.\n - REASON_INVALID_SEAT_PERMISSION_SET_COMBINATION: Invalid permission set/seat assignment.\n - REASON_INVALID_VALUE_PASSWORD_TOO_WEAK: Password does not match password requirements\n - REASON_INVALID_VALUE_PASSWORD_CANNOT_UPDATE_USERS_PASSWORD: Updating an existing users password is not supported\n - REASON_INVALID_VALUE_REFERENCE_NAME_DOES_NOT_FOUND: Invalid site, group, or attribute Name reference.\n - REASON_INVALID_VALUE_REFERENCE_ID_DOES_NOT_FOUND: Invalid site, group, or attribute ID reference.\n - REASON_PERMISSION_SET_PERMISSION_DENIED: Requester does not have the permission(s) needed to interact with Permission Sets for other users\n - REASON_PERMISSION_SET_USER_NOT_ACTIVE: The requested user is not active and therefore cannot have Permission Set interactions\n - REASON_PERMISSION_SET_NOT_FOUND: The requested Permission Set cannot be found in the organisation\n - REASON_INVALID_PERMISSION_SET_FOR_ORGANISATION_TIER: The Permission Set is not allowed to be associated with this type of organisation.\nEx: Trying to use a custom Permission Set in a Free organisation (which is only allowed in Paid orgs)\n - REASON_USER_ATTRIBUTE_DUPLICATE_ATTRIBUTE: User attribute has already been declared in the input for this user\n - REASON_USER_ATTRIBUTE_NOT_FOUND: User attribute could not be found in the user's organisation\n - REASON_USER_ATTRIBUTE_INVALID_ATTRIBUTE_TYPE: User attribute type is not supported.\nThis may indicate a new field type has been added, but the service has not been updated to work out how to sanitise it\n - REASON_USER_ATTRIBUTE_INVALID_SELECT_VALUE: Provided value is not one of the values allowed by this Select field\n - REASON_USER_ATTRIBUTE_INVALID_USER_ID_VALUE: Provided value cannot be coerced to a User ID format\n - REASON_USER_ATTRIBUTE_INVALID_TIMESTAMP_VALUE: Provided value cannot be coerced to a Timestamp format\n - REASON_USER_ATTRIBUTE_INVALID_STRING_VALUE: Provided String value is not allowed.\nEx: a non-nil, empty string\n - REASON_INVALID_SEAT_TYPE_FOR_ORGANISATION_TIER: Invalid seat type for the organisation tier, i.e. using lite seats on a free team.\n - REASON_SEAT_LIMIT_REACHED: The request exceeds the seat limit\n - REASON_GROUP_NOT_FOUND: Group is not found, or does not exist in the current organisation\n - REASON_GROUP_DUPLICATE_ENTRY: Group has already been declared in the input for this user\n - REASON_GROUP_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Group is not allowed to be assigned to a user that is - or will be - deactivated\n - REASON_GROUP_INVALID_REMOVE_REFERENCE: Group remove reference is invalid\n - REASON_GROUP_ASSOCIATION_LIMIT_REACHED: User cannot be assigned to more then 100 groups\n - REASON_GROUP_REFERENCE_AMBIGUOUS: Group reference is ambiguous, i.e. multiple groups with the same name\n - REASON_SITE_NOT_FOUND: Site is not found, or does not exist in the current organisation\n - REASON_SITE_DUPLICATE_ENTRY: Site has already been declared in the input for this user\n - REASON_SITE_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Site is not allowed to be assigned to a user that is - or will be - deactivated\n - REASON_USER_ALREADY_ASSIGNED_TO_ANCESTOR_SITE: User is already assigned to a site further up the hierarchy (ex: requesting Site, but user is already in ancestor Country)\n - REASON_SITE_INVALID_REMOVE_REFERENCE: Site remove reference is invalid\n - REASON_SITE_ASSOCIATION_LIMIT_REACHED: User is already associated with the maximum number of sites\n - REASON_SITE_REFERENCE_AMBIGUOUS: Site reference is ambiguous, i.e. multiple sites with the same name\n - REASON_USER_ATTRIBUTE_DISABLED: User attribute is disabled\n - REASON_LAST_ADMINISTRATOR: Changing this permission set, or status will remove the last admin for the org\n - REASON_FIELD_VALUE_INVALID_MIN_LENGTH: Field value does not meet the minimum length\n - REASON_FIELD_VALUE_INVALID_MAX_LENGTH: Field value does exceeds the maximum length\n - REASON_COMPANY_NOT_FOUND: Company is not found, or does not exist in the current organisation\n - REASON_COMPANY_DUPLICATE_ENTRY: Company has already been declared in the input for this user\n - REASON_COMPANY_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Company is not allowed to be assigned to a user that is - or will be - deactivated\n - REASON_COMPANY_INVALID_REMOVE_REFERENCE: Company remove reference is invalid\n - REASON_COMPANY_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_CALLER: Caller does not have permissions to modify user membership for this company\n - REASON_GROUP_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_DYNAMIC_GROUP: Group membership cannot be manually assigned to dynamic groups with automated membership rules\n - REASON_SITE_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_DYNAMIC_SITE: Site membership cannot be manually assigned to dynamic sites with automated membership rules"
            },
            "s12.users.v1.CreateOrUpdateResponseUser.Field": {
                "type": "string",
                "enum": [
                    "FIELD_UNSPECIFIED",
                    "FIELD_ID",
                    "FIELD_USERNAME",
                    "FIELD_FIRST_NAME",
                    "FIELD_LAST_NAME",
                    "FIELD_PASSWORD",
                    "FIELD_SEAT_TYPE",
                    "FIELD_TIMEZONE",
                    "FIELD_STATUS",
                    "FIELD_LANGUAGE",
                    "FIELD_PERMISSION_SET_REFERENCE",
                    "FIELD_GROUPS",
                    "FIELD_SITES",
                    "FIELD_ATTRIBUTES",
                    "FIELD_COMPANIES"
                ],
                "default": "FIELD_UNSPECIFIED",
                "title": "- FIELD_UNSPECIFIED: Unknown or unspecified field\n - FIELD_ID: `id` field\n - FIELD_USERNAME: `username` field\n - FIELD_FIRST_NAME: `first_name` field\n - FIELD_LAST_NAME: `last_name` field\n - FIELD_PASSWORD: `password` field\n - FIELD_SEAT_TYPE: `seat_type` field\n - FIELD_TIMEZONE: `timezone` field\n - FIELD_STATUS: `status` field\n - FIELD_LANGUAGE: `language` field\n - FIELD_PERMISSION_SET_REFERENCE: `permission_set_reference` field\n - FIELD_GROUPS: `groups` field\n - FIELD_SITES: `sites` field\n - FIELD_ATTRIBUTES: `attributes` field\n - FIELD_COMPANIES: `companies` field"
            },
            "s12.users.v1.CreateOrUpdateResponseUser.Operation": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Action"
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Status"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Field"
                        },
                        "description": "The fields to be updated."
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateResponseUser.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_PENDING",
                    "STATUS_ERRORED",
                    "STATUS_VALIDATED",
                    "STATUS_VALIDATED_WITH_ERRORS",
                    "STATUS_COMPLETED",
                    "STATUS_COMPLETED_WITH_ERRORS"
                ],
                "default": "STATUS_UNSPECIFIED",
                "description": "PENDING --> ERRORED : Blocking errors (e.g. invalid username)\nPENDING --> VALIDATED : No errors\nPENDING --> VALIDATED_WITH_ERRORS : Non blocking errors\n\nVALIDATED --> ERRORED : Blocking errors (e.g. create failed)\nVALIDATED --> COMPLETED : No errors\nVALIDATED --> COMPLETED_WITH_ERRORS : Non blocking errors\n\nVALIDATED_WITH_ERRORS --> ERRORED : Blocking errors\nVALIDATED_WITH_ERRORS --> COMPLETED_WITH_ERRORS : Non blocking errors\n```\n\n - STATUS_PENDING: User pending validation.\n - STATUS_ERRORED: Critical blocking error.\n - STATUS_VALIDATED: User was successfully validated with no errors. Now pending create or update.\n - STATUS_VALIDATED_WITH_ERRORS: User was validated, but there was non-blocking errors. Now pending create or update.\n - STATUS_COMPLETED: User was created or updated with no errors.\n - STATUS_COMPLETED_WITH_ERRORS: User was created or updated with non blocking errors.",
                "title": "```mermaid\nstateDiagram-v2\nPENDING\nERRORED\nVALIDATED\nVALIDATED_WITH_ERRORS\nCOMPLETED\nCOMPLETED_WITH_ERRORS"
            },
            "s12.users.v1.CreateOrUpdateSeatUsage": {
                "type": "object",
                "properties": {
                    "used": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.SeatUsageMap"
                        },
                        "description": "The number of seats used for each type, up to the available limit\nIf you have 10 seats available, and the request wants to use 11 the value will be 10."
                    },
                    "required": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.SeatUsageMap"
                        },
                        "description": "The additional number of seats required for the request to be fully successful."
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Optional. At least one of `user_id` or `username` is REQUIRED. ID of the user for updates."
                    },
                    "username": {
                        "type": "string",
                        "description": "Either `user_id` or `username` is required. Represents the user's email address or username."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "User's first name."
                    },
                    "last_name": {
                        "type": "string",
                        "description": "User's last name."
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the user. This field is used only during user creation."
                    },
                    "seat_type": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone, must be a valid timezone in the IANA time zone database."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.common.UserActiveStatus"
                    },
                    "language": {
                        "$ref": "#/components/schemas/s12.common.Language"
                    },
                    "permission_set": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                    },
                    "groups": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Memberships"
                    },
                    "sites": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Memberships"
                    },
                    "companies": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Memberships"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Attribute"
                        },
                        "description": "User field attributes."
                    },
                    "email_settings": {
                        "$ref": "#/components/schemas/s12.users.v1.EmailSettings"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUser.Attribute": {
                "type": "object",
                "properties": {
                    "reference": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Attribute.Value"
                        }
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUser.Attribute.Value": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "description": "Indicates whether the value is valid and will be applied to the user."
                    },
                    "string_value": {
                        "type": "string",
                        "description": "The string value of a field."
                    },
                    "timestamp_value": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp value of a field."
                    },
                    "uuid_value": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUser.Memberships": {
                "type": "object",
                "properties": {
                    "remove": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                        },
                        "description": "References from which the user will be removed. ONLY supports \"*\" to remove from all existing references."
                    },
                    "add": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUser.Reference"
                        },
                        "description": "References to assign the user to. Each must be a valid, case-sensitive name or ID for the resource."
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUser.Reference": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the resource."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the resource."
                    },
                    "valid": {
                        "type": "boolean",
                        "description": "Read-only. Indicates whether the reference is valid and will be applied to the user."
                    },
                    "hierarchy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "map of the hierarchy of the reference, such as a group or site.\nThe target resource is the last element in the hierarchy."
                    }
                },
                "description": "A reference to another resource, such as a group, site, or permission set.\nAt least one of `id` or `name` is required.\nIf both are provided, the `id` is used and `name` is ignored.\nIf only `name` is provided, it resolves the corresponding `id`."
            },
            "s12.users.v1.CreateOrUpdateUserOrigin": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUserOrigin.Source"
                    },
                    "description": {
                        "type": "string",
                        "title": "Additional description or context about the operation"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUserOrigin.Source": {
                "type": "string",
                "enum": [
                    "SOURCE_UNSPECIFIED",
                    "SOURCE_CSV",
                    "SOURCE_PUBLIC_API",
                    "SOURCE_INTEGRATION_UNKNOWN"
                ],
                "default": "SOURCE_UNSPECIFIED",
                "description": "- SOURCE_CSV: User was imported from a CSV file\n - SOURCE_PUBLIC_API: User was created/updated via Public API\n - SOURCE_INTEGRATION_UNKNOWN: User was created/updated via an integration but source is unknown",
                "title": "Source of the user operation"
            },
            "s12.users.v1.CreateOrUpdateUsersJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the job."
                    },
                    "status": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersJob.Status"
                    },
                    "total_users": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total users expected to be created or updated."
                    },
                    "user_field_counts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.UserFieldMap"
                        },
                        "description": "The count of field changes for this job.\nThis is a map of field to the number of users that have that field changed."
                    },
                    "user_status_counts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.UserStatusMap"
                        },
                        "description": "The count of user statuses for this job.\nThis is a map of status to the number of users that have that status."
                    },
                    "user_action_counts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.UserActionMap"
                        },
                        "description": "The count of user actions (create/update) for this job.\nThis is a map of action to the number of users that have that action."
                    },
                    "initiated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time this job initiated, i.e. when InitCreateOrUpdateUsersJob was first called."
                    },
                    "validated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time this job was validated.\nThis is when the job was validated by StartCreateOrUpdateUsersJob."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time this job started executing.\nThis is when the job was started by StartCreateOrUpdateUsersJob and put on the queue."
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time this job completed executing."
                    },
                    "creator_id": {
                        "type": "string",
                        "description": "The ID of the user who started this job."
                    },
                    "seat_usage": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateSeatUsage"
                    },
                    "origin": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUserOrigin"
                    },
                    "validate_only": {
                        "type": "boolean",
                        "title": "Whether the job is a ValidateOnly job"
                    }
                }
            },
            "s12.users.v1.CreateOrUpdateUsersJob.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_PENDING",
                    "STATUS_ERRORED",
                    "STATUS_VALIDATING",
                    "STATUS_VALIDATED",
                    "STATUS_VALIDATED_WITH_ERRORS",
                    "STATUS_EXECUTING",
                    "STATUS_COMPLETED",
                    "STATUS_COMPLETED_WITH_ERRORS",
                    "STATUS_CANCELLED"
                ],
                "default": "STATUS_UNSPECIFIED",
                "description": "PENDING --> ERRORED : Blocking errors (e.g. putting the job on the queue errored)\nPENDING --> VALIDATING\nPENDING --> CANCELLED\n\nVALIDATING --> VALIDATED : No errors\nVALIDATING --> VALIDATED_WITH_ERRORS : Non blocking errors\nVALIDATING --> ERRORED : Blocking errors (e.g. putting the job on the queue errored)\nVALIDATING --> EXECUTING\nVALIDATING --> CANCELLED\n\nEXECUTING --> COMPLETED : No errors\nEXECUTING --> COMPLETED_WITH_ERRORS : Non blocking errors\nEXECUTING --> ERRORED : Blocking errors\nEXECUTING --> CANCELLED\n```\n\n - STATUS_PENDING: Job pending validation.\n - STATUS_ERRORED: Job has critical blocking error.\n - STATUS_VALIDATING: Job is currently validating.\n - STATUS_VALIDATED: Job was successfully validated with no errors. Now pending create or update.\n - STATUS_VALIDATED_WITH_ERRORS: Job was validated, but there was non-blocking errors. Now pending create or update.\n - STATUS_EXECUTING: Job is currently creating or updating.\n - STATUS_COMPLETED: Job created or updated with no errors.\n - STATUS_COMPLETED_WITH_ERRORS: Job created or updated with non blocking errors.\n - STATUS_CANCELLED: Job was cancelled.",
                "title": "```mermaid\nstateDiagram-v2\nPENDING\nERRORED\nVALIDATING\nVALIDATED\nVALIDATED_WITH_ERRORS\nEXECUTING\nCOMPLETED\nCOMPLETED_WITH_ERRORS\nCANCELLED"
            },
            "s12.users.v1.CreateOrUpdateUsersRequest": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateRequestUser"
                        }
                    },
                    "validate_only": {
                        "type": "boolean",
                        "description": "Only validate the data, don't apply the changes."
                    },
                    "email_settings": {
                        "$ref": "#/components/schemas/s12.users.v1.EmailSettings"
                    }
                },
                "required": [
                    "users"
                ]
            },
            "s12.users.v1.CreateOrUpdateUsersResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser"
                        }
                    },
                    "seat_usage": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateSeatUsage"
                    }
                }
            },
            "s12.users.v1.EmailSettings": {
                "type": "object",
                "properties": {
                    "send_email": {
                        "type": "boolean",
                        "description": "Send a welcome email to newly created users."
                    }
                }
            },
            "s12.users.v1.GetCreateOrUpdateUsersJobResponse": {
                "type": "object",
                "properties": {
                    "job": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersJob"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser"
                        },
                        "title": "User details"
                    },
                    "page_token": {
                        "type": "string",
                        "description": "Token to request the next batch of users, if empty there are no more users."
                    }
                }
            },
            "s12.users.v1.InitCreateOrUpdateUsersJobRequest": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "string",
                        "description": "ID of the job to add users to, if this is the first request this is optional."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateRequestUser"
                        }
                    }
                }
            },
            "s12.users.v1.InitCreateOrUpdateUsersJobResponse": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "string",
                        "description": "ID of the job that was started."
                    },
                    "users_count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of users in the request"
                    }
                }
            },
            "s12.users.v1.ListCreateOrUpdateUsersJobsRequest": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/s12.users.v1.ListCreateOrUpdateUsersJobsRequest.Filter"
                    }
                }
            },
            "s12.users.v1.ListCreateOrUpdateUsersJobsRequest.Filter": {
                "type": "object",
                "properties": {
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersJob.Status"
                        },
                        "description": "Filter by job status."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "Filter by user ID who started the job."
                    }
                }
            },
            "s12.users.v1.ListCreateOrUpdateUsersJobsResponse": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUsersJob"
                        },
                        "description": "List of jobs sorted by most recent."
                    }
                }
            },
            "s12.users.v1.SeatUsageMap": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/s12.common.SubscriptionSeatTypes"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "s12.users.v1.StartCreateOrUpdateUsersJobResponse": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "string"
                    }
                }
            },
            "s12.users.v1.UserActionMap": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Action"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users with this action."
                    }
                },
                "description": "UserActionMap is a map of counts of user actions for a given job."
            },
            "s12.users.v1.UserFieldMap": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Field"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users with this field changed."
                    }
                },
                "description": "UserFieldMap is a map of counts of user field changes for a given job."
            },
            "s12.users.v1.UserStatusMap": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateResponseUser.Status"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of users with this status."
                    }
                },
                "description": "UserStatusMap is a map of counts of user statuses for a given job."
            },
            "s12.users.v1.UsersService.StartCreateOrUpdateUsersJobBody": {
                "type": "object",
                "properties": {
                    "validate_only": {
                        "type": "boolean",
                        "description": "If this job should be validate only."
                    },
                    "email_settings": {
                        "$ref": "#/components/schemas/s12.users.v1.EmailSettings"
                    },
                    "origin": {
                        "$ref": "#/components/schemas/s12.users.v1.CreateOrUpdateUserOrigin"
                    }
                }
            },
            "s12.webhooks.v1.CreateWebhookRequest": {
                "type": "object",
                "properties": {
                    "trigger_events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.webhooks.v1.TriggerEvent"
                        },
                        "description": "The list of event types to trigger the webhook. Cannot be empty."
                    },
                    "url": {
                        "type": "string",
                        "description": "The webhook destination URL."
                    }
                },
                "description": "The parameters for `CreateWebhook`",
                "title": "CreateWebhookRequest",
                "required": [
                    "trigger_events",
                    "url"
                ]
            },
            "s12.webhooks.v1.CreateWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/s12.webhooks.v1.WebhookResponse"
                    }
                },
                "description": "Result returned from `CreateWebhook`",
                "title": "CreateWebhookResponse"
            },
            "s12.webhooks.v1.DeleteWebhookResponse": {
                "type": "object",
                "description": "Result returned from `DeleteWebhook`",
                "title": "DeleteWebhookResponse"
            },
            "s12.webhooks.v1.GenerateTokenRequest": {
                "type": "object",
                "description": "The parameters for `GenerateToken`",
                "title": "GenerateTokenRequest"
            },
            "s12.webhooks.v1.GenerateTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "description": "Result returned from `GenerateToken`",
                "title": "GenerateTokenResponse"
            },
            "s12.webhooks.v1.GetTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Organisation Secret token."
                    }
                },
                "description": "Result returned from `GetToken`",
                "title": "GetTokenResponse"
            },
            "s12.webhooks.v1.GetWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/s12.webhooks.v1.WebhookResponse"
                    }
                },
                "description": "Result returned from `GetWebhook`",
                "title": "GetWebhookResponse"
            },
            "s12.webhooks.v1.ListWebhooksResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.webhooks.v1.WebhookResponse"
                        },
                        "description": "A list of webhooks."
                    }
                },
                "description": "Result returned from `ListWebhooks`",
                "title": "ListWebhooksResponse"
            },
            "s12.webhooks.v1.TriggerEvent": {
                "type": "string",
                "enum": [
                    "TRIGGER_EVENT_INSPECTION_STARTED",
                    "TRIGGER_EVENT_INSPECTION_UPDATED",
                    "TRIGGER_EVENT_INSPECTION_COMPLETED",
                    "TRIGGER_EVENT_INSPECTION_ARCHIVED",
                    "TRIGGER_EVENT_INSPECTION_UNARCHIVED",
                    "TRIGGER_EVENT_INSPECTION",
                    "TRIGGER_EVENT_INSPECTION_METADATA",
                    "TRIGGER_EVENT_INSPECTION_HAS_STARTED",
                    "TRIGGER_EVENT_INSPECTION_CLONED",
                    "TRIGGER_EVENT_INSPECTION_COMPLETED_STATUS",
                    "TRIGGER_EVENT_INSPECTION_LOCATION",
                    "TRIGGER_EVENT_INSPECTION_DURATION",
                    "TRIGGER_EVENT_INSPECTION_ARCHIVED_STATUS",
                    "TRIGGER_EVENT_INSPECTION_DELETED_STATUS",
                    "TRIGGER_EVENT_INSPECTION_OWNER",
                    "TRIGGER_EVENT_INSPECTION_ACCESS",
                    "TRIGGER_EVENT_INSPECTION_ORGANISATION",
                    "TRIGGER_EVENT_INSPECTION_ITEM_UPDATED",
                    "TRIGGER_EVENT_INSPECTION_ITEM_SITE",
                    "TRIGGER_EVENT_INSPECTION_ITEM_TEXT",
                    "TRIGGER_EVENT_INSPECTION_ITEM_TEMPERATURE",
                    "TRIGGER_EVENT_INSPECTION_ITEM_ADDRESS",
                    "TRIGGER_EVENT_INSPECTION_ITEM_ASSET",
                    "TRIGGER_EVENT_INSPECTION_ITEM_DATETIME",
                    "TRIGGER_EVENT_INSPECTION_ITEM_CHECKBOX",
                    "TRIGGER_EVENT_INSPECTION_ITEM_DYNAMIC_FIELD",
                    "TRIGGER_EVENT_INSPECTION_ITEM_LIST",
                    "TRIGGER_EVENT_INSPECTION_ITEM_QUESTION",
                    "TRIGGER_EVENT_INSPECTION_ITEM_MEDIA",
                    "TRIGGER_EVENT_INSPECTION_ITEM_DRAWING",
                    "TRIGGER_EVENT_INSPECTION_ITEM_SIGNATURE",
                    "TRIGGER_EVENT_INSPECTION_ITEM_SLIDER",
                    "TRIGGER_EVENT_INSPECTION_ITEM_NOTE",
                    "TRIGGER_EVENT_ACTION_CREATED",
                    "TRIGGER_EVENT_ACTION_TITLE_UPDATED",
                    "TRIGGER_EVENT_ACTION_DESCRIPTION_UPDATED",
                    "TRIGGER_EVENT_ACTION_DATE_DUE_UPDATED",
                    "TRIGGER_EVENT_ACTION_STATUS_UPDATED",
                    "TRIGGER_EVENT_ACTION_PRIORITY_UPDATED",
                    "TRIGGER_EVENT_ACTION_COLLABORATORS_REMOVED",
                    "TRIGGER_EVENT_ACTION_COLLABORATORS_ADDED",
                    "TRIGGER_EVENT_ACTION_CATEGORY_UPDATED",
                    "TRIGGER_EVENT_ACTION_SITE_UPDATED",
                    "TRIGGER_EVENT_ACTION_DELETED",
                    "TRIGGER_EVENT_ACTION_ORG_UPDATED",
                    "TRIGGER_EVENT_ACTION_COLLABORATORS_UPDATED",
                    "TRIGGER_EVENT_ACTION_ASSET_UPDATED",
                    "TRIGGER_EVENT_ACTION_LABELS_UPDATED",
                    "TRIGGER_EVENT_ACTION_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_CREATED",
                    "TRIGGER_EVENT_INCIDENT_TITLE_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_DESCRIPTION_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_DATE_DUE_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_STATUS_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_PRIORITY_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_COLLABORATORS_REMOVED",
                    "TRIGGER_EVENT_INCIDENT_COLLABORATORS_ADDED",
                    "TRIGGER_EVENT_INCIDENT_CATEGORY_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_SITE_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_DELETED",
                    "TRIGGER_EVENT_INCIDENT_ORG_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_COLLABORATORS_UPDATED",
                    "TRIGGER_EVENT_INCIDENT_UPDATED",
                    "TRIGGER_EVENT_MEDIA_UPLOADED",
                    "TRIGGER_EVENT_TRAINING_COURSE_OPENED",
                    "TRIGGER_EVENT_TRAINING_COURSE_COMPLETED",
                    "TRIGGER_EVENT_TRAINING_COURSE_EXPIRED",
                    "TRIGGER_EVENT_TRAINING_COURSE_RESET",
                    "TRIGGER_EVENT_TRAINING_LESSON_OPENED",
                    "TRIGGER_EVENT_TRAINING_LESSON_COMPLETED",
                    "TRIGGER_EVENT_TRAINING_COURSE_CREATED",
                    "TRIGGER_EVENT_TRAINING_COURSE_UPDATED",
                    "TRIGGER_EVENT_TRAINING_COURSE_PUBLISHED",
                    "TRIGGER_EVENT_TRAINING_COURSE_REPUBLISHED",
                    "TRIGGER_EVENT_TRAINING_COURSE_UNPUBLISHED",
                    "TRIGGER_EVENT_TRAINING_COURSE_DELETED",
                    "TRIGGER_EVENT_TRAINING_LESSON_CREATED",
                    "TRIGGER_EVENT_TRAINING_LESSON_UPDATED",
                    "TRIGGER_EVENT_TRAINING_LESSON_PUBLISHED",
                    "TRIGGER_EVENT_TRAINING_LESSON_UNPUBLISHED",
                    "TRIGGER_EVENT_TRAINING_LESSON_DELETED"
                ],
                "description": "- TRIGGER_EVENT_INSPECTION_STARTED: @deprecated use TRIGGER_EVENT_INSPECTION_HAS_STARTED instead\n - TRIGGER_EVENT_INSPECTION_UPDATED: @deprecated use TRIGGER_EVENT_INSPECTION instead\n - TRIGGER_EVENT_INSPECTION_COMPLETED: @deprecated use TRIGGER_EVENT_INSPECTION_COMPLETED_STATUS instead\n - TRIGGER_EVENT_INSPECTION_ARCHIVED: @deprecated use TRIGGER_EVENT_INSPECTION_ARCHIVED_STATUS instead\n - TRIGGER_EVENT_INSPECTION_UNARCHIVED: @deprecated use TRIGGER_EVENT_INSPECTION_ARCHIVED_STATUS instead\n - TRIGGER_EVENT_INSPECTION: TRIGGER_EVENT_INSPECTION is a bundle trigger event\nequivalent to subscribing to all inspection events\n - TRIGGER_EVENT_INSPECTION_METADATA: TRIGGER_EVENT_INSPECTION_METADATA is a bundle trigger event\nequivalent to subscribing to 8-17 individually\n - TRIGGER_EVENT_INSPECTION_ITEM_UPDATED: TRIGGER_EVENT_INSPECTION_CONTENT is a bundle trigger event\nequivalent to subscribing to 19-33 individually\n - TRIGGER_EVENT_ACTION_CREATED: Action Created\n - TRIGGER_EVENT_ACTION_TITLE_UPDATED: Action Updated\n - TRIGGER_EVENT_ACTION_DESCRIPTION_UPDATED: Action description updated\n - TRIGGER_EVENT_ACTION_DATE_DUE_UPDATED: Action Due Date Updated\n - TRIGGER_EVENT_ACTION_STATUS_UPDATED: Action Status Updated\n - TRIGGER_EVENT_ACTION_PRIORITY_UPDATED: Action Priority Updated\n - TRIGGER_EVENT_ACTION_COLLABORATORS_REMOVED: Action Collaborators Removed\n - TRIGGER_EVENT_ACTION_COLLABORATORS_ADDED: Action Collaborators Added\n - TRIGGER_EVENT_ACTION_CATEGORY_UPDATED: Action Category Updated\n - TRIGGER_EVENT_ACTION_SITE_UPDATED: Action Site Updated\n - TRIGGER_EVENT_ACTION_DELETED: Action Deleted\n - TRIGGER_EVENT_ACTION_ORG_UPDATED: Action Organisation Updated\n - TRIGGER_EVENT_ACTION_COLLABORATORS_UPDATED: Action Collaborators Updated\n - TRIGGER_EVENT_ACTION_ASSET_UPDATED: Action Asset Updated\n - TRIGGER_EVENT_ACTION_LABELS_UPDATED: Action Labels Updated\n - TRIGGER_EVENT_ACTION_UPDATED: Action Updated\n - TRIGGER_EVENT_INCIDENT_CREATED: Incident Created\n - TRIGGER_EVENT_INCIDENT_TITLE_UPDATED: Incident Updated\n - TRIGGER_EVENT_INCIDENT_DESCRIPTION_UPDATED: Incident description updated\n - TRIGGER_EVENT_INCIDENT_DATE_DUE_UPDATED: Incident Due Date Updated\n - TRIGGER_EVENT_INCIDENT_STATUS_UPDATED: Incident Status Updated\n - TRIGGER_EVENT_INCIDENT_PRIORITY_UPDATED: Incident Priority Updated\n - TRIGGER_EVENT_INCIDENT_COLLABORATORS_REMOVED: Incident Collaborators Removed\n - TRIGGER_EVENT_INCIDENT_COLLABORATORS_ADDED: Incident Collaborators Added\n - TRIGGER_EVENT_INCIDENT_CATEGORY_UPDATED: Incident Category Updated\n - TRIGGER_EVENT_INCIDENT_SITE_UPDATED: Incident Site Updated\n - TRIGGER_EVENT_INCIDENT_DELETED: Incident Deleted\n - TRIGGER_EVENT_INCIDENT_ORG_UPDATED: Incident Organisation Updated\n - TRIGGER_EVENT_INCIDENT_COLLABORATORS_UPDATED: Incident Collaborators Updated\n - TRIGGER_EVENT_INCIDENT_UPDATED: Incident Updated\n - TRIGGER_EVENT_MEDIA_UPLOADED: Media uploaded\n - TRIGGER_EVENT_TRAINING_COURSE_OPENED: A user has opened a course\n - TRIGGER_EVENT_TRAINING_COURSE_COMPLETED: A user has completed a course\n - TRIGGER_EVENT_TRAINING_COURSE_EXPIRED: A users course completion has expired\n - TRIGGER_EVENT_TRAINING_COURSE_RESET: A users course progress has been reset\n - TRIGGER_EVENT_TRAINING_LESSON_OPENED: A user has opened a lesson\n - TRIGGER_EVENT_TRAINING_LESSON_COMPLETED: A user has completed a lesson\n - TRIGGER_EVENT_TRAINING_COURSE_CREATED: A course was created\n - TRIGGER_EVENT_TRAINING_COURSE_UPDATED: A course was updated\n - TRIGGER_EVENT_TRAINING_COURSE_PUBLISHED: A course was published\n - TRIGGER_EVENT_TRAINING_COURSE_REPUBLISHED: A course was re-published\n - TRIGGER_EVENT_TRAINING_COURSE_UNPUBLISHED: A course was un-published\n - TRIGGER_EVENT_TRAINING_COURSE_DELETED: A course was deleted\n - TRIGGER_EVENT_TRAINING_LESSON_CREATED: A lesson was created\n - TRIGGER_EVENT_TRAINING_LESSON_UPDATED: A lesson was updated\n - TRIGGER_EVENT_TRAINING_LESSON_PUBLISHED: A lesson was published\n - TRIGGER_EVENT_TRAINING_LESSON_UNPUBLISHED: A lesson was un-published\n - TRIGGER_EVENT_TRAINING_LESSON_DELETED: A lesson was deleted",
                "title": "Webhook trigger event types"
            },
            "s12.webhooks.v1.UpdateWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/s12.webhooks.v1.WebhookResponse"
                    }
                },
                "description": "Result returned from `UpdateWebhook`",
                "title": "UpdateWebhookResponse"
            },
            "s12.webhooks.v1.WebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook_id": {
                        "type": "string",
                        "description": "Webhook unique identifier."
                    },
                    "trigger_events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.webhooks.v1.TriggerEvent"
                        },
                        "description": "List of event types to trigger the webhook."
                    },
                    "url": {
                        "type": "string",
                        "description": "The webhook destination URL."
                    },
                    "user_id": {
                        "type": "string",
                        "description": "The unique identifier of the user registering the webhook."
                    },
                    "organisation_id": {
                        "type": "string",
                        "description": "The unique identifier of the organisation registering the webhook."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "value = True if the webhook is enabled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the webhook was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the webhook was last updated."
                    }
                }
            },
            "s12.webhooks.v1.WebhooksService.UpdateWebhookBody": {
                "type": "object",
                "properties": {
                    "trigger_events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/s12.webhooks.v1.TriggerEvent"
                        },
                        "description": "The list of event types to trigger the webhook."
                    },
                    "url": {
                        "type": "string",
                        "description": "The webhook destination URL."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The enabled state of the webhook. True = enabled."
                    }
                },
                "description": "The parameters for `UpdateWebhook`",
                "title": "UpdateWebhookRequest"
            }
        },
        "securitySchemes": {
            "BearerAuthentication": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "x-readme": {
        "metrics-enabled": false,
        "proxy-enabled": false,
        "samples-languages": [
            "curl",
            "node",
            "ruby",
            "javascript",
            "python"
        ],
        "explorer-enabled": true
    },
    "security": [
        {
            "BearerAuthentication": []
        }
    ]
}